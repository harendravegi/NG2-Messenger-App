{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e5c12aa9ad3f2e5879a5","webpack:///./ng2.ts","webpack:///./core.ts","webpack:///./common/module.ts","webpack:///./common/common.ts","webpack:///./common/predicates.ts","webpack:///./common/hof.ts","webpack:///./common/coreservices.ts","webpack:///./common/glob.ts","webpack:///./common/queue.ts","webpack:///./common/strings.ts","webpack:///./transition/rejectFactory.ts","webpack:///./transition/transition.ts","webpack:///./common/trace.ts","webpack:///./transition/module.ts","webpack:///./transition/hookBuilder.ts","webpack:///./transition/hookRegistry.ts","webpack:///./transition/transitionHook.ts","webpack:///./state/module.ts","webpack:///./state/state.ts","webpack:///./state/stateBuilder.ts","webpack:///./params/module.ts","webpack:///./params/param.ts","webpack:///./url/urlMatcherConfig.ts","webpack:///./params/type.ts","webpack:///./params/paramTypes.ts","webpack:///./params/stateParams.ts","webpack:///./state/hooks/transitionManager.ts","webpack:///./state/targetState.ts","webpack:///./state/hooks/viewHooks.ts","webpack:///./state/hooks/enterExitHooks.ts","webpack:///./state/hooks/resolveHooks.ts","webpack:///./resolve/interface.ts","webpack:///./resolve/resolvable.ts","webpack:///./state/stateObject.ts","webpack:///./state/stateMatcher.ts","webpack:///./state/stateQueueManager.ts","webpack:///./state/stateRegistry.ts","webpack:///./state/stateService.ts","webpack:///./path/pathFactory.ts","webpack:///./path/node.ts","webpack:///./resolve/module.ts","webpack:///./resolve/resolveContext.ts","webpack:///./resolve/resolveInjector.ts","webpack:///./transition/transitionService.ts","webpack:///./path/module.ts","webpack:///./url/module.ts","webpack:///./url/urlMatcher.ts","webpack:///./url/urlMatcherFactory.ts","webpack:///./url/urlRouter.ts","webpack:///./view/module.ts","webpack:///./view/view.ts","webpack:///./globals.ts","webpack:///./router.ts","webpack:///./justjs.ts","webpack:///./ng2/providers.ts","webpack:///external {\"root\":\"@angular/core\",\"amd\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"commonjs\":\"@angular/core\"}","webpack:///./ng2/uiView.ts","webpack:///./ng2/componentUtil.ts","webpack:///./ng2/viewsBuilder.ts","webpack:///./ng2/uiRouterConfig.ts","webpack:///./ng2/location.ts","webpack:///external {\"root\":\"@angular/common\",\"amd\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"commonjs\":\"@angular/common\"}","webpack:///./ng2/directives.ts","webpack:///./ng2/uiSref.ts","webpack:///./ng2/uiSrefActive.ts","webpack:///./ng2/uiSrefStatus.ts"],"names":[],"mappings":"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","file":"ui-router-ng2.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-router-ng2\", [\"@angular/core\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-router-ng2\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ui-router-ng2\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_55__, __WEBPACK_EXTERNAL_MODULE_61__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e5c12aa9ad3f2e5879a5\n **/","/**\n * Main entry point for angular 2.x build\n * @module ng2\n */\n/** for typedoc */\n\nexport * from \"./core\";\nimport \"./justjs\";\n\nexport * from \"./ng2/interface\";\nexport * from \"./ng2/providers\";\nexport * from \"./ng2/location\";\nexport * from \"./ng2/directives\";\nexport * from \"./ng2/viewsBuilder\";\nexport * from \"./ng2/uiRouterConfig\";\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2.ts\n **/","/** @module common */ /** */\n\nexport * from \"./common/module\";\nexport * from \"./params/module\";\nexport * from \"./path/module\";\nexport * from \"./resolve/module\";\nexport * from \"./state/module\";\nexport * from \"./transition/module\";\nexport * from \"./url/module\";\nexport * from \"./view/module\";\nexport * from \"./globals\";\n\nexport { UIRouter } from \"./router\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./core.ts\n **/","/** @module common */ /** for typedoc */\nexport * from \"./common\";\nexport * from \"./coreservices\";\nexport * from \"./glob\";\nexport * from \"./hof\";\nexport * from \"./predicates\";\nexport * from \"./queue\";\nexport * from \"./strings\";\nexport * from \"./trace\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/module.ts\n **/","/**\n * Random utility functions used in the UI-Router code\n *\n * @preferred @module common\n */ /** for typedoc */\n\nimport {isFunction, isString, isArray, isRegExp, isDate} from \"./predicates\";\nimport { all, any, not, prop, curry } from \"./hof\";\n\nlet w: any = typeof window === 'undefined' ? {} : window;\nlet angular = w.angular || {};\nexport const fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexport const toJson = angular.toJson || JSON.stringify.bind(JSON);\nexport const copy = angular.copy || _copy;\nexport const forEach = angular.forEach || _forEach;\nexport const extend = angular.extend || _extend;\nexport const equals = angular.equals || _equals;\nexport const identity = (x) => x;\nexport const noop = () => undefined;\n\nexport type Mapper<X, T> = (x: X, key?: (string|number)) => T;\nexport interface TypedMap<T> { [key: string]: T; }\nexport type Predicate<X> = (X) => boolean;\nexport type IInjectable = (Function|any[]);\n\nexport var abstractKey = 'abstract';\n\n/**\n * Binds and copies functions onto an object\n *\n * Takes functions from the 'from' object, binds those functions to the _this object, and puts the bound functions\n * on the 'to' object.\n *\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * @example\n * ```\n *\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * This example creates a bound version of a service function, and copies it to another object\n * @example\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param from The object which contains the functions to be bound\n * @param to The object which will receive the bound functions\n * @param bindTo The object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n */\nexport function bindFunctions(from, to, bindTo, fnNames: string[] = Object.keys(from)) {\n  return fnNames.filter(name => typeof from[name] === 'function')\n      .forEach(name => to[name] = from[name].bind(bindTo));\n}\n\n\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexport const inherit = (parent, extra) =>\n    extend(new (extend(function() {}, { prototype: parent }))(), extra);\n\n/**\n * Given an arguments object, converts the arguments at index idx and above to an array.\n * This is similar to es6 rest parameters.\n *\n * Optionally, the argument at index idx may itself already be an array.\n *\n * For example,\n * given either:\n *        arguments = [ obj, \"foo\", \"bar\" ]\n * or:\n *        arguments = [ obj, [\"foo\", \"bar\"] ]\n * then:\n *        restArgs(arguments, 1) == [\"foo\", \"bar\"]\n *\n * This allows functions like pick() to be implemented such that it allows either a bunch\n * of string arguments (like es6 rest parameters), or a single array of strings:\n *\n * given:\n *        var obj = { foo: 1, bar: 2, baz: 3 };\n * then:\n *        pick(obj, \"foo\", \"bar\");   // returns { foo: 1, bar: 2 }\n *        pick(obj, [\"foo\", \"bar\"]); // returns { foo: 1, bar: 2 }\n */\nconst restArgs = (args, idx = 0) => Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(args, idx));\n\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nconst inArray = (array: any[], obj: any) => array.indexOf(obj) !== -1;\n\n/** Given an array, and an item, if the item is found in the array, it removes it (in-place).  The same array is returned */\nexport const removeFrom = curry((array: any[], obj) => {\n  let idx = array.indexOf(obj);\n  if (idx >= 0) array.splice(idx, 1);\n  return array;\n});\n\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nexport function defaults(opts = {}, ...defaultsList) {\n  let defaults = merge.apply(null, [{}].concat(defaultsList));\n  return extend({}, defaults, pick(opts || {}, Object.keys(defaults)));\n}\n\n/**\n * Merges properties from the list of objects to the destination object.\n * If a property already exists in the destination object, then it is not overwritten.\n */\nexport function merge(dst, ...objs: Object[]) {\n  forEach(objs, function(obj) {\n    forEach(obj, function(value, key) {\n      if (!dst.hasOwnProperty(key)) dst[key] = value;\n    });\n  });\n  return dst;\n}\n\n/** Reduce function that merges each element of the list into a single object, using extend */\nexport const mergeR = (memo, item) => extend(memo, item);\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nexport function ancestors(first, second) {\n  let path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nexport function equalForKeys(a, b, keys: string[] = Object.keys(a)) {\n  for (var i = 0; i < keys.length; i++) {\n    let k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\ntype PickOmitPredicate = (keys: string[], key) => boolean;\nfunction pickOmitImpl(predicate: PickOmitPredicate, obj) {\n  let objCopy = {}, keys = restArgs(arguments, 2);\n  for (var key in obj) {\n    if (predicate(keys, key)) objCopy[key] = obj[key];\n  }\n  return objCopy;\n}\n\n/**\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nexport function pick(obj, propNames: string[]): Object;\n/**\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, 'a', 'b'); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames 1..n strings, which are the whitelisted property names\n */\nexport function pick(obj, ...propNames: string[]): Object;\n/** Return a copy of the object only containing the whitelisted properties. */\nexport function pick(obj) { return pickOmitImpl.apply(null, [inArray].concat(restArgs(arguments))); }\n\n/**\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nexport function omit(obj, propNames: string[]): Object;\n/**\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, 'a', 'b'); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames 1..n strings, which are the blacklisted property names\n */\nexport function omit(obj, ...propNames: string[]): Object;\n/** Return a copy of the object omitting the blacklisted properties. */\nexport function omit(obj) { return pickOmitImpl.apply(null, [not(inArray)].concat(restArgs(arguments))); }\n\n\n/** Given an array of objects, maps each element to a named property of the element. */\nexport function pluck(collection: any[], propName: string): any[];\n/** Given an object, maps each property of the object to a named property of the property. */\nexport function pluck(collection: { [key: string]: any }, propName: string): { [key: string]: any };\n/**\n * Maps an array, or object to a property (by name)\n */\nexport function pluck(collection, propName): any {\n  return map(collection, <Mapper<any, string>> prop(propName));\n}\n\n\n/** Given an array of objects, returns a new array containing only the elements which passed the callback predicate */\nexport function filter<T>(collection: T[], callback: (T, key?) => boolean): T[];\n/** Given an object, returns a new object with only those properties that passed the callback predicate */\nexport function filter<T>(collection: TypedMap<T>, callback: (T, key?) => boolean): TypedMap<T>;\n/** Filters an Array or an Object's properties based on a predicate */\nexport function filter<T>(collection: T, callback: Function): T {\n  let arr = isArray(collection), result: any = arr ? [] : {};\n  let accept = arr ? x => result.push(x) : (x, key) => result[key] = x;\n  forEach(collection, function(item, i) {\n    if (callback(item, i)) accept(item, i);\n  });\n  return <T>result;\n}\n\n\n/** Given an object, return the first property of that object which passed the callback predicate */\nexport function find<T>(collection: TypedMap<T>, callback: Predicate<T>): T;\n/** Given an array of objects, returns the first object which passed the callback predicate */\nexport function find<T>(collection: T[], callback: Predicate<T>): T;\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nexport function find(collection, callback) {\n  let result;\n\n  forEach(collection, function(item, i) {\n    if (result) return;\n    if (callback(item, i)) result = item;\n  });\n\n  return result;\n}\n\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexport let mapObj: <T,U>(collection: { [key: string]: T }, callback: Mapper<T,U>) => { [key: string]: U } = map;\n/** Given an array, returns a new array, where each element is transformed by the callback function */\nexport function map<T, U>(collection: T[], callback: Mapper<T, U>): U[];\nexport function map<T, U>(collection: { [key: string]: T }, callback: Mapper<T, U>): { [key: string]: U }\n/** Maps an array or object properties using a callback function */\nexport function map(collection: any, callback: any): any {\n  let result = isArray(collection) ? [] : {};\n  forEach(collection, (item, i) => result[i] = callback(item, i));\n  return result;\n}\n\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexport const values: (<T> (obj: TypedMap<T>) => T[]) = (obj) => Object.keys(obj).map(key => obj[key]);\n\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexport const allTrueR  = (memo: boolean, elem) => memo && elem;\n\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexport const anyTrueR  = (memo: boolean, elem) => memo || elem;\n\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport const unnestR   = (memo: any[], elem) => memo.concat(elem);\n\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport const flattenR  = (memo: any[], elem) => isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n/** Reduce function that pushes an object to an array, then returns the array.  Mostly just for [[flattenR]] */\nfunction pushR(arr: any[], obj) { arr.push(obj); return arr; }\n\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport const unnest    = (arr: any[]) => arr.reduce(unnestR, []);\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport const flatten   = (arr: any[]) => arr.reduce(flattenR, []);\n\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexport function assertPredicate<T>(predicate: Predicate<T>, errMsg: (string|Function) = \"assert failure\"): Predicate<T> {\n  return (obj: T) => {\n    if (!predicate(obj)) {\n      throw new Error(isFunction(errMsg) ? (<Function> errMsg)(obj) : errMsg);\n    }\n    return true;\n  };\n}\n\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexport const pairs = (object) => Object.keys(object).map(key => [ key, object[key]] );\n\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nexport function arrayTuples(...arrayArgs: any[]): any[] {\n  if (arrayArgs.length === 0) return [];\n  let length = arrayArgs.reduce((min, arr) => Math.min(arr.length, min), 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n  return Array.apply(null, Array(length)).map((ignored, idx) => arrayArgs.map(arr => arr[idx]));\n}\n\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nexport function applyPairs(memo: TypedMap<any>, keyValTuple: any[]) {\n  let key, value;\n  if (isArray(keyValTuple)) [key, value] = keyValTuple;\n  if (!isString(key)) throw new Error(\"invalid parameters to applyPairs\");\n  memo[key] = value;\n  return memo;\n}\n\n/** Get the last element of an array */\nexport function tail<T>(arr: T[]): T {\n  return arr.length && arr[arr.length - 1] || undefined;\n}\n\n/**\n * shallow copy from src to dest\n *\n * note: This is a shallow copy, while angular.copy is a deep copy.\n * ui-router uses `copy` only to make copies of state parameters.\n */\nfunction _copy(src, dest) {\n  if (dest) Object.keys(dest).forEach(key => delete dest[key]);\n  if (!dest) dest = {};\n  return extend(dest, src);\n}\n\nfunction _forEach(obj: (any[]|any), cb, _this) {\n  if (isArray(obj)) return obj.forEach(cb, _this);\n  Object.keys(obj).forEach(key => cb(obj[key], key));\n}\n\nfunction _copyProps(to, from) { Object.keys(from).forEach(key => to[key] = from[key]); return to; }\nfunction _extend(toObj, fromObj);\nfunction _extend(toObj, ...fromObj);\nfunction _extend(toObj, rest) {\n  return restArgs(arguments, 1).filter(identity).reduce(_copyProps, toObj);\n}\n\nfunction _equals(o1, o2) {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  let t1 = typeof o1, t2 = typeof o2;\n  if (t1 !== t2 || t1 !== 'object') return false;\n\n  const tup = [o1, o2];\n  if (all(isArray)(tup)) return _arraysEq(o1, o2);\n  if (all(isDate)(tup)) return o1.getTime() === o2.getTime();\n  if (all(isRegExp)(tup)) return o1.toString() === o2.toString();\n  if (all(isFunction)(tup)) return true; // meh\n\n  let predicates = [isFunction, isArray, isDate, isRegExp];\n  if (predicates.map(any).reduce((b, fn) => b || !!fn(tup), false)) return false;\n\n  let key, keys = {};\n  for (key in o1) {\n    if (!_equals(o1[key], o2[key])) return false;\n    keys[key] = true;\n  }\n  for (key in o2) {\n    if (!keys[key]) return false;\n  }\n\n  return true;\n}\n\nfunction _arraysEq(a1, a2) {\n  if (a1.length !== a2.length) return false;\n  return arrayTuples(a1, a2).reduce((b, t) => b && _equals(t[0], t[1]), true);\n}\n//\n//const _addToGroup = (result, keyFn) => (item) =>\n//  (result[keyFn(item)] = result[keyFn(item)] || []).push(item) && result;\n//const groupBy = (array, keyFn) => array.reduce((memo, item) => _addToGroup(memo, keyFn), {});\n//\n//\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/common.ts\n **/","/** Predicates @module common_predicates */ /** */\nimport {and, not, pipe, prop} from \"./hof\";\n\nconst toStr = Object.prototype.toString;\nconst tis = (t) => (x) => typeof(x) === t;\nexport const isUndefined = tis('undefined');\nexport const isDefined = not(isUndefined);\nexport const isNull = o => o === null;\nexport const isFunction = tis('function');\nexport const isNumber = tis('number');\nexport const isString = tis('string');\nexport const isObject = (x) => x !== null && typeof x === 'object';\nexport const isArray = Array.isArray;\nexport const isDate = (x) => toStr.call(x) === '[object Date]';\nexport const isRegExp = (x) => toStr.call(x) === '[object RegExp]';\n\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nexport function isInjectable(val) {\n  if (isArray(val) && val.length) {\n    let head = val.slice(0, -1), tail = val.slice(-1);\n    return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n  }\n  return isFunction(val);\n}\n\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexport const isPromise = and(isObject, pipe(prop('then'), isFunction));\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/predicates.ts\n **/","/**\n * Higher order functions\n *\n * @module common_hof\n */\n\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nexport function curry(fn: Function): Function {\n  let initial_args = [].slice.apply(arguments, [1]);\n  let func_args_length = fn.length;\n\n  function curried(args) {\n    if (args.length >= func_args_length)\n      return fn.apply(null, args);\n    return function () {\n      return curried(args.concat([].slice.apply(arguments)));\n    };\n  }\n  return curried(initial_args);\n}\n\n\n\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nexport function compose() {\n  let args = arguments;\n  let start = args.length - 1;\n  return function() {\n    let i = start, result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nexport function pipe(...funcs: Function[]): (obj: any) => any {\n  return compose.apply(null, [].slice.call(arguments).reverse());\n}\n\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexport const prop = (name: string) => (obj: any) => obj && obj[name];\n\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexport const propEq = curry((name: string, val: any, obj: any) => obj && obj[name] === val);\n\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexport const parse = (name: string) => pipe.apply(null, name.split(\".\").map(prop));\n\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexport const not = (fn) => (...args) => !fn.apply(null, args);\n\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nexport function and(fn1, fn2): Function {\n  return (...args) => fn1.apply(null, args) && fn2.apply(null, args);\n}\n\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nexport function or(fn1, fn2): Function {\n  return (...args) => fn1.apply(null, args) || fn2.apply(null, args);\n}\n\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexport const all = (fn1) => (arr: any[]) => arr.reduce((b, x) => b && !!fn1(x), true);\nexport const any = (fn1) => (arr: any[]) => arr.reduce((b, x) => b || !!fn1(x), false);\nexport const none: Function = not(any);\n\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexport const is: (ctor) => (x) => boolean =\n    ctor => obj => (obj != null && obj.constructor === ctor || obj instanceof ctor);\n\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexport const eq: (comp) => (x) => boolean =\n    (val) => (other) => val === other;\n\n/** Given a value, returns a function which returns the value */\nexport const val = <T> (v: T) => () => v;\n\n\n\nexport function invoke(fnName: string): Function;\nexport function invoke(fnName: string, args: any[]): Function;\nexport function invoke(fnName: string, args?): Function {\n  return (obj: any) => obj[fnName].apply(obj, args);\n}\n\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nexport function pattern(struct: Function[][]): Function {\n  return function(x) {\n    for (var i = 0; i < struct.length; i++) {\n      if (struct[i][0](x)) return struct[i][1](x);\n    }\n  };\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/hof.ts\n **/","/**\n * This module is a stub for core services such as Dependency Injection or Browser Location.\n * Core services may be implemented by a specific framework, such as ng1 or ng2, or be pure javascript.\n *\n * @module common\n */\n\n/** for typedoc */\n//import {IQService} from \"angular\";\n//import {IInjectorService} from \"angular\";\n\nlet notImplemented = (fnname) => () => {\n  throw new Error(`${fnname}(): No coreservices implementation for UI-Router is loaded. You should include one of: ['angular1.js']`);\n};\n\nlet services: CoreServices = {\n  $q: undefined,\n  $injector: undefined,\n  location: <any> {},\n  locationConfig: <any> {},\n  template: <any> {}\n};\n\n[\"replace\", \"url\", \"path\", \"search\", \"hash\", \"onChange\"]\n    .forEach(key => services.location[key] = notImplemented(key));\n\n[\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\" ]\n    .forEach(key => services.locationConfig[key] = notImplemented(key));\n\nexport interface CoreServices {\n  $q; // : IQService;\n  $injector; // : IInjectorService;\n  /** Services related to getting or setting the browser location (url) */\n  location: LocationServices;\n  /** Retrieves configuration for how to construct a URL. */\n  locationConfig: LocationConfig;\n  template: TemplateServices;\n}\n\nexport interface LocationServices {\n  replace(): void;\n  url(newurl: string): string;\n  url(): string;\n  path(): string;\n  search(): string;\n  hash(): string;\n  onChange(callback: Function): Function;\n}\n\nexport interface LocationConfig {\n  port(): number;\n  protocol(): string;\n  host(): string;\n\n  baseHref(): string;\n  html5Mode(): boolean;\n  hashPrefix(): string;\n  hashPrefix(newprefix: string): string;\n}\n\nexport interface TemplateServices {\n  get(url: string): string;\n}\n\n\nexport {services};\n\n\n/** WEBPACK FOOTER **\n ** ./common/coreservices.ts\n **/","/** @module state */ /** for typedoc */\nexport class Glob {\n  text: string;\n  glob: Array<string>;\n\n  constructor(text: string) {\n    this.text = text;\n    this.glob = text.split('.');\n  }\n\n  matches(name: string) {\n    let segments = name.split('.');\n\n    // match single stars\n    for (let i = 0, l = this.glob.length; i < l; i++) {\n      if (this.glob[i] === '*') segments[i] = '*';\n    }\n\n    // match greedy starts\n    if (this.glob[0] === '**') {\n       segments = segments.slice(segments.indexOf(this.glob[1]));\n       segments.unshift('**');\n    }\n    // match greedy ends\n    if (this.glob[this.glob.length - 1] === '**') {\n       segments.splice(segments.indexOf(this.glob[this.glob.length - 2]) + 1, Number.MAX_VALUE);\n       segments.push('**');\n    }\n    if (this.glob.length != segments.length) return false;\n\n    return segments.join('') === this.glob.join('');\n  }\n\n  static is(text: string) {\n    return text.indexOf('*') > -1;\n  }\n\n  static fromString(text: string) {\n    if (!this.is(text)) return null;\n    return new Glob(text);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/glob.ts\n **/","/** @module common */ /** for typedoc */\n\nexport class Queue<T> {\n  constructor(private _items: T[] = [], private _limit: number = null) { }\n\n  enqueue(item: T) {\n    let items = this._items;\n    items.push(item);\n    if (this._limit && items.length > this._limit) items.shift();\n    return item;\n  }\n\n  dequeue(): T {\n    if (this.size())\n      return this._items.splice(0, 1)[0];\n  }\n\n  clear(): Array<T> {\n    let current = this._items;\n    this._items = [];\n    return current;\n  }\n\n  size(): number {\n    return this._items.length;\n  }\n\n  remove(item: T) {\n    let idx = this._items.indexOf(item);\n    return idx > -1 && this._items.splice(idx, 1)[0];\n  }\n\n  peekTail(): T {\n    return this._items[this._items.length - 1];\n  }\n\n  peekHead(): T {\n    if (this.size())\n      return this._items[0];\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/queue.ts\n **/","/** @module common_strings */ /** */\n\nimport {isString, isArray, isDefined, isNull, isPromise, isInjectable, isObject} from \"./predicates\";\nimport {Rejection} from \"../transition/rejectFactory\";\nimport {IInjectable, identity} from \"./common\";\nimport {pattern, is, not, val, invoke} from \"./hof\";\nimport {Transition} from \"../transition/transition\";\nimport {Resolvable} from \"../resolve/resolvable\";\n\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nexport function maxLength(max: number, str: string) {\n  if (str.length <= max) return str;\n  return str.substr(0, max - 3) + \"...\";\n}\n\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nexport function padString(length: number, str: string) {\n  while (str.length < length) str += \" \";\n  return str;\n}\n\nexport function kebobString(camelCase: string) {\n  return camelCase\n      .replace(/^([A-Z])/, $1 => $1.toLowerCase()) // replace first char\n      .replace(/([A-Z])/g, $1 => \"-\" + $1.toLowerCase()); // replace rest\n}\n\nfunction _toJson(obj) {\n  return JSON.stringify(obj);\n}\n\nfunction _fromJson(json) {\n  return isString(json) ? JSON.parse(json) : json;\n}\n\n\nfunction promiseToString(p) {\n  return `Promise(${JSON.stringify(p)})`;\n}\n\nexport function functionToString(fn) {\n  let fnStr = fnToString(fn);\n  let namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n  return namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n}\n\nexport function fnToString(fn: IInjectable) {\n  let _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n  return _fn && _fn.toString() || \"undefined\";\n}\n\nconst isTransitionRejectionPromise = Rejection.isTransitionRejectionPromise;\n\nlet stringifyPattern = pattern([\n  [not(isDefined),                  val(\"undefined\")],\n  [isNull,                          val(\"null\")],\n  [isPromise,                       promiseToString],\n  [isTransitionRejectionPromise,    x => x._transitionRejection.toString()],\n  [is(Rejection),                   invoke(\"toString\")],\n  [is(Transition),                  invoke(\"toString\")],\n  [is(Resolvable),                  invoke(\"toString\")],\n  [isInjectable,                    functionToString],\n  [val(true),                       identity]\n]);\n\nexport function stringify(o) {\n  var seen = [];\n\n  function format(val) {\n    if (isObject(val)) {\n      if (seen.indexOf(val) !== -1) return '[circular ref]';\n      seen.push(val);\n    }\n    return stringifyPattern(val);\n  }\n\n  return JSON.stringify(o, (key, val) => format(val)).replace(/\\\\\"/g, '\"');\n}\n\n/** Returns a function that splits a string on a character or substring */\nexport const beforeAfterSubstr = char => str => {\n  if (!str) return [\"\", \"\"];\n  let idx = str.indexOf(char);\n  if (idx === -1) return [str, \"\"];\n  return [str.substr(0, idx), str.substr(idx + 1)];\n};\n\n\n/** WEBPACK FOOTER **\n ** ./common/strings.ts\n **/","/** @module transition */ /** for typedoc */\n\"use strict\";\nimport {extend} from \"../common/common\";\nimport {services} from \"../common/coreservices\";\nimport {stringify} from \"../common/strings\";\n\nexport enum RejectType {\n  SUPERSEDED = 2, ABORTED = 3, INVALID = 4, IGNORED = 5\n}\n\nexport class Rejection {\n  type: number;\n  message: string;\n  detail: string;\n  redirected: boolean;\n\n  constructor(type, message?, detail?) {\n    this.type = type;\n    this.message = message;\n    this.detail = detail;\n  }\n\n  toString() {\n    const detailString = d => d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d);\n    let type = this.type, message = this.message, detail = detailString(this.detail);\n    return `TransitionRejection(type: ${type}, message: ${message}, detail: ${detail})`;\n  }\n\n  toPromise() {\n    return extend(services.$q.reject(this), { _transitionRejection: this });\n  }\n\n  /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n  static isTransitionRejectionPromise(obj) {\n    return obj && (typeof obj.then === 'function') && obj._transitionRejection instanceof Rejection;\n  }\n\n  /** Returns a TransitionRejection due to transition superseded */\n  static superseded(detail?: any, options?: any) {\n    let message = \"The transition has been superseded by a different transition (see detail).\";\n    let rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n    if (options && options.redirected) {\n      rejection.redirected = true;\n    }\n    return rejection;\n  }\n\n  /** Returns a TransitionRejection due to redirected transition */\n  static redirected(detail?: any) {\n    return Rejection.superseded(detail, {redirected: true});\n  }\n\n  /** Returns a TransitionRejection due to invalid transition */\n  static invalid(detail?: any) {\n    let message = \"This transition is invalid (see detail)\";\n    return new Rejection(RejectType.INVALID, message, detail);\n  }\n\n  /** Returns a TransitionRejection due to ignored transition */\n  static ignored(detail?: any) {\n    let message = \"The transition was ignored.\";\n    return new Rejection(RejectType.IGNORED, message, detail);\n  }\n\n  /** Returns a TransitionRejection due to aborted transition */\n  static aborted(detail?: any) {\n    // TODO think about how to encapsulate an Error() object\n    let message = \"The transition has been aborted.\";\n    return new Rejection(RejectType.ABORTED, message, detail);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./transition/rejectFactory.ts\n **/","/** @module transition */ /** for typedoc */\nimport {trace} from \"../common/trace\";\nimport {services} from \"../common/coreservices\";\nimport {\n    map, find, extend, filter, mergeR,  tail,\n    omit, toJson, abstractKey, arrayTuples, unnestR, identity, anyTrueR\n} from \"../common/common\";\nimport { isObject } from \"../common/predicates\";\nimport { not, prop, propEq, val } from \"../common/hof\";\n\nimport {StateDeclaration, StateOrName} from \"../state/interface\";\nimport {TransitionOptions, TransitionHookOptions, TreeChanges, IHookRegistry, IHookRegistration, IHookGetter} from \"./interface\";\n\nimport {TransitionHook, HookRegistry, matchState, HookBuilder} from \"./module\";\nimport {Node} from \"../path/node\";\nimport {PathFactory} from \"../path/pathFactory\";\nimport {State, TargetState} from \"../state/module\";\nimport {Param} from \"../params/module\";\nimport {Resolvable} from \"../resolve/module\";\nimport {TransitionService} from \"./transitionService\";\nimport {ViewConfig} from \"../view/interface\";\nimport {Rejection} from \"./rejectFactory\";\n\n\nlet transitionCount = 0;\nconst stateSelf: (_state: State) => StateDeclaration = prop(\"self\");\n\n/**\n * The representation of a transition between two states.\n *\n * Contains all contextual information about the to/from states, parameters, resolves, as well as the\n * list of states being entered and exited as a result of this transition.\n */\nexport class Transition implements IHookRegistry {\n  $id: number;\n  success: boolean;\n\n  private _deferred = services.$q.defer();\n  /**\n   * This promise is resolved or rejected based on the outcome of the Transition.\n   *\n   * When the transition is successful, the promise is resolved\n   * When the transition is unsuccessful, the promise is rejected with the [[TransitionRejection]] or javascript error\n   */\n  promise: Promise<any> = this._deferred.promise;\n\n  private _options: TransitionOptions;\n  private _treeChanges: TreeChanges;\n\n  /**\n   * Registers a callback function as an `onBefore` Transition Hook\n   *\n   * The hook is only registered for this specific `Transition`.  For global hooks, use [[TransitionService.onBefore]]\n   *\n   * See [[IHookRegistry.onBefore]]\n   */\n  onBefore:   IHookRegistration;\n  /**\n   * Registers a callback function as an `onStart` Transition Hook\n   *\n   * The hook is only registered for this specific `Transition`.  For global hooks, use [[TransitionService.onStart]]\n   *\n   * See [[IHookRegistry.onStart]]\n   */\n  onStart:    IHookRegistration;\n  /**\n   * Registers a callback function as an `onEnter` State Hook\n   *\n   * The hook is only registered for this specific `Transition`.  For global hooks, use [[TransitionService.onEnter]]\n   *\n   * See [[IHookRegistry.onEnter]]\n   */\n  onEnter:    IHookRegistration;\n  /**\n   * Registers a callback function as an `onRetain` State Hook\n   *\n   * The hook is only registered for this specific `Transition`.  For global hooks, use [[TransitionService.onRetain]]\n   *\n   * See [[IHookRegistry.onRetain]]\n   */\n  onRetain:   IHookRegistration;\n  /**\n   * Registers a callback function as an `onExit` State Hook\n   *\n   * The hook is only registered for this specific `Transition`.  For global hooks, use [[TransitionService.onExit]]\n   *\n   * See [[IHookRegistry.onExit]]\n   */\n  onExit:     IHookRegistration;\n  /**\n   * Registers a callback function as an `onFinish` Transition Hook\n   *\n   * The hook is only registered for this specific `Transition`.  For global hooks, use [[TransitionService.onFinish]]\n   *\n   * See [[IHookRegistry.onFinish]]\n   */\n  onFinish:   IHookRegistration;\n  /**\n   * Registers a callback function as an `onSuccess` Transition Hook\n   *\n   * The hook is only registered for this specific `Transition`.  For global hooks, use [[TransitionService.onSuccess]]\n   *\n   * See [[IHookRegistry.onSuccess]]\n   */\n  onSuccess:  IHookRegistration;\n  /**\n   * Registers a callback function as an `onError` Transition Hook\n   *\n   * The hook is only registered for this specific `Transition`.  For global hooks, use [[TransitionService.onError]]\n   *\n   * See [[IHookRegistry.onError]]\n   */\n  onError:    IHookRegistration;\n  getHooks:   IHookGetter;\n\n  /**\n   * Creates a new Transition object.\n   *\n   * If the target state is not valid, an error is thrown.\n   *\n   * @param fromPath The path of [[Node]]s from which the transition is leaving.  The last node in the `fromPath`\n   *        encapsulates the \"from state\".\n   * @param targetState The target state and parameters being transitioned to (also, the transition options)\n   * @param _transitionService The Transition Service instance\n   */\n  constructor(fromPath: Node[], targetState: TargetState, private _transitionService: TransitionService) {\n    if (!targetState.valid()) {\n      throw new Error(targetState.error());\n    }\n\n    // Makes the Transition instance a hook registry (onStart, etc)\n    HookRegistry.mixin(new HookRegistry(), this);\n\n    // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n    this._options = extend({ current: val(this) }, targetState.options());\n    this.$id = transitionCount++;\n    let toPath = PathFactory.buildToPath(fromPath, targetState);\n    toPath = PathFactory.applyViewConfigs(_transitionService.$view, toPath);\n    this._treeChanges = PathFactory.treeChanges(fromPath, toPath, this._options.reloadState);\n    PathFactory.bindTransitionResolve(this._treeChanges, this);\n  }\n\n  $from() {\n    return tail(this._treeChanges.from).state;\n  }\n\n  $to() {\n    return tail(this._treeChanges.to).state;\n  }\n\n  /**\n   * Returns the \"from state\"\n   *\n   * @returns The state object for the Transition's \"from state\".\n   */\n  from(): StateDeclaration {\n    return this.$from().self;\n  }\n\n  /**\n   * Returns the \"to state\"\n   *\n   * @returns The state object for the Transition's target state (\"to state\").\n   */\n  to() {\n    return this.$to().self;\n  }\n\n  /**\n   * Determines whether two transitions are equivalent.\n   */\n  is(compare: (Transition|{to: any, from: any})): boolean {\n    if (compare instanceof Transition) {\n      // TODO: Also compare parameters\n      return this.is({ to: compare.$to().name, from: compare.$from().name });\n    }\n    return !(\n      (compare.to && !matchState(this.$to(), compare.to)) ||\n      (compare.from && !matchState(this.$from(), compare.from))\n    );\n  }\n\n  /**\n   * Gets transition parameter values\n   *\n   * @param pathname Pick which treeChanges path to get parameters for:\n   *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n   * @returns transition parameter values for the desired path.\n   */\n  params(pathname: string = \"to\"): { [key: string]: any } {\n    return this._treeChanges[pathname].map(prop(\"paramValues\")).reduce(mergeR, {});\n  }\n\n  /**\n   * Get resolved data\n   *\n   * @returns an object (key/value pairs) where keys are resolve names and values are any settled resolve data,\n   *    or `undefined` for pending resolve data\n   */\n  resolves(): { [resolveName: string]: any } {\n    return map(tail(this._treeChanges.to).resolveContext.getResolvables(), res => res.data);\n  }\n\n  /**\n   * Adds new resolves to this transition.\n   *\n   * @param resolves an [[ResolveDeclarations]] object which describes the new resolves\n   * @param state the state in the \"to path\" which should receive the new resolves (otherwise, the root state)\n   */\n  addResolves(resolves: { [key: string]: Function }, state: StateOrName = \"\"): void {\n    let stateName: string = (typeof state === \"string\") ? state : state.name;\n    let topath = this._treeChanges.to;\n    let targetNode = find(topath, node => node.state.name === stateName);\n    tail(topath).resolveContext.addResolvables(Resolvable.makeResolvables(resolves), targetNode.state);\n  }\n\n  /**\n   * Gets the previous transition, from which this transition was redirected.\n   *\n   * @returns The previous Transition, or null if this Transition is not the result of a redirection\n   */\n  previous(): Transition {\n    return this._options.previous || null;\n  }\n\n  /**\n   * Get the transition options\n   *\n   * @returns the options for this Transition.\n   */\n  options(): TransitionOptions {\n    return this._options;\n  }\n\n  /**\n   * Gets the states being entered.\n   *\n   * @returns an array of states that will be entered during this transition.\n   */\n  entering(): StateDeclaration[] {\n    return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n  }\n\n  /**\n   * Gets the states being exited.\n   *\n   * @returns an array of states that will be exited during this transition.\n   */\n  exiting(): StateDeclaration[] {\n    return map(this._treeChanges.exiting, prop('state')).map(stateSelf).reverse();\n  }\n\n  /**\n   * Gets the states being retained.\n   *\n   * @returns an array of states that are already entered from a previous Transition, that will not be\n   *    exited during this Transition\n   */\n  retained(): StateDeclaration[] {\n    return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n  }\n\n  /**\n   * Get the [[ViewConfig]]s associated with this Transition\n   *\n   * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n   * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n   *\n   * @param pathname the name of the path to fetch views for:\n   *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n   * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n   *\n   * @returns a list of ViewConfig objects for the given path.\n   */\n  views(pathname: string = \"entering\", state?: State): ViewConfig[] {\n    let path = this._treeChanges[pathname];\n    path = !state ? path : path.filter(propEq('state', state));\n    return path.map(prop(\"views\")).filter(identity).reduce(unnestR, []);\n  }\n\n  treeChanges = () => this._treeChanges;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.type:Transition#redirect\n   * @methodOf ui.router.state.type:Transition\n   *\n   * @description\n   * Creates a new transition that is a redirection of the current one. This transition can\n   * be returned from a `$transitionsProvider` hook, `$state` event, or other method, to\n   * redirect a transition to a new state and/or set of parameters.\n   *\n   * @returns {Transition} Returns a new `Transition` instance.\n   */\n  redirect(targetState: TargetState): Transition {\n    let newOptions = extend({}, this.options(), targetState.options(), { previous: this });\n    targetState = new TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n\n    let redirectTo = new Transition(this._treeChanges.from, targetState, this._transitionService);\n    let reloadState = targetState.options().reloadState;\n\n    // If the current transition has already resolved any resolvables which are also in the redirected \"to path\", then\n    // add those resolvables to the redirected transition.  Allows you to define a resolve at a parent level, wait for\n    // the resolve, then redirect to a child state based on the result, and not have to re-fetch the resolve.\n    let redirectedPath = this.treeChanges().to;\n    let copyResolvesFor: Node[] = Node.matching(redirectTo.treeChanges().to, redirectedPath)\n        .filter(node => !reloadState || !reloadState.includes[node.state.name]);\n    const includeResolve = (resolve, key) => ['$stateParams', '$transition$'].indexOf(key) === -1;\n    copyResolvesFor.forEach((node, idx) => extend(node.resolves, filter(redirectedPath[idx].resolves, includeResolve)));\n\n    return redirectTo;\n  }\n\n  /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n  private _changedParams(): Param[] {\n    let {to, from} = this._treeChanges;\n    if (this._options.reload || tail(to).state !== tail(from).state) return undefined;\n\n    let nodeSchemas: Param[][] = to.map((node: Node) => node.paramSchema);\n    let [toValues, fromValues] = [to, from].map(path => path.map(x => x.paramValues));\n    let tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n\n    return tuples.map(([schema, toVals, fromVals]) => Param.changed(schema, toVals, fromVals)).reduce(unnestR, []);\n  }\n\n  /**\n   * Returns true if the transition is dynamic.\n   *\n   * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n   *\n   * @returns true if the Transition is dynamic\n   */\n  dynamic(): boolean {\n    let changes = this._changedParams();\n    return !changes ? false : changes.map(x => x.dynamic).reduce(anyTrueR, false);\n  }\n\n  /**\n   * Returns true if the transition is ignored.\n   *\n   * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n   *\n   * @returns true if the Transition is ignored.\n   */\n  ignored(): boolean {\n    let changes = this._changedParams();\n    return !changes ? false : changes.length === 0;\n  }\n\n  /**\n   * @hidden\n   */\n  hookBuilder(): HookBuilder {\n    return new HookBuilder(this._transitionService, this, <TransitionHookOptions> {\n      transition: this,\n      current: this._options.current\n    });\n  }\n\n  /**\n   * Runs the transition\n   *\n   * This method is generally called from the [[StateService.transitionTo]]\n   *\n   * @returns a promise for a successful transition.\n   */\n  run (): Promise<any> {\n    let hookBuilder = this.hookBuilder();\n    let runSynchronousHooks = TransitionHook.runSynchronousHooks;\n    // TODO: nuke these in favor of chaining off the promise, i.e.,\n    // $transitions.onBefore({}, $transition$ => {$transition$.promise.then()}\n    const runSuccessHooks = () => runSynchronousHooks(hookBuilder.getOnSuccessHooks(), {}, true);\n    const runErrorHooks = ($error$) => runSynchronousHooks(hookBuilder.getOnErrorHooks(), { $error$ }, true);\n    // Run the success/error hooks *after* the Transition promise is settled.\n    this.promise.then(runSuccessHooks, runErrorHooks);\n\n    let syncResult = runSynchronousHooks(hookBuilder.getOnBeforeHooks());\n\n    if (Rejection.isTransitionRejectionPromise(syncResult)) {\n      syncResult.catch(() => 0); // issue #2676\n      let rejectReason = (<any> syncResult)._transitionRejection;\n      this._deferred.reject(rejectReason);\n      return this.promise;\n    }\n\n    if (!this.valid()) {\n      let error = new Error(this.error());\n      this._deferred.reject(error);\n      return this.promise;\n    }\n\n    if (this.ignored()) {\n      trace.traceTransitionIgnored(this);\n      this._deferred.reject(Rejection.ignored());\n      return this.promise;\n    }\n\n    // When the chain is complete, then resolve or reject the deferred\n    const resolve = () => {\n      this.success = true;\n      this._deferred.resolve(this);\n      trace.traceSuccess(this.$to(), this);\n    };\n\n    const reject = (error) => {\n      this.success = false;\n      this._deferred.reject(error);\n      trace.traceError(error, this);\n      return services.$q.reject(error);\n    };\n\n    trace.traceTransitionStart(this);\n\n    let chain = hookBuilder.asyncHooks().reduce((_chain, step) => _chain.then(step.invokeHook.bind(step)), syncResult);\n    chain.then(resolve, reject);\n\n    return this.promise;\n  }\n\n  isActive = () => this === this._options.current();\n\n  /**\n   * Checks if the Transition is valid\n   *\n   * @returns true if the Transition is valid\n   */\n  valid() {\n    return !this.error();\n  }\n\n  /**\n   * The reason the Transition is invalid\n   *\n   * @returns an error message explaining why the transition is invalid\n   */\n  error() {\n    let state = this.$to();\n\n    if (state.self[abstractKey])\n      return `Cannot transition to abstract state '${state.name}'`;\n    if (!Param.validates(state.parameters(), this.params()))\n      return `Param values not valid for state '${state.name}'`;\n  }\n\n  /**\n   * A string representation of the Transition\n   *\n   * @returns A string representation of the Transition\n   */\n  toString () {\n    let fromStateOrName = this.from();\n    let toStateOrName = this.to();\n\n    const avoidEmptyHash = (params) =>\n      (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : omit(params, \"#\");\n\n    // (X) means the to state is invalid.\n    let id = this.$id,\n        from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName,\n        fromParams = toJson(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))),\n        toValid = this.valid() ? \"\" : \"(X) \",\n        to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName,\n        toParams = toJson(avoidEmptyHash(this.params()));\n\n    return `Transition#${id}( '${from}'${fromParams} -> ${toValid}'${to}'${toParams} )`;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./transition/transition.ts\n **/","/**\n * UI-Router Transition Tracing\n *\n * Enable transition tracing to print transition information to the console, in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[trace]] singleton and enable one or more categories.\n *\n * ES6\n * ```\n *\n * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * CJS\n * ```\n *\n * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * Globals\n * ```\n *\n * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * @module trace\n */ /** for typedoc */\nimport {parse} from \"../common/hof\";\nimport {isNumber} from \"../common/predicates\";\nimport {Transition}  from \"../transition/transition\";\nimport {ActiveUIView, ViewConfig}  from \"../view/interface\";\nimport {stringify, functionToString, maxLength, padString} from \"./strings\";\n\n/** @hidden */\nfunction uiViewString (viewData) {\n    if (!viewData) return 'ui-view (defunct)';\n    return `[ui-view#${viewData.id} tag in template from '${viewData.creationContext.name || '(root)'}' state]: fqn: '${viewData.fqn}', name: '${viewData.name}@${viewData.creationContext}')`;\n}\n\n/** @hidden */\nconst viewConfigString = (viewConfig: ViewConfig) =>\n    `[ViewConfig from '${viewConfig.viewDecl.$context.name || '(root)'}' state]: target ui-view: '${viewConfig.viewDecl.$uiViewName}@${viewConfig.viewDecl.$uiViewContextAnchor}'`;\n\n/** @hidden */\nfunction normalizedCat(input: Category): string {\n  return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n\n\n/**\n * Trace categories\n *\n * [[Trace.enable]] or [[Trace.disable]] a category\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nexport enum Category {\n  RESOLVE, TRANSITION, HOOK, INVOKE, UIVIEW, VIEWCONFIG\n}\n\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nexport class Trace {\n  approximateDigests: number;\n\n  constructor() {\n    this.approximateDigests = 0;\n  }\n\n  /** @hidden */\n  private _enabled: { [key: string]: boolean } = {};\n\n   /** @hidden */\n  private _set(enabled: boolean, categories: Category[]) {\n    if (!categories.length) {\n      categories = Object.keys(Category)\n          .filter(k => isNaN(parseInt(k, 10)))\n          .map(key => Category[key]);\n    }\n    categories.map(normalizedCat).forEach(category => this._enabled[category] = enabled);\n  }\n\n  /**\n   * Enables a trace [[Category]]\n   *\n   * ```\n   * trace.enable(\"TRANSITION\");\n   * ```\n   *\n   * @param categories categories to enable. If `categories` is omitted, all categories are enabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  enable(...categories: Category[]) { this._set(true, categories) }\n  /**\n   * Disables a trace [[Category]]\n   *\n   * ```\n   * trace.disable(\"VIEWCONFIG\");\n   * ```\n   *\n   * @param categories categories to disable. If `categories` is omitted, all categories are disabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  disable(...categories: Category[]) { this._set(false, categories) }\n\n  /**\n   * Retrieves the enabled stateus of a [[Category]]\n   *\n   * ```\n   * trace.enabled(\"VIEWCONFIG\"); // true or false\n   * ```\n   *\n   * @returns boolean true if the category is enabled\n   */\n  enabled(category: Category): boolean {\n    return !!this._enabled[normalizedCat(category)];\n  }\n\n  /** called by ui-router code */\n  traceTransitionStart(transition: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    let tid = transition.$id,\n        digest = this.approximateDigests,\n        transitionStr = stringify(transition);\n    console.log(`Transition #${tid} Digest #${digest}: Started  -> ${transitionStr}`);\n  }\n\n  /** called by ui-router code */\n  traceTransitionIgnored(transition: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    let tid = transition.$id,\n        digest = this.approximateDigests,\n        transitionStr = stringify(transition);\n    console.log(`Transition #${tid} Digest #${digest}: Ignored  <> ${transitionStr}`);\n  }\n\n  /** called by ui-router code */\n  traceHookInvocation(step, options) {\n    if (!this.enabled(Category.HOOK)) return;\n    let tid = parse(\"transition.$id\")(options),\n        digest = this.approximateDigests,\n        event = parse(\"traceData.hookType\")(options) || \"internal\",\n        context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\",\n        name = functionToString(step.fn);\n    console.log(`Transition #${tid} Digest #${digest}:   Hook -> ${event} context: ${context}, ${maxLength(200, name)}`);\n  }\n\n  /** called by ui-router code */\n  traceHookResult(hookResult, transitionResult, transitionOptions) {\n    if (!this.enabled(Category.HOOK)) return;\n    let tid = parse(\"transition.$id\")(transitionOptions),\n        digest = this.approximateDigests,\n        hookResultStr = stringify(hookResult),\n        transitionResultStr = stringify(transitionResult);\n    console.log(`Transition #${tid} Digest #${digest}:   <- Hook returned: ${maxLength(200, hookResultStr)}, transition result: ${maxLength(200, transitionResultStr)}`);\n  }\n\n  /** called by ui-router code */\n  traceResolvePath(path, options) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    let tid = parse(\"transition.$id\")(options),\n        digest = this.approximateDigests,\n        pathStr = path && path.toString(),\n        policyStr = options && options.resolvePolicy;\n    console.log(`Transition #${tid} Digest #${digest}:         Resolving ${pathStr} (${policyStr})`);\n  }\n\n  /** called by ui-router code */\n  traceResolvePathElement(pathElement, resolvablePromises, options) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    if (!resolvablePromises.length) return;\n    let tid = parse(\"transition.$id\")(options),\n        digest = this.approximateDigests,\n        resolvablePromisesStr = Object.keys(resolvablePromises).join(\", \"),\n        pathElementStr = pathElement && pathElement.toString(),\n        policyStr = options && options.resolvePolicy;\n    console.log(`Transition #${tid} Digest #${digest}:         Resolve ${pathElementStr} resolvables: [${resolvablePromisesStr}] (${policyStr})`);\n  }\n\n  /** called by ui-router code */\n  traceResolveResolvable(resolvable, options) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    let tid = parse(\"transition.$id\")(options),\n        digest = this.approximateDigests,\n        resolvableStr = resolvable && resolvable.toString();\n    console.log(`Transition #${tid} Digest #${digest}:               Resolving -> ${resolvableStr}`);\n  }\n\n  /** called by ui-router code */\n  traceResolvableResolved(resolvable, options) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    let tid = parse(\"transition.$id\")(options),\n        digest = this.approximateDigests,\n        resolvableStr = resolvable && resolvable.toString(),\n        result = stringify(resolvable.data);\n    console.log(`Transition #${tid} Digest #${digest}:               <- Resolved  ${resolvableStr} to: ${maxLength(200, result)}`);\n  }\n\n  /** called by ui-router code */\n  tracePathElementInvoke(node, fn, deps, options) {\n    if (!this.enabled(Category.INVOKE)) return;\n    let tid = parse(\"transition.$id\")(options),\n        digest = this.approximateDigests,\n        stateName = node && node.state && node.state.toString(),\n        fnName = functionToString(fn);\n    console.log(`Transition #${tid} Digest #${digest}:         Invoke ${options.when}: context: ${stateName} ${maxLength(200, fnName)}`);\n  }\n\n  /** called by ui-router code */\n  traceError(error, transition: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    let tid = transition.$id,\n        digest = this.approximateDigests,\n        transitionStr = stringify(transition);\n    console.log(`Transition #${tid} Digest #${digest}: <- Rejected ${transitionStr}, reason: ${error}`);\n  }\n\n  /** called by ui-router code */\n  traceSuccess(finalState, transition: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    let tid = transition.$id,\n        digest = this.approximateDigests,\n        state = finalState.name,\n        transitionStr = stringify(transition);\n    console.log(`Transition #${tid} Digest #${digest}: <- Success  ${transitionStr}, final state: ${state}`);\n  }\n\n  /** called by ui-router code */\n  traceUiViewEvent(event: string, viewData: ActiveUIView, extra = \"\") {\n    if (!this.enabled(Category.UIVIEW)) return;\n    console.log(`ui-view: ${padString(30, event)} ${uiViewString(viewData)}${extra}`);\n  }\n\n  /** called by ui-router code */\n  traceUiViewConfigUpdated(viewData: ActiveUIView, context) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUiViewEvent(\"Updating\", viewData, ` with ViewConfig from context='${context}'`);\n  }\n\n  /** called by ui-router code */\n  traceUiViewScopeCreated(viewData: ActiveUIView, newScope) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUiViewEvent(\"Created scope for\", viewData, `, scope #${newScope.$id}`);\n  }\n\n  /** called by ui-router code */\n  traceUiViewFill(viewData: ActiveUIView, html) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUiViewEvent(\"Fill\", viewData, ` with: ${maxLength(200, html)}`);\n  }\n\n  /** called by ui-router code */\n  traceViewServiceEvent(event: string, viewConfig: ViewConfig) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    console.log(`VIEWCONFIG: ${event} ${viewConfigString(viewConfig)}`);\n  }\n\n  /** called by ui-router code */\n  traceViewServiceUiViewEvent(event: string, viewData: ActiveUIView) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    console.log(`VIEWCONFIG: ${event} ${uiViewString(viewData)}`);\n  }\n}\n\n/**\n * The [[Trace]] singleton\n *\n * @example\n * ```js\n *\n * import {trace} from \"angular-ui-router\";\n * trace.enable(1, 5);\n * ```\n */\nlet trace = new Trace();\nexport {trace};\n\n\n/** WEBPACK FOOTER **\n ** ./common/trace.ts\n **/","/**\n * This module contains APIs related to a Transition.\n *\n * See [[Transition]], [[$transitions]]\n *\n * @module transition\n * @preferred\n */\n/** for typedoc */\nexport * from \"./interface\";\nexport * from \"./hookBuilder\";\nexport * from \"./hookRegistry\";\nexport * from \"./rejectFactory\";\nexport * from \"./transition\";\nexport * from \"./transitionHook\";\nexport * from \"./transitionService\";\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./transition/module.ts\n **/","/** @module transition */ /** for typedoc */\n\nimport {IInjectable, extend, tail, assertPredicate, unnestR, flatten, identity} from \"../common/common\";\nimport {isArray} from \"../common/predicates\";\n\nimport {TransitionOptions, TransitionHookOptions, IHookRegistry, TreeChanges, IEventHook, ITransitionService, IMatchingNodes} from \"./interface\";\n\nimport {Transition, TransitionHook} from \"./module\";\nimport {State} from \"../state/module\";\nimport {Node} from \"../path/module\";\n\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks (IEventHook) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching IEventHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts IEventHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nexport class HookBuilder {\n\n  treeChanges: TreeChanges;\n  transitionOptions: TransitionOptions;\n\n  toState: State;\n  fromState: State;\n\n  constructor(private $transitions: ITransitionService, private transition: Transition, private baseHookOptions: TransitionHookOptions) {\n    this.treeChanges        = transition.treeChanges();\n    this.toState            = tail(this.treeChanges.to).state;\n    this.fromState          = tail(this.treeChanges.from).state;\n    this.transitionOptions  = transition.options();\n  }\n\n  // TODO: These get* methods are returning different cardinalities of hooks\n  // onBefore/onStart/onFinish/onSuccess/onError returns an array of hooks\n  // onExit/onRetain/onEnter returns an array of arrays of hooks\n\n  getOnBeforeHooks  = () => this._buildNodeHooks(\"onBefore\",  \"to\",       tupleSort(), undefined, { async: false });\n  getOnStartHooks   = () => this._buildNodeHooks(\"onStart\",   \"to\",       tupleSort());\n  getOnExitHooks    = () => this._buildNodeHooks(\"onExit\",    \"exiting\",  tupleSort(true), (node) => ({ $state$: node.state }));\n  getOnRetainHooks  = () => this._buildNodeHooks(\"onRetain\",  \"retained\", tupleSort(), (node) => ({ $state$: node.state }));\n  getOnEnterHooks   = () => this._buildNodeHooks(\"onEnter\",   \"entering\", tupleSort(), (node) => ({ $state$: node.state }));\n  getOnFinishHooks  = () => this._buildNodeHooks(\"onFinish\",  \"to\",       tupleSort(), (node) => ({ $treeChanges$: this.treeChanges }));\n  getOnSuccessHooks = () => this._buildNodeHooks(\"onSuccess\", \"to\",       tupleSort(), undefined, { async: false, rejectIfSuperseded: false });\n  getOnErrorHooks   = () => this._buildNodeHooks(\"onError\",   \"to\",       tupleSort(), undefined, { async: false, rejectIfSuperseded: false });\n\n  asyncHooks() {\n    let onStartHooks    = this.getOnStartHooks();\n    let onExitHooks     = this.getOnExitHooks();\n    let onRetainHooks   = this.getOnRetainHooks();\n    let onEnterHooks    = this.getOnEnterHooks();\n    let onFinishHooks   = this.getOnFinishHooks();\n\n    let asyncHooks = [onStartHooks, onExitHooks, onRetainHooks, onEnterHooks, onFinishHooks];\n    return asyncHooks.reduce(unnestR, []).filter(identity);\n  }\n\n  /**\n   * Returns an array of newly built TransitionHook objects.\n   *\n   * - Finds all IEventHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n   * - Finds [[Node]] (or `Node[]`) to use as the TransitionHook context(s)\n   * - For each of the [[Node]]s, creates a TransitionHook\n   *\n   * @param hookType the name of the hook registration function, e.g., 'onEnter', 'onFinish'.\n   * @param matchingNodesProp selects which [[Node]]s from the [[IMatchingNodes]] object to create hooks for.\n   * @param getLocals a function which accepts a [[Node]] and returns additional locals to provide to the hook as injectables\n   * @param sortHooksFn a function which compares two HookTuple and returns <1, 0, or >1\n   * @param options any specific Transition Hook Options\n   */\n  private _buildNodeHooks(hookType: string,\n                          matchingNodesProp: string,\n                          sortHooksFn: (l: HookTuple, r: HookTuple) => number,\n                          getLocals: (node: Node) => any = (node) => ({}),\n                          options?: TransitionHookOptions): TransitionHook[] {\n\n    // Find all the matching registered hooks for a given hook type\n    let matchingHooks = this._matchingHooks(hookType, this.treeChanges);\n    if (!matchingHooks) return [];\n\n     const makeTransitionHooks = (hook: IEventHook) => {\n      // Fetch the Nodes that caused this hook to match.\n      let matches: IMatchingNodes = hook.matches(this.treeChanges);\n      // Select the Node[] that will be used as TransitionHook context objects\n      let nodes: Node[] = matches[matchingNodesProp];\n\n      // Return an array of HookTuples\n      return nodes.map(node => {\n        let _options = extend({ bind: hook.bind, traceData: { hookType, context: node} }, this.baseHookOptions, options);\n        let transitionHook = new TransitionHook(hook.callback, getLocals(node), node.resolveContext, _options);\n        return <HookTuple> { hook, node, transitionHook };\n      });\n    };\n\n    return matchingHooks.map(makeTransitionHooks)\n        .reduce(unnestR, [])\n        .sort(sortHooksFn)\n        .map(tuple => tuple.transitionHook);\n  }\n\n  /**\n   * Finds all IEventHooks from:\n   * - The Transition object instance hook registry\n   * - The TransitionService ($transitions) global hook registry\n   *\n   * which matched:\n   * - the eventType\n   * - the matchCriteria (to, from, exiting, retained, entering)\n   *\n   * @returns an array of matched [[IEventHook]]s\n   */\n  private _matchingHooks(hookName: string, treeChanges: TreeChanges): IEventHook[] {\n    return [ this.transition, this.$transitions ]                             // Instance and Global hook registries\n        .map((reg: IHookRegistry) => reg.getHooks(hookName))                  // Get named hooks from registries\n        .filter(assertPredicate(isArray, `broken event named: ${hookName}`))  // Sanity check\n        .reduce(unnestR, [])                                                  // Un-nest IEventHook[][] to IEventHook[] array\n        .filter(hook => hook.matches(treeChanges));                           // Only those satisfying matchCriteria\n  }\n}\n\ninterface HookTuple { hook: IEventHook, node: Node, transitionHook: TransitionHook }\n\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the Node depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort = false) {\n  return function nodeDepthThenPriority(l: HookTuple, r: HookTuple): number {\n    let factor = reverseDepthSort ? -1 : 1;\n    let depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n    return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./transition/hookBuilder.ts\n **/","/** @module transition */ /** for typedoc */\nimport {IInjectable, extend, removeFrom, anyTrueR, allTrueR, tail} from \"../common/common\";\nimport {isString, isFunction} from \"../common/predicates\";\nimport {val} from \"../common/hof\";\nimport {Node} from \"../path/node\";\n\nimport {HookRegOptions, HookMatchCriteria, IStateMatch, IEventHook, IHookRegistry, IHookRegistration, TreeChanges, HookMatchCriterion, IMatchingNodes} from \"./interface\";\nimport {Glob} from \"../common/glob\";\nimport {State} from \"../state/stateObject\";\n\n/**\n * Determines if the given state matches the matchCriteria\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nexport function matchState(state: State, criterion: HookMatchCriterion) {\n  let toMatch = isString(criterion) ? [criterion] : criterion;\n\n  function matchGlobs(_state) {\n    let globStrings = <string[]> toMatch;\n    for (let i = 0; i < globStrings.length; i++) {\n      let glob = Glob.fromString(globStrings[i]);\n\n      if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  let matchFn = <any> (isFunction(toMatch) ? toMatch : matchGlobs);\n  return !!matchFn(state);\n}\n\n\nexport class EventHook implements IEventHook {\n  callback: IInjectable;\n  matchCriteria: HookMatchCriteria;\n  priority: number;\n  bind: any;\n\n  constructor(matchCriteria: HookMatchCriteria, callback: IInjectable, options: HookRegOptions = <any>{}) {\n    this.callback = callback;\n    this.matchCriteria = extend({ to: true, from: true, exiting: true, retained: true, entering: true }, matchCriteria);\n    this.priority = options.priority || 0;\n    this.bind = options.bind || null;\n  }\n\n  private static _matchingNodes(nodes: Node[], criterion: HookMatchCriterion): Node[] {\n    if (criterion === true) return nodes;\n    let matching = nodes.filter(node => matchState(node.state, criterion));\n    return matching.length ? matching : null;\n  }\n\n  /**\n   * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n   *\n   * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n   * are the matching [[Node]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n   */\n  matches(treeChanges: TreeChanges): IMatchingNodes {\n    let mc = this.matchCriteria, _matchingNodes = EventHook._matchingNodes;\n\n    let matches = {\n      to: _matchingNodes([tail(treeChanges.to)], mc.to),\n      from: _matchingNodes([tail(treeChanges.from)], mc.from),\n      exiting: _matchingNodes(treeChanges.exiting, mc.exiting),\n      retained: _matchingNodes(treeChanges.retained, mc.retained),\n      entering: _matchingNodes(treeChanges.entering, mc.entering),\n    };\n\n    // Check if all the criteria matched the TreeChanges object\n    let allMatched: boolean = [\"to\", \"from\", \"exiting\", \"retained\", \"entering\"]\n        .map(prop => matches[prop])\n        .reduce(allTrueR, true);\n\n    return allMatched ? matches : null;\n  }\n}\n\ninterface ITransitionEvents { [key: string]: IEventHook[]; }\n\n// Return a registration function of the requested type.\nfunction makeHookRegistrationFn(hooks: ITransitionEvents, name: string): IHookRegistration {\n  return function (matchObject, callback, options = {}) {\n    let eventHook = new EventHook(matchObject, callback, options);\n    hooks[name].push(eventHook);\n\n    return function deregisterEventHook() {\n      removeFrom(hooks[name])(eventHook);\n    };\n  };\n}\n\nexport class HookRegistry implements IHookRegistry {\n  static mixin(source: HookRegistry, target: IHookRegistry) {\n    Object.keys(source._transitionEvents).concat([\"getHooks\"]).forEach(key => target[key] = source[key]);\n  }\n\n  private _transitionEvents: ITransitionEvents = {\n    onBefore: [], onStart: [], onEnter: [], onRetain: [], onExit: [], onFinish: [], onSuccess: [], onError: []\n  };\n\n  getHooks = (name: string) => this._transitionEvents[name];\n\n  onBefore = makeHookRegistrationFn(this._transitionEvents, \"onBefore\");\n  onStart = makeHookRegistrationFn(this._transitionEvents, \"onStart\");\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$transitionsProvider#onEnter\n   * @methodOf ui.router.state.$transitionsProvider\n   *\n   * @description\n   * Registers a function to be injected and invoked during a transition between the matched 'to' and 'from' states,\n   * when the matched 'to' state is being entered. This function is injected with the entering state's resolves.\n   *\n   * This function can be injected with two additional special value:\n   * - **`$transition$`**: The current transition\n   * - **`$state$`**: The state being entered\n   *\n   * @param {object} matchObject See transitionCriteria in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   * @param {function} callback See callback in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   */\n  onEnter = makeHookRegistrationFn(this._transitionEvents, \"onEnter\");\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$transitionsProvider#onRetain\n   * @methodOf ui.router.state.$transitionsProvider\n   *\n   * @description\n   * Registers a function to be injected and invoked during a transition between the matched 'to' and 'from states,\n   * when the matched 'from' state is already active and is not being exited nor entered.\n   *\n   * This function can be injected with two additional special value:\n   * - **`$transition$`**: The current transition\n   * - **`$state$`**: The state that is retained\n   *\n   * @param {object} matchObject See transitionCriteria in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   * @param {function} callback See callback in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   */\n  onRetain = makeHookRegistrationFn(this._transitionEvents, \"onRetain\");\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$transitionsProvider#onExit\n   * @methodOf ui.router.state.$transitionsProvider\n   *\n   * @description\n   * Registers a function to be injected and invoked during a transition between the matched 'to' and 'from states,\n   * when the matched 'from' state is being exited. This function is in injected with the exiting state's resolves.\n   *\n   * This function can be injected with two additional special value:\n   * - **`$transition$`**: The current transition\n   * - **`$state$`**: The state being entered\n   *\n   * @param {object} matchObject See transitionCriteria in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   * @param {function} callback See callback in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   */\n  onExit = makeHookRegistrationFn(this._transitionEvents, \"onExit\");\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$transitionsProvider#onFinish\n   * @methodOf ui.router.state.$transitionsProvider\n   *\n   * @description\n   * Registers a function to be injected and invoked when a transition is finished entering/exiting all states.\n   *\n   * This function can be injected with:\n   * - **`$transition$`**: The current transition\n   *\n   * @param {object} matchObject See transitionCriteria in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   * @param {function} callback See callback in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   */\n  onFinish = makeHookRegistrationFn(this._transitionEvents, \"onFinish\");\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$transitionsProvider#onSuccess\n   * @methodOf ui.router.state.$transitionsProvider\n   *\n   * @description\n   * Registers a function to be injected and invoked when a transition has successfully completed between the matched\n   * 'to' and 'from' state is being exited.\n   * This function is in injected with the 'to' state's resolves (note: `JIT` resolves are not injected).\n   *\n   * This function can be injected with two additional special value:\n   * - **`$transition$`**: The current transition\n   *\n   * @param {object} matchObject See transitionCriteria in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   * @param {function} callback The function which will be injected and invoked, when a matching transition is started.\n   *   The function's return value is ignored.\n   */\n  onSuccess = makeHookRegistrationFn(this._transitionEvents, \"onSuccess\");\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$transitionsProvider#onError\n   * @methodOf ui.router.state.$transitionsProvider\n   *\n   * @description\n   * Registers a function to be injected and invoked when a transition has failed for any reason between the matched\n   * 'to' and 'from' state. The transition rejection reason is injected as `$error$`.\n   *\n   * @param {object} matchObject See transitionCriteria in {@link ui.router.state.$transitionsProvider#on $transitionsProvider.on}.\n   * @param {function} callback The function which will be injected and invoked, when a matching transition is started.\n   *   The function's return value is ignored.\n   */\n  onError = makeHookRegistrationFn(this._transitionEvents, \"onError\");\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./transition/hookRegistry.ts\n **/","/** @module transition */ /** for typedoc */\nimport {TransitionHookOptions} from \"./interface\";\nimport {IInjectable, defaults, extend, noop, Predicate} from \"../common/common\";\nimport {fnToString, maxLength} from \"../common/strings\";\nimport {isDefined, isPromise } from \"../common/predicates\";\nimport {not, pattern, val, eq, is, parse } from \"../common/hof\";\nimport {trace} from \"../common/trace\";\nimport {services} from \"../common/coreservices\";\n\nimport {Rejection} from \"./rejectFactory\";\nimport {TargetState} from \"../state/module\";\nimport {ResolveContext} from \"../resolve/module\";\n\nlet defaultOptions: TransitionHookOptions = {\n  async: true,\n  rejectIfSuperseded: true,\n  current: noop,\n  transition: null,\n  traceData: {},\n  bind: null\n};\n\nexport class TransitionHook {\n  constructor(private fn: IInjectable,\n              private locals: any,\n              private resolveContext: ResolveContext,\n              private options: TransitionHookOptions) {\n    this.options = defaults(options, defaultOptions);\n  }\n\n  private isSuperseded = () => this.options.current() !== this.options.transition;\n\n  invokeHook(moreLocals) {\n    let { options, fn, resolveContext } = this;\n    let locals = extend({}, this.locals, moreLocals);\n    trace.traceHookInvocation(this, options);\n    if (options.rejectIfSuperseded && this.isSuperseded()) {\n      return Rejection.superseded(options.current()).toPromise();\n    }\n\n    // TODO: Need better integration of returned promises in synchronous code.\n    if (!options.async) {\n      let hookResult = resolveContext.invokeNow(fn, locals, options);\n      return this.handleHookResult(hookResult);\n    }\n    return resolveContext.invokeLater(fn, locals, options).then(val => this.handleHookResult(val));\n  };\n\n  /**\n   * This method handles the return value of a Transition Hook.\n   *\n   * A hook can return false, a redirect (TargetState), or a promise (which may resolve to false or a redirect)\n   */\n  handleHookResult(hookResult): Promise<any> {\n    if (!isDefined(hookResult)) return undefined;\n\n    /**\n     * Handles transition superseded, transition aborted and transition redirect.\n     */\n    const mapHookResult = pattern([\n      // Transition is no longer current\n      [this.isSuperseded, () => Rejection.superseded(this.options.current()).toPromise()],\n      // If the hook returns false, abort the current Transition\n      [eq(false),         () => Rejection.aborted(\"Hook aborted transition\").toPromise()],\n      // If the hook returns a Transition, halt the current Transition and redirect to that Transition.\n      [is(TargetState),   (target) => Rejection.redirected(target).toPromise()],\n      // A promise was returned, wait for the promise and then chain another hookHandler\n      [isPromise,         (promise) => promise.then(this.handleHookResult.bind(this))]\n    ]);\n\n    let transitionResult = mapHookResult(hookResult);\n    if (transitionResult) trace.traceHookResult(hookResult, transitionResult, this.options);\n\n    return transitionResult;\n  }\n\n  toString() {\n    let { options, fn } = this;\n    let event = parse(\"traceData.hookType\")(options) || \"internal\",\n        context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\",\n        name = fnToString(fn);\n    return `${event} context: ${context}, ${maxLength(200, name)}`;\n  }\n\n\n  /**\n   * Given an array of TransitionHooks, runs each one synchronously and sequentially.\n   *\n   * Returns a promise chain composed of any promises returned from each hook.invokeStep() call\n   */\n  static runSynchronousHooks(hooks: TransitionHook[], locals = {}, swallowExceptions: boolean = false): Promise<any> {\n    let results = [];\n    for (let i = 0; i < hooks.length; i++) {\n      try {\n        results.push(hooks[i].invokeHook(locals));\n      } catch (exception) {\n        if (!swallowExceptions) {\n          return Rejection.aborted(exception).toPromise();\n        }\n\n        console.error(\"Swallowed exception during synchronous hook handler: \" + exception); // TODO: What to do here?\n      }\n    }\n\n    let rejections = results.filter(Rejection.isTransitionRejectionPromise);\n    if (rejections.length) return rejections[0];\n\n    return results\n        .filter(<Predicate<any>> isPromise)\n        .reduce((chain, promise) => chain.then(val(promise)), services.$q.when());\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./transition/transitionHook.ts\n **/","/** @module state */ /** for typedoc */\nexport * from \"./interface\";\nexport * from \"./state\";\nexport * from \"./stateBuilder\";\nexport * from \"./hooks/transitionManager\";\nexport * from \"./stateObject\";\nexport * from \"./stateMatcher\";\nexport * from \"./stateQueueManager\";\nexport * from \"./stateRegistry\";\nexport * from \"./stateService\";\nexport * from \"./targetState\";\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/module.ts\n **/","/** @module state */ /** for typedoc */\nimport {isObject} from \"../common/predicates\";\nimport {bindFunctions} from \"../common/common\";\nimport {BuilderFunction} from \"./module\";\nimport {StateRegistry} from \"./stateRegistry\";\nimport {State} from \"./stateObject\";\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nexport class StateProvider {\n  invalidCallbacks: Function[] = [];\n  constructor(private stateRegistry: StateRegistry) {\n    bindFunctions(StateProvider.prototype, this, this);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the\n   * `stateBuilder` object used internally by `$stateProvider`. This can be used\n   * to add custom functionality to ui-router, for example inferring templateUrl\n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new\n   * properties within the state's internal definition. There is currently no clear\n   * use-case for this beyond accessing internal states (i.e. $state.$current),\n   * however, expect this to become increasingly relevant as we introduce additional\n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of\n   * execution of the builder functions in non-deterministic. Builder functions\n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to\n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view\n   *   name (i.e. \"viewName@stateName\") and each value is the config object\n   *   (template, controller) for the view. Even when you don't use the views object\n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template\n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state,\n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state.\n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that\n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   let result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     let autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate.\n   * @param {object} func A function that is responsible for decorating the original\n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  decorator(name: string, func: BuilderFunction) {\n    return this.stateRegistry.decorator(name, func) || this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * <a id='template'></a>\n   *\n   * - **`template`** - {string|function=} - html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property\n   *   takes precedence over templateUrl.\n   *\n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <a id='templateUrl'></a>\n   *\n   * - **`templateUrl`** - {string|function=} - path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *\n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <a id='templateProvider'></a>\n   *\n   * - **`templateProvider`** - {function=} - Provider function that returns HTML content\n   *   string.\n   *\n   * <a id='controller'></a>\n   *\n   * - **`controller`** - {string|function=} -  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *\n   * <a id='controllerProvider'></a>\n   *\n   * - **`controllerProvider`** - {function=} - Injectable provider function that returns\n   *   the actual controller or string.\n   *\n   * <a id='controllerAs'></a>\n   *\n   * - **`controllerAs`** – {string=} – A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   *\n   * <a id='resolve'></a>\n   *\n   * - **`resolve`** - {object.&lt;string, function&gt;=} - An optional map of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises,\n   *   the router will wait for them all to be resolved or one to be rejected before the\n   *   controller is instantiated. If all the promises are resolved successfully, the values\n   *   of the resolved promises are injected and $stateChangeSuccess event is fired. If any\n   *   of the promises are rejected the $stateChangeError event is fired. The map object is:\n   *\n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function,\n   *     it is injected and return value it treated as dependency. If result is a promise, it is\n   *     resolved before its value is injected into controller.\n   *\n   * <a id='url'></a>\n   *\n   * - **`url`** - {string=} - A url with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any\n   *   parameters that were passed.\n   *\n   * <a id='params'></a>\n   *\n   * - **`params`** - {object=} - An array of parameter names or regular expressions. Only\n   *   use this within a state if you are not using url. Otherwise you can specify your\n   *   parameters within the url. When a state is navigated or transitioned to, the\n   *   $stateParams service will be populated with any parameters that were passed.\n   *\n   * <a id='views'></a>\n   *\n   * - **`views`** - {object=} - Use the views property to set up multiple views or to target views\n   *   manually/explicitly.\n   *\n   * <a id='abstract'></a>\n   *\n   * - **`abstract`** - {boolean=} - An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   *\n   * <a id='onEnter'></a>\n   *\n   * - **`onEnter`** - {object=} - Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to use the `['injection1', 'injection2', function(injection1, injection2){}]` syntax.\n   *\n   * <a id='onExit'></a>\n   *\n   * - **`onExit`** - {object=} - Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to use the `['injection1', 'injection2', function(injection1, injection2){}]` syntax.\n   *\n   * <a id='reloadOnSearch'></a>\n   *\n   * - **`reloadOnSearch = true`** - {boolean=} - If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()).\n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   *\n   * <a id='data'></a>\n   *\n   * - **`data`** - {object=} - Arbitrary data object, useful for custom configuration.\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} definition State configuration object.\n   */\n  state(name, definition) {\n    if (isObject(name)) {\n      definition = name;\n    } else {\n      definition.name = name;\n    }\n    this.stateRegistry.register(definition);\n    return this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#onInvalid\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a function to be injected and invoked when transitionTo has been called with an invalid\n   * state reference parameter\n   *\n   * This function can be injected with one some special values:\n   * - **`$to$`**: TargetState\n   * - **`$from$`**: TargetState\n   *\n   * @param {function} callback\n   *   The function which will be injected and invoked, when a matching transition is started.\n   *   The function may optionally return a {TargetState} or a Promise for a TargetState.  If one\n   *   is returned, it is treated as a redirect.\n   */\n\n  onInvalid(callback: Function) {\n    this.invalidCallbacks.push(callback);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/state.ts\n **/","/** @module state */ /** for typedoc */\nimport {map, noop, extend, inherit, pick, omit, values, applyPairs, forEach} from \"../common/common\";\nimport {isDefined, isFunction, isString} from \"../common/predicates\";\nimport {prop} from \"../common/hof\";\nimport {StateDeclaration} from \"./interface\";\n\nimport {State, StateMatcher} from \"./module\";\nimport {Param} from \"../params/module\";\nimport {UrlMatcherFactory} from \"../url/urlMatcherFactory\";\nimport {UrlMatcher} from \"../url/urlMatcher\";\n\nconst parseUrl = (url: string): any => {\n  if (!isString(url)) return false;\n  let root = url.charAt(0) === '^';\n  return { val: root ? url.substring(1) : url, root };\n};\n\nexport type BuilderFunction = (state: State, parent?) => any;\n\ninterface Builders {\n  [key: string]: BuilderFunction[];\n\n  parent: BuilderFunction[];\n  data: BuilderFunction[];\n  url: BuilderFunction[];\n  navigable: BuilderFunction[];\n  params: BuilderFunction[];\n  views: BuilderFunction[];\n  path: BuilderFunction[];\n  includes: BuilderFunction[];\n}\n\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[State]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[State]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[State]] object by registering a decorator function\n * using the [[builder]] method.\n */\nexport class StateBuilder {\n  /** An object that contains all the BuilderFunctions registered, key'd by the name of the State property they build */\n  private builders: Builders;\n\n  constructor(private matcher: StateMatcher, $urlMatcherFactoryProvider: UrlMatcherFactory) {\n    let self = this;\n\n    const isRoot = (state) => state.name === \"\";\n    const root = () => matcher.find(\"\");\n\n    this.builders = {\n      self: [function (state: State) {\n        state.self.$$state = () => state;\n        return state.self;\n      }],\n\n      parent: [function (state: State) {\n        if (isRoot(state)) return null;\n        return matcher.find(self.parentName(state)) || root();\n      }],\n\n      data: [function (state: State) {\n        if (state.parent && state.parent.data) {\n          state.data = state.self.data = inherit(state.parent.data, state.data);\n        }\n        return state.data;\n      }],\n\n      // Build a URLMatcher if necessary, either via a relative or absolute URL\n      url: [function (state: State) {\n        let stateDec: StateDeclaration = <any> state;\n        const parsed = parseUrl(stateDec.url), parent = state.parent;\n        const url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n          params: state.params || {},\n          paramMap: function (paramConfig, isSearch) {\n            if (stateDec.reloadOnSearch === false && isSearch) paramConfig = extend(paramConfig || {}, {dynamic: true});\n            return paramConfig;\n          }\n        });\n\n        if (!url) return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url)) throw new Error(`Invalid url '${url}' in state '${state}'`);\n        return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(<UrlMatcher> url);\n      }],\n\n      // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n      navigable: [function (state: State) {\n        return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n      }],\n\n      params: [function (state: State): { [key: string]: Param } {\n        const makeConfigParam = (config: any, id: string) => Param.fromConfig(id, null, config);\n        let urlParams: Param[] = (state.url && state.url.parameters({inherit: false})) || [];\n        let nonUrlParams: Param[] = values(map(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n        return urlParams.concat(nonUrlParams).map(p => [p.id, p]).reduce(applyPairs, {});\n      }],\n\n      // Each framework-specific ui-router implementation should define its own `views` builder\n      // e.g., src/ng1/viewsBuilder.ts\n      views: [],\n\n      // Keep a full path from the root down to this state as this is needed for state activation.\n      path: [function (state: State) {\n        return state.parent ? state.parent.path.concat(state) : /*root*/ [state];\n      }],\n\n      // Speed up $state.includes() as it's used a lot\n      includes: [function (state: State) {\n        let includes = state.parent ? extend({}, state.parent.includes) : {};\n        includes[state.name] = true;\n        return includes;\n      }]\n    };\n  }\n\n  /**\n   * Registers a [[BuilderFunction]] for a specific [[State]] property (e.g., `parent`, `url`, or `path`).\n   * More than one BuilderFunction can be registered for a given property.\n   *\n   * The BuilderFunction(s) will be used to define the property on any subsequently built [[State]] objects.\n   *\n   * @param name The name of the State property being registered for.\n   * @param fn The BuilderFunction which will be used to build the State property\n   * @returns a function which deregisters the BuilderFunction\n   */\n  builder(name: string, fn: BuilderFunction) {\n    let builders = this.builders;\n    let array = builders[name] || [];\n    // Backwards compat: if only one builder exists, return it, else return whole arary.\n    if (isString(name) && !isDefined(fn)) return array.length > 1 ? array : array[0];\n    if (!isString(name) || !isFunction(fn)) return;\n\n    builders[name] = array;\n    builders[name].push(fn);\n    return () => builders[name].splice(builders[name].indexOf(fn, 1)) && null;\n  }\n\n  /**\n   * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n   * properties and API built.\n   *\n   * @param state an uninitialized State object\n   * @returns the built State object\n   */\n  build(state: State): State {\n    let {matcher, builders} = this;\n    let parent = this.parentName(state);\n    if (parent && !matcher.find(parent)) return null;\n\n    for (let key in builders) {\n      if (!builders.hasOwnProperty(key)) continue;\n      let chain = builders[key].reduce((parentFn, step: BuilderFunction) => (_state) => step(_state, parentFn), noop);\n      state[key] = chain(state);\n    }\n    return state;\n  }\n\n  parentName(state) {\n    let name = state.name || \"\";\n    if (name.indexOf('.') !== -1) return name.substring(0, name.lastIndexOf('.'));\n    if (!state.parent) return \"\";\n    return isString(state.parent) ? state.parent : state.parent.name;\n  }\n\n  name(state) {\n    let name = state.name;\n    if (name.indexOf('.') !== -1 || !state.parent) return name;\n\n    let parentName = isString(state.parent) ? state.parent : state.parent.name;\n    return parentName ? parentName + \".\" + name : name;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateBuilder.ts\n **/","/**\n * This module contains code for State Parameters.\n *\n * See [[ParamDeclaration]]\n * @module params\n * @preferred doc\n */\n/** for typedoc */\nexport * from \"./interface\";\nexport * from \"./param\";\nexport * from \"./paramTypes\";\nexport * from \"./stateParams\";\nexport * from \"./type\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./params/module.ts\n **/","/** @module params */ /** for typedoc */\nimport {extend, filter, map, applyPairs, allTrueR} from \"../common/common\";\nimport {prop, propEq} from \"../common/hof\";\nimport {isInjectable, isDefined, isString, isArray} from \"../common/predicates\";\nimport {RawParams} from \"../params/interface\";\nimport {services} from \"../common/coreservices\";\nimport {matcherConfig} from \"../url/urlMatcherConfig\";\nimport {Type} from \"./type\";\nimport {paramTypes} from \"./paramTypes\";\n\nlet hasOwn = Object.prototype.hasOwnProperty;\nlet isShorthand = cfg => [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n\nexport enum DefType {\n  PATH, SEARCH, CONFIG\n}\n\nfunction unwrapShorthand(cfg) {\n  cfg = isShorthand(cfg) && { value: cfg } || cfg;\n\n  return extend(cfg, {\n    $$fn: isInjectable(cfg.value) ? cfg.value : () => cfg.value\n  });\n}\n\nfunction getType(cfg, urlType, location, id) {\n  if (cfg.type && urlType && urlType.name !== 'string') throw new Error(`Param '${id}' has two type configurations.`);\n  if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type)) return paramTypes.type(cfg.type);\n  if (urlType) return urlType;\n  if (!cfg.type) return (location === DefType.CONFIG ? paramTypes.type(\"any\") : paramTypes.type(\"string\"));\n  return cfg.type instanceof Type ? cfg.type : paramTypes.type(cfg.type);\n}\n\n/**\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional) {\n  let squash = config.squash;\n  if (!isOptional || squash === false) return false;\n  if (!isDefined(squash) || squash == null) return matcherConfig.defaultSquashPolicy();\n  if (squash === true || isString(squash)) return squash;\n  throw new Error(`Invalid squash policy: '${squash}'. Valid policies: false, true, or arbitrary string`);\n}\n\nfunction getReplace(config, arrayMode, isOptional, squash) {\n  let replace, configuredKeys, defaultPolicy = [\n    {from: \"\", to: (isOptional || arrayMode ? undefined : \"\")},\n    {from: null, to: (isOptional || arrayMode ? undefined : \"\")}\n  ];\n  replace = isArray(config.replace) ? config.replace : [];\n  if (isString(squash)) replace.push({ from: squash, to: undefined });\n  configuredKeys = map(replace, prop(\"from\"));\n  return filter(defaultPolicy, item => configuredKeys.indexOf(item.from) === -1).concat(replace);\n}\n\n\nexport class Param {\n  id: string;\n  type: Type;\n  location: DefType;\n  array: boolean;\n  squash: (boolean|string);\n  replace: any;\n  isOptional: boolean;\n  dynamic: boolean;\n  config: any;\n\n  constructor(id: string, type: Type, config: any, location: DefType) {\n    config = unwrapShorthand(config);\n    type = getType(config, type, location, id);\n    let arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n    let isOptional = config.value !== undefined;\n    let dynamic = config.dynamic === true;\n    let squash = getSquashPolicy(config, isOptional);\n    let replace = getReplace(config, arrayMode, isOptional, squash);\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      let arrayDefaults = { array: (location === DefType.SEARCH ? \"auto\" : false) };\n      let arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    extend(this, {id, type, location, squash, replace, isOptional, dynamic, config, array: arrayMode});\n  }\n\n  isDefaultValue(value: any): boolean {\n    return this.isOptional && this.type.equals(this.value(), value);\n  }\n\n  /**\n   * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n   * default value, which may be the result of an injectable function.\n   */\n  value(value?: any): any {\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    const $$getDefaultValue = () => {\n      if (!services.$injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      let defaultValue = services.$injector.invoke(this.config.$$fn);\n      if (defaultValue !== null && defaultValue !== undefined && !this.type.is(defaultValue))\n        throw new Error(`Default value (${defaultValue}) for parameter '${this.id}' is not an instance of Type (${this.type.name})`);\n      return defaultValue;\n    };\n\n    const $replace = (val) => {\n      let replacement: any = map(filter(this.replace, propEq('from', val)), prop(\"to\"));\n      return replacement.length ? replacement[0] : val;\n    };\n\n    value = $replace(value);\n    return !isDefined(value) ? $$getDefaultValue() : this.type.$normalize(value);\n  }\n\n  isSearch(): boolean {\n    return this.location === DefType.SEARCH;\n  }\n\n  validates(value: any): boolean {\n    // There was no parameter value, but the param is optional\n    if ((!isDefined(value) || value === null) && this.isOptional) return true;\n\n    // The value was not of the correct Type, and could not be decoded to the correct Type\n    const normalized = this.type.$normalize(value);\n    if (!this.type.is(normalized)) return false;\n\n    // The value was of the correct type, but when encoded, did not match the Type's regexp\n    const encoded = this.type.encode(normalized);\n    return !(isString(encoded) && !this.type.pattern.exec(<string> encoded));\n  }\n\n  toString() {\n    return `{Param:${this.id} ${this.type} squash: '${this.squash}' optional: ${this.isOptional}}`;\n  }\n\n  /** Creates a new [[Param]] from a CONFIG block */\n  static fromConfig(id: string, type: Type, config: any): Param {\n    return new Param(id, type, config, DefType.CONFIG);\n  }\n\n  /** Creates a new [[Param]] from a url PATH */\n  static fromPath(id: string, type: Type, config: any): Param {\n    return new Param(id, type, config, DefType.PATH);\n  }\n\n  /** Creates a new [[Param]] from a url SEARCH */\n  static fromSearch(id: string, type: Type, config: any): Param {\n    return new Param(id, type, config, DefType.SEARCH);\n  }\n\n  static values(params: Param[], values = {}): RawParams {\n    return <RawParams> params.map(param => [param.id, param.value(values[param.id])]).reduce(applyPairs, {});\n  }\n\n  /**\n   * Finds [[Param]] objects which have different param values\n   *\n   * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n   *\n   * @param params: The list of Param objects to filter\n   * @param values1: The first set of parameter values\n   * @param values2: the second set of parameter values\n   *\n   * @returns any Param objects whose values were different between values1 and values2\n   */\n  static changed(params: Param[], values1 = {}, values2 = {}): Param[] {\n    return params.filter(param => !param.type.equals(values1[param.id], values2[param.id]));\n  }\n\n  /**\n   * Checks if two param value objects are equal (for a set of [[Param]] objects)\n   *\n   * @param params The list of [[Param]] objects to check\n   * @param values1 The first set of param values\n   * @param values2 The second set of param values\n   *\n   * @returns true if the param values in values1 and values2 are equal\n   */\n  static equals(params: Param[], values1 = {}, values2 = {}): boolean {\n    return Param.changed(params, values1, values2).length === 0;\n  }\n\n  /** Returns true if a the parameter values are valid, according to the Param definitions */\n  static validates(params: Param[], values = {}): boolean {\n    return params.map(param => param.validates(values[param.id])).reduce(allTrueR, true);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./params/param.ts\n **/","/** @module url */ /** for typedoc */\nimport {isDefined, isString} from \"../common/predicates\";\n\nexport class MatcherConfig {\n  _isCaseInsensitive: boolean = false;\n  _isStrictMode: boolean = true;\n  _defaultSquashPolicy: (boolean|string) = false;\n\n  caseInsensitive(value?: boolean): boolean {\n    return this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive;\n  }\n\n  strictMode(value?: boolean): boolean {\n    return this._isStrictMode = isDefined(value) ? value : this._isStrictMode;\n  }\n\n  defaultSquashPolicy(value?: (boolean|string)): (boolean|string) {\n    if (isDefined(value) && value !== true && value !== false && !isString(value))\n      throw new Error(`Invalid squash policy: ${value}. Valid policies: false, true, arbitrary-string`);\n    return this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy;\n  }\n}\n\n// TODO: Do not export global instance; create one in UIRouter() constructor\nexport let matcherConfig = new MatcherConfig();\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/urlMatcherConfig.ts\n **/","/** @module params */ /** for typedoc */\nimport {extend, filter, map} from \"../common/common\";\nimport {isArray, isDefined} from \"../common/predicates\";\nimport {TypeDefinition} from \"./interface\";\n\n/**\n * Wraps up a `Type` object to handle array values.\n */\nfunction ArrayType(type, mode) {\n  // Wrap non-array value as array\n  function arrayWrap(val): any[] { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n\n  // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n  function arrayUnwrap(val) {\n    switch (val.length) {\n      case 0: return undefined;\n      case 1: return mode === \"auto\" ? val[0] : val;\n      default: return val;\n    }\n  }\n\n  // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n  function arrayHandler(callback, allTruthyMode?: boolean) {\n    return function handleArray(val) {\n      if (isArray(val) && val.length === 0) return val;\n      let arr = arrayWrap(val);\n      let result = map(arr, callback);\n      return (allTruthyMode === true) ? filter(result, x => !x).length === 0 : arrayUnwrap(result);\n    };\n  }\n\n  // Wraps type (.equals) functions to operate on each value of an array\n  function arrayEqualsHandler(callback) {\n    return function handleArray(val1, val2) {\n      let left = arrayWrap(val1), right = arrayWrap(val2);\n      if (left.length !== right.length) return false;\n      for (let i = 0; i < left.length; i++) {\n        if (!callback(left[i], right[i])) return false;\n      }\n      return true;\n    };\n  }\n\n  ['encode', 'decode', 'equals', '$normalize'].map(name => {\n    this[name] = (name === 'equals' ? arrayEqualsHandler : arrayHandler)(type[name].bind(type));\n  });\n\n  extend(this, {\n    name: type.name,\n    pattern: type.pattern,\n    is: arrayHandler(type.is.bind(type), true),\n    $arrayMode: mode\n  });\n}\n\n/**\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\n * string parameters matched in a URL. Used by [[UrlMatcher]]\n * objects when matching or formatting URLs, or comparing or validating parameter values.\n *\n * See [[UrlMatcherFactory.type]] for more information on registering custom types.\n *\n * @example\n * ```\n *\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * ```\n */\nexport class Type implements TypeDefinition {\n  pattern: RegExp = /.*/;\n  name: string;\n  raw: boolean;\n\n  /**\n   * @param def  A configuration object which contains the custom type definition.  The object's\n   *        properties will override the default methods and/or pattern in `Type`'s public interface.\n   * @returns a new Type object\n   */\n  constructor(def: TypeDefinition) {\n    extend(this, def);\n  }\n\n\n  // consider these four methods to be \"abstract methods\" that should be overridden\n  /** @inheritdoc */\n  is(val: any, key?: string): boolean { return true; }\n  /** @inheritdoc */\n  encode(val: any, key?: string): (string|string[]) { return val; }\n  /** @inheritdoc */\n  decode(val: string, key?: string): any { return val; }\n  /** @inheritdoc */\n  equals(a: any, b: any): boolean { return a == b; }\n\n\n  $subPattern() {\n    let sub = this.pattern.toString();\n    return sub.substr(1, sub.length - 2);\n  }\n\n  toString() {\n    return `{Type:${this.name}}`;\n  }\n\n  /** Given an encoded string, or a decoded object, returns a decoded object */\n  $normalize(val) {\n    return this.is(val) ? val : this.decode(val);\n  }\n\n  /**\n   * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n   * e.g.:\n   * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n   * - url: \"/path?queryParam=1&queryParam=2\n   * - $stateParams.queryParam will be [1, 2]\n   * if `mode` is \"auto\", then\n   * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n   * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n   */\n  $asArray(mode, isSearch) {\n    if (!mode) return this;\n    if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n    return new ArrayType(this, mode);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./params/type.ts\n **/","/** @module params */ /** for typedoc */\nimport {fromJson, toJson, identity, equals, inherit, map, extend} from \"../common/common\";\nimport {isDefined} from \"../common/predicates\";\nimport {is, val} from \"../common/hof\";\nimport {services} from \"../common/coreservices\";\nimport {Type} from \"./type\";\n\n// Use tildes to pre-encode slashes.\n// If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n// and bidirectional encoding/decoding fails.\n// Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\nfunction valToString(val) { return val != null ? val.toString().replace(/~/g, \"~~\").replace(/\\//g, \"~2F\") : val; }\nfunction valFromString(val) { return val != null ? val.toString().replace(/~2F/g, \"/\").replace(/~~/g, \"~\") : val; }\n\nexport class ParamTypes {\n  types: any;\n  enqueue: boolean = true;\n  typeQueue: any[] = [];\n\n  private defaultTypes: any = {\n    \"hash\": {\n      encode: valToString,\n      decode: valFromString,\n      is: is(String),\n      pattern: /.*/,\n      equals: (a, b) => a == b // allow coersion for null/undefined/\"\"\n    },\n    \"string\": {\n      encode: valToString,\n      decode: valFromString,\n      is: is(String),\n      pattern: /[^/]*/\n    },\n    \"int\": {\n      encode: valToString,\n      decode(val) { return parseInt(val, 10); },\n      is(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /-?\\d+/\n    },\n    \"bool\": {\n      encode: val => val && 1 || 0,\n      decode: val => parseInt(val, 10) !== 0,\n      is: is(Boolean),\n      pattern: /0|1/\n    },\n    \"date\": {\n      encode(val) {\n        return !this.is(val) ? undefined : [\n          val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode(val) {\n        if (this.is(val)) return val;\n        let match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: (val) => val instanceof Date && !isNaN(val.valueOf()),\n      equals(l, r) {\n        return ['getFullYear', 'getMonth', 'getDate']\n            .reduce((acc, fn) => acc && l[fn]() === r[fn](), true)\n      },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    \"json\": {\n      encode: toJson,\n      decode: fromJson,\n      is: is(Object),\n      equals: equals,\n      pattern: /[^/]*/\n    },\n    \"any\": { // does not encode/decode\n      encode: identity,\n      decode: identity,\n      equals: equals,\n      pattern: /.*/\n    }\n  };\n\n  constructor() {\n    // Register default types. Store them in the prototype of this.types.\n    const makeType = (definition, name) => new Type(extend({ name }, definition));\n    this.types = inherit(map(this.defaultTypes, makeType), {});\n  }\n\n  type(name, definition?: any, definitionFn?: Function) {\n    if (!isDefined(definition)) return this.types[name];\n    if (this.types.hasOwnProperty(name)) throw new Error(`A type named '${name}' has already been defined.`);\n\n    this.types[name] = new Type(extend({ name }, definition));\n\n    if (definitionFn) {\n      this.typeQueue.push({ name, def: definitionFn });\n      if (!this.enqueue) this._flushTypeQueue();\n    }\n    return this;\n  }\n\n  _flushTypeQueue() {\n    while (this.typeQueue.length) {\n      let type = this.typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      extend(this.types[type.name], services.$injector.invoke(type.def));\n    }\n  }\n}\n\nexport let paramTypes = new ParamTypes();\n\n\n\n/** WEBPACK FOOTER **\n ** ./params/paramTypes.ts\n **/","/** @module params */ /** for typedoc */\nimport {extend, ancestors} from \"../common/common\";\n\nexport class StateParams {\n  constructor(params: Object = {}) {\n    extend(this, params);\n  }\n\n  /**\n   * Merges a set of parameters with all parameters inherited between the common parents of the\n   * current state and a given destination state.\n   *\n   * @param {Object} newParams The set of parameters which will be composited with inherited params.\n   * @param {Object} $current Internal definition of object representing the current state.\n   * @param {Object} $to Internal definition of object representing state to transition to.\n   */\n  $inherit(newParams, $current, $to) {\n    let parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n    for (let i in parents) {\n      if (!parents[i] || !parents[i].params) continue;\n      parentParams = Object.keys(parents[i].params);\n      if (!parentParams.length) continue;\n\n      for (let j in parentParams) {\n        if (inheritList.indexOf(parentParams[j]) >= 0) continue;\n        inheritList.push(parentParams[j]);\n        inherited[parentParams[j]] = this[parentParams[j]];\n      }\n    }\n    return extend({}, inherited, newParams);\n  };\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./params/stateParams.ts\n **/","/** @module state */ /** for typedoc */\nimport {prop} from \"../../common/hof\";\nimport {Param} from \"../../params/param\";\n\nimport {TreeChanges} from \"../../transition/interface\";\nimport {Transition} from \"../../transition/transition\";\nimport {Rejection, RejectType} from \"../../transition/rejectFactory\";\n\nimport {StateDeclaration} from \"../interface\";\nimport {StateService} from \"../stateService\";\nimport {TargetState} from \"../targetState\";\nimport {ViewHooks} from \"./viewHooks\";\nimport {EnterExitHooks} from \"./enterExitHooks\";\nimport {ResolveHooks} from \"./resolveHooks\";\nimport {UrlRouter} from \"../../url/urlRouter\";\nimport {services} from \"../../common/coreservices\";\nimport {UIRouterGlobals} from \"../../globals\";\n\n/**\n * This class:\n *\n * * Takes a blank transition object and adds all the hooks necessary for it to behave like a state transition.\n *\n * * Runs the transition, returning a chained promise which:\n *   * transforms the resolved Transition.promise to the final destination state.\n *   * manages the rejected Transition.promise, checking for Dynamic or Redirected transitions\n *\n * * Registers a handler to update global $state data such as \"active transitions\" and \"current state/params\"\n *\n * * Registers view hooks, which maintain the list of active view configs and sync with/update the ui-views\n *\n * * Registers onEnter/onRetain/onExit hooks which delegate to the state's hooks of the same name, at the appropriate time\n *\n * * Registers eager and lazy resolve hooks\n */\nexport class TransitionManager {\n  private treeChanges: TreeChanges;\n  private enterExitHooks: EnterExitHooks;\n  private viewHooks: ViewHooks;\n  private resolveHooks: ResolveHooks;\n  private $q;\n\n  constructor(\n      private transition: Transition,\n      private $transitions,\n      private $urlRouter: UrlRouter,\n      private $view, // service\n      private $state: StateService,\n      private globals: UIRouterGlobals\n  ) {\n    this.$q = services.$q;\n    this.viewHooks = new ViewHooks(transition, $view);\n    this.enterExitHooks = new EnterExitHooks(transition);\n    this.resolveHooks = new ResolveHooks(transition);\n\n    this.treeChanges = transition.treeChanges();\n\n    this.registerUpdateGlobalState();\n    this.viewHooks.registerHooks();\n    this.enterExitHooks.registerHooks();\n    this.resolveHooks.registerHooks();\n  }\n\n  runTransition(): Promise<any> {\n    this.globals.transitionHistory.enqueue(this.transition);\n    return this.transition.run()\n        .then((trans: Transition) => trans.to()) // resolve to the final state (TODO: good? bad?)\n        .catch(error => this.transRejected(error)); // if rejected, handle dynamic and redirect\n  }\n\n  registerUpdateGlobalState() {\n    // After globals.current is updated at priority: 10000\n    this.transition.onSuccess({}, this.updateUrl.bind(this), {priority: 9999});\n  }\n\n  transRejected(error): (StateDeclaration|Promise<any>) {\n    let {transition, $state, $q} = this;\n    // Handle redirect and abort\n    if (error instanceof Rejection) {\n      if (error.type === RejectType.IGNORED) {\n        this.$urlRouter.update();\n        return $state.current;\n      }\n\n      if (error.type === RejectType.SUPERSEDED && error.redirected && error.detail instanceof TargetState) {\n        return this._redirectMgr(transition.redirect(error.detail)).runTransition();\n      }\n\n      if (error.type === RejectType.ABORTED) {\n        this.$urlRouter.update();\n      }\n    }\n\n    this.$transitions.defaultErrorHandler()(error);\n\n    return $q.reject(error);\n  }\n\n  updateUrl() {\n    let transition = this.transition;\n    let {$urlRouter, $state} = this;\n    let options = transition.options();\n\n    if (options.location && $state.$current.navigable) {\n      $urlRouter.push($state.$current.navigable.url, $state.params, { replace: options.location === 'replace' });\n    }\n    $urlRouter.update(true);\n  }\n\n  private _redirectMgr(redirect: Transition): TransitionManager {\n    let {$transitions, $urlRouter, $view, $state, globals} = this;\n    return new TransitionManager(redirect, $transitions, $urlRouter, $view, $state, globals);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/hooks/transitionManager.ts\n **/","/** @module state */ /** for typedoc */\n\nimport {StateDeclaration, StateOrName} from \"./interface\";\nimport {ParamsOrArray} from \"../params/interface\";\nimport {TransitionOptions} from \"../transition/interface\";\n\nimport {State} from \"./module\";\n\n/**\n * @ngdoc object\n * @name ui.router.state.type:TargetState\n *\n * @description\n * Encapsulate the desired target of a transition.\n * Wraps an identifier for a state, a set of parameters, and transition options with the definition of the state.\n *\n * @param {StateOrName} _identifier  An identifier for a state. Either a fully-qualified path, or the object\n *            used to define the state.\n * @param {IState} _definition The `State` object definition.\n * @param {ParamsOrArray} _params Parameters for the target state\n * @param {TransitionOptions} _options Transition options.\n */\nexport class TargetState {\n  private _params: ParamsOrArray;\n\n  constructor(\n    private _identifier: StateOrName,\n    private _definition?: State,\n    _params: ParamsOrArray = {},\n    private _options: TransitionOptions = {}\n  ) {\n    this._params = _params || {};\n  }\n\n  name() {\n    return this._definition && this._definition.name || this._identifier;\n  }\n\n  identifier(): StateOrName {\n    return this._identifier;\n  }\n\n  params(): ParamsOrArray {\n    return this._params;\n  }\n\n  $state(): State {\n    return this._definition;\n  }\n\n  state(): StateDeclaration {\n    return this._definition && this._definition.self;\n  }\n\n  options() {\n    return this._options;\n  }\n\n  exists(): boolean {\n    return !!(this._definition && this._definition.self);\n  }\n\n  valid(): boolean {\n    return !this.error();\n  }\n\n  error(): string {\n    let base = <any> this.options().relative;\n    if (!this._definition && !!base) {\n      let stateName = base.name ? base.name : base;\n      return `Could not resolve '${this.name()}' from state '${stateName}'`;\n    }\n    if (!this._definition)\n      return `No such state '${this.name()}'`;\n    if (!this._definition.self)\n      return `State '${this.name()}' has an invalid definition`;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/targetState.ts\n **/","/** @module state */ /** for typedoc */\nimport {noop} from \"../../common/common\";\nimport {services} from \"../../common/coreservices\";\n\nimport {TreeChanges} from \"../../transition/interface\";\nimport {Transition} from \"../../transition/transition\";\n\nimport {ViewService} from \"../../view/view\";\nimport {ViewConfig} from \"../../view/interface\";\n\nexport class ViewHooks {\n  private treeChanges: TreeChanges;\n  private enteringViews: ViewConfig[];\n  private exitingViews: ViewConfig[];\n  private transition: Transition;\n  private $view: ViewService; // service\n\n  constructor(transition: Transition, $view: ViewService) {\n    this.transition = transition;\n    this.$view = $view;\n\n    this.treeChanges = transition.treeChanges();\n    this.enteringViews = transition.views(\"entering\");\n    this.exitingViews = transition.views(\"exiting\");\n  }\n\n  loadAllEnteringViews() {\n    return services.$q.all(this.enteringViews.map(view => view.load())).then(noop);\n  }\n\n  updateViews() {\n    let $view = this.$view;\n    this.exitingViews.forEach((viewConfig: ViewConfig) => $view.deactivateViewConfig(viewConfig));\n    this.enteringViews.forEach((viewConfig: ViewConfig) => $view.activateViewConfig(viewConfig));\n    $view.sync();\n  }\n\n  registerHooks() {\n    if (this.enteringViews.length) {\n      this.transition.onStart({}, this.loadAllEnteringViews.bind(this));\n    }\n\n    if (this.exitingViews.length || this.enteringViews.length)\n      this.transition.onSuccess({}, this.updateViews.bind(this));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/hooks/viewHooks.ts\n **/","/** @module state */ /** for typedoc */\nimport {Transition} from \"../../transition/transition\";\n\nexport class EnterExitHooks {\n  private transition: Transition;\n\n  constructor(transition: Transition) {\n    this.transition = transition;\n  }\n\n  registerHooks() {\n    this.registerOnEnterHooks();\n    this.registerOnRetainHooks();\n    this.registerOnExitHooks();\n  }\n\n  registerOnEnterHooks() {\n    this.transition.entering().filter(state => !!state.onEnter)\n        .forEach(state => this.transition.onEnter({entering: state.name}, state.onEnter));\n  }\n\n  registerOnRetainHooks() {\n    this.transition.retained().filter(state => !!state.onRetain)\n        .forEach(state => this.transition.onRetain({retained: state.name}, state.onRetain));\n  }\n\n  registerOnExitHooks() {\n    this.transition.exiting().filter(state => !!state.onExit)\n        .forEach(state => this.transition.onExit({exiting: state.name}, state.onExit));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/hooks/enterExitHooks.ts\n **/","/** @module state */ /** for typedoc */\nimport {extend, find, tail, map} from \"../../common/common\";\nimport {propEq} from \"../../common/hof\";\n\nimport {ResolvePolicy} from \"../../resolve/interface\";\n\nimport {Transition} from \"../../transition/transition\";\nimport {val} from \"../../common/hof\";\nimport {Resolvable} from \"../../resolve/resolvable\";\n\n\nlet LAZY = ResolvePolicy[ResolvePolicy.LAZY];\nlet EAGER = ResolvePolicy[ResolvePolicy.EAGER];\n\n/**\n * Registers Eager and Lazy (for entering states) resolve hooks\n *\n * * registers a hook that resolves EAGER resolves, for the To Path, onStart of the transition\n * * registers a hook that resolves LAZY resolves, for each state, before it is entered\n */\nexport class ResolveHooks {\n  constructor(private transition: Transition) { }\n\n  registerHooks() {\n    let treeChanges = this.transition.treeChanges();\n\n    /** a function which resolves any EAGER Resolvables for a Path */\n    (<any> $eagerResolvePath).$inject = ['$transition$'];\n    function $eagerResolvePath($transition$) {\n      return tail(<any[]> treeChanges.to).resolveContext.resolvePath(extend({ transition: $transition$ }, { resolvePolicy: EAGER }));\n    }\n\n    /** Returns a function which pre-resolves any LAZY Resolvables for a Node in a Path */\n    (<any> $lazyResolveEnteringState).$inject = ['$state$', '$transition$'];\n    function $lazyResolveEnteringState($state$, $transition$) {\n      let node = find(<any[]> treeChanges.entering, propEq('state', $state$));\n\n      // A new Resolvable contains all the resolved data in this context as a single object, for injection as `$resolve$`\n      let context = node.resolveContext;\n      let $resolve$ = new Resolvable(\"$resolve$\", () => map(context.getResolvables(), (r: Resolvable) => r.data));\n      var options = extend({transition: $transition$}, { resolvePolicy: LAZY });\n\n      // Resolve all the LAZY resolves, then resolve the `$resolve$` object, then add `$resolve$` to the context\n      return context.resolvePathElement(node.state, options)\n          .then(() => $resolve$.resolveResolvable(context))\n          .then(() => context.addResolvables({$resolve$}, node.state));\n    }\n\n    // Resolve eager resolvables before when the transition starts\n    this.transition.onStart({}, $eagerResolvePath, { priority: 1000 });\n    // Resolve lazy resolvables before each state is entered\n    this.transition.onEnter({ entering: val(true) }, $lazyResolveEnteringState, { priority: 1000 });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/hooks/resolveHooks.ts\n **/","/** @module resolve */ /** for typedoc */\nimport {Resolvable} from \"./resolvable\";\n\nexport interface Resolvables {\n  [key: string]: Resolvable;\n}\n\nexport interface IOptions1 {\n  omitOwnLocals ?: string[];\n  resolvePolicy ?: string;\n}\n\n// Defines the available policies and their ordinals.\nexport enum ResolvePolicy {\n  JIT, // JIT resolves are resolved just-in-time, right before an injected function that depends on them is invoked.\n  LAZY, // Lazy resolves are resolved before their state is entered.\n  EAGER // Eager resolves are resolved before the transition starts.\n}\n\n\n/** WEBPACK FOOTER **\n ** ./resolve/interface.ts\n **/","/** @module resolve */ /** for typedoc */\nimport {extend, pick, map, filter} from \"../common/common\";\nimport {not} from \"../common/hof\";\nimport {isInjectable} from \"../common/predicates\";\n\nimport {services} from \"../common/coreservices\";\nimport {trace} from \"../common/trace\";\nimport {Resolvables, IOptions1} from \"./interface\";\n\nimport {ResolveContext} from \"./resolveContext\";\n\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nexport class Resolvable {\n  constructor(name: string, resolveFn: Function, preResolvedData?: any) {\n    extend(this, {\n     name, \n     resolveFn, \n     deps: services.$injector.annotate(resolveFn, services.$injector.strictDi), \n     data: preResolvedData \n   });\n  }\n\n  name: string;\n  resolveFn: Function;\n  deps: string[];\n\n  promise: Promise<any> = undefined;\n  data: any;\n\n  // synchronous part:\n  // - sets up the Resolvable's promise\n  // - retrieves dependencies' promises\n  // - returns promise for async part\n\n  // asynchronous part:\n  // - wait for dependencies promises to resolve\n  // - invoke the resolveFn\n  // - wait for resolveFn promise to resolve\n  // - store unwrapped data\n  // - resolve the Resolvable's promise\n  resolveResolvable(resolveContext: ResolveContext, options: IOptions1 = {}) {\n    let {name, deps, resolveFn} = this;\n    \n    trace.traceResolveResolvable(this, options);\n    // First, set up an overall deferred/promise for this Resolvable\n    let deferred = services.$q.defer();\n    this.promise = deferred.promise;\n    // Load a map of all resolvables for this state from the context path\n    // Omit the current Resolvable from the result, so we don't try to inject this into this\n    let ancestorsByName: Resolvables = resolveContext.getResolvables(null, {  omitOwnLocals: [ name ] });\n\n    // Limit the ancestors Resolvables map to only those that the current Resolvable fn's annotations depends on\n    let depResolvables: Resolvables = <any> pick(ancestorsByName, deps);\n\n    // Get promises (or synchronously invoke resolveFn) for deps\n    let depPromises: any = map(depResolvables, (resolvable: Resolvable) => resolvable.get(resolveContext, options));\n\n    // Return a promise chain that waits for all the deps to resolve, then invokes the resolveFn passing in the\n    // dependencies as locals, then unwraps the resulting promise's data.\n    return services.$q.all(depPromises).then(locals => {\n      try {\n        let result = services.$injector.invoke(resolveFn, null, locals);\n        deferred.resolve(result);\n      } catch (error) {\n        deferred.reject(error);\n      }\n      return this.promise;\n    }).then(data => {\n      this.data = data;\n      trace.traceResolvableResolved(this, options);\n      return this.promise;\n    });\n  }\n\n  get(resolveContext: ResolveContext, options?: IOptions1): Promise<any> {\n    return this.promise || this.resolveResolvable(resolveContext, options);\n  }\n\n  toString() {\n    return `Resolvable(name: ${this.name}, requires: [${this.deps}])`;\n  }\n\n  /**\n   * Validates the result map as a \"resolve:\" style object, then transforms the resolves into Resolvables\n   */\n  static makeResolvables(resolves: { [key: string]: Function; }): Resolvables {\n    // If a hook result is an object, it should be a map of strings to functions.\n    let invalid = filter(resolves, not(isInjectable)), keys = Object.keys(invalid);\n    if (keys.length)\n      throw new Error(`Invalid resolve key/value: ${keys[0]}/${invalid[keys[0]]}`);\n    return map(resolves, (fn, name: string) => new Resolvable(name, fn));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./resolve/resolvable.ts\n **/","/** @module state */ /** for typedoc */\n\nimport {StateDeclaration, _ViewDeclaration} from \"./interface\";\nimport {extend, defaults, values, find} from \"../common/common\";\nimport {propEq} from \"../common/hof\";\nimport {Param} from \"../params/module\";\nimport {UrlMatcher} from \"../url/module\";\n\n/**\n * @ngdoc object\n * @name ui.router.state.type:State\n *\n * @description\n * Definition object for states. Includes methods for manipulating the state heirarchy.\n *\n * @param {Object} config  A configuration object hash that includes the results of user-supplied\n *        values, as well as values from `StateBuilder`.\n *\n * @returns {Object}  Returns a new `State` object.\n */\nexport class State {\n\n  public parent: State;\n  public name: string;\n  public abstract: boolean;\n  public resolve: { [key: string]: Function; };\n  public resolvePolicy: any;\n  public url: UrlMatcher;\n  public params: { [key: string]: Param };\n  public views: { [key: string]: _ViewDeclaration; };\n  public self: StateDeclaration;\n  public navigable: State;\n  public path: State[];\n  public data: any;\n  public includes: { [name: string] : boolean };\n\n  constructor(config?: StateDeclaration) {\n    extend(this, config);\n    // Object.freeze(this);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.type:State#is\n   * @methodOf ui.router.state.type:State\n   *\n   * @description\n   * Compares the identity of the state against the passed value, which is either an object\n   * reference to the actual `State` instance, the original definition object passed to\n   * `$stateProvider.state()`, or the fully-qualified name.\n   *\n   * @param {Object} ref Can be one of (a) a `State` instance, (b) an object that was passed\n   *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n   * @returns {boolean} Returns `true` if `ref` matches the current `State` instance.\n   */\n  is(ref: State|StateDeclaration|string): boolean {\n    return this === ref || this.self === ref || this.fqn() === ref;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.type:State#fqn\n   * @methodOf ui.router.state.type:State\n   *\n   * @description\n   * Returns the fully-qualified name of the state, based on its current position in the tree.\n   *\n   * @returns {string} Returns a dot-separated name of the state.\n   */\n  fqn(): string {\n    if (!this.parent || !(this.parent instanceof this.constructor)) return this.name;\n    let name = this.parent.fqn();\n    return name ? name + \".\" + this.name : this.name;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.type:State#root\n   * @methodOf ui.router.state.type:State\n   *\n   * @description\n   * Returns the root node of this state's tree.\n   *\n   * @returns {State} The root of this state's tree.\n   */\n  root(): State {\n    return this.parent && this.parent.root() || this;\n  }\n\n  parameters(opts?): Param[] {\n    opts = defaults(opts, { inherit: true });\n    let inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n    return inherited.concat(values(this.params));\n  }\n\n  parameter(id: string, opts: any = {}): Param {\n    return (\n        this.url && this.url.parameter(id, opts) ||\n        find(values(this.params), propEq('id', id)) ||\n        opts.inherit && this.parent && this.parent.parameter(id)\n    );\n  }\n\n  toString() {\n    return this.fqn();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateObject.ts\n **/","/** @module state */ /** for typedoc */\nimport {isString} from \"../common/predicates\";\nimport {StateOrName} from \"./interface\";\nimport {State} from \"./module\";\n\nexport class StateMatcher {\n  constructor (private _states: { [key: string]: State }) { }\n  \n  isRelative(stateName: string) {\n    stateName = stateName || \"\";\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n\n  find(stateOrName: StateOrName, base?: StateOrName): State {\n    if (!stateOrName && stateOrName !== \"\") return undefined;\n    let isStr = isString(stateOrName);\n    let name: string = isStr ? stateOrName : (<any>stateOrName).name;\n\n    if (this.isRelative(name)) name = this.resolvePath(name, base);\n    let state = this._states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    }\n    return undefined;\n  }\n\n  resolvePath(name: string, base: StateOrName) {\n    if (!base) throw new Error(`No reference point given for path '${name}'`);\n    \n    let baseState: State = this.find(base);\n\n    let splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n\n    for (; i < pathLength; i++) {\n      if (splitName[i] === \"\" && i === 0) {\n        current = baseState;\n        continue;\n      }\n      if (splitName[i] === \"^\") {\n        if (!current.parent) throw new Error(`Path '${name}' not valid for state '${baseState.name}'`);\n        current = current.parent;\n        continue;\n      }\n      break;\n    }\n    let relName = splitName.slice(i).join(\".\");\n    return current.name + (current.name && relName ? \".\" : \"\") + relName;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateMatcher.ts\n **/","/** @module state */ /** for typedoc */\nimport {extend, inherit, pluck, equalForKeys, abstractKey} from \"../common/common\";\nimport {isString} from \"../common/predicates\";\nimport {StateDeclaration} from \"./interface\";\nimport {State} from \"./module\";\nimport {StateBuilder} from \"./stateBuilder\";\nimport {StateService} from \"./stateService\";\n\nexport class StateQueueManager {\n  queue: State[];\n  private $state: StateService;\n\n  constructor(\n      public states: { [key: string]: State; },\n      public builder: StateBuilder,\n      public $urlRouterProvider) {\n    this.queue = [];\n  }\n\n  register(config: StateDeclaration) {\n    let {states, queue, $state} = this;\n    // Wrap a new object around the state so we can store our private details easily.\n    // @TODO: state = new State(extend({}, config, { ... }))\n    let state = inherit(new State(), extend({}, config, {\n      self: config,\n      resolve: config.resolve || {},\n      toString: () => config.name\n    }));\n\n    if (!isString(state.name)) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(state.name) || pluck(queue, 'name').indexOf(state.name) !== -1)\n      throw new Error(`State '${state.name}' is already defined`);\n\n    queue.push(state);\n\n    if (this.$state) {\n      this.flush($state);\n    }\n    return state;\n  }\n\n  flush($state) {\n    let {queue, states, builder} = this;\n    let result, state, orphans = [], orphanIdx, previousQueueLength = {};\n\n    while (queue.length > 0) {\n      state = queue.shift();\n      result = builder.build(state);\n      orphanIdx = orphans.indexOf(state);\n\n      if (result) {\n        if (states.hasOwnProperty(state.name))\n          throw new Error(`State '${name}' is already defined`);\n        states[state.name] = state;\n        this.attachRoute($state, state);\n        if (orphanIdx >= 0) orphans.splice(orphanIdx, 1);\n        continue;\n      }\n\n      let prev = previousQueueLength[state.name];\n      previousQueueLength[state.name] = queue.length;\n      if (orphanIdx >= 0 && prev === queue.length) {\n        // Wait until two consecutive iterations where no additional states were dequeued successfully.\n        // throw new Error(`Cannot register orphaned state '${state.name}'`);\n        return states;\n      } else if (orphanIdx < 0) {\n        orphans.push(state);\n      }\n\n      queue.push(state);\n    }\n    return states;\n  }\n\n  autoFlush($state) {\n    this.$state = $state;\n    this.flush($state);\n  }\n\n  attachRoute($state, state) {\n    let {$urlRouterProvider} = this;\n    if (state[abstractKey] || !state.url) return;\n\n    $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n      if ($state.$current.navigable !== state || !equalForKeys($match, $stateParams)) {\n        $state.transitionTo(state, $match, { inherit: true, location: false });\n      }\n    }]);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateQueueManager.ts\n **/","/** @module state */ /** for typedoc */\n\nimport {State} from \"./stateObject\";\nimport {StateMatcher} from \"./stateMatcher\";\nimport {StateBuilder} from \"./stateBuilder\";\nimport {StateQueueManager} from \"./stateQueueManager\";\nimport {UrlMatcherFactory} from \"../url/urlMatcherFactory\";\nimport {StateDeclaration} from \"./interface\";\nimport {BuilderFunction} from \"./stateBuilder\";\nimport {StateOrName} from \"./interface\";\n\nexport class StateRegistry {\n  private _root: State;\n  private states: { [key: string]: State } = {};\n\n  matcher: StateMatcher;\n  private builder: StateBuilder;\n  stateQueue: StateQueueManager;\n\n  constructor(urlMatcherFactory: UrlMatcherFactory, urlRouterProvider) {\n    this.matcher = new StateMatcher(this.states);\n    this.builder = new StateBuilder(this.matcher, urlMatcherFactory);\n    this.stateQueue = new StateQueueManager(this.states, this.builder, urlRouterProvider);\n\n    let rootStateDef: StateDeclaration = {\n      name: '',\n      url: '^',\n      views: null,\n      params: {\n        '#': { value: null, type: 'hash', dynamic: true }\n      },\n      abstract: true\n    };\n\n    let _root = this._root = this.stateQueue.register(rootStateDef);\n    _root.navigable = null;\n  }\n\n  root() {\n    return this._root;\n  }\n\n  register(stateDefinition: StateDeclaration) {\n    return this.stateQueue.register(stateDefinition);\n  }\n\n  get(): StateDeclaration[];\n  get(stateOrName: StateOrName, base: StateOrName): StateDeclaration;\n  get(stateOrName?: StateOrName, base?: StateOrName): any {\n    if (arguments.length === 0) \n      return <StateDeclaration[]> Object.keys(this.states).map(name => this.states[name].self);\n    let found = this.matcher.find(stateOrName, base);\n    return found && found.self || null;\n  }\n\n  decorator(name: string, func: BuilderFunction) {\n    return this.builder.builder(name, func);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateRegistry.ts\n **/","/** @module state */ /** */\nimport {extend, defaults } from \"../common/common\";\nimport {isDefined, isObject, isString} from \"../common/predicates\";\nimport {Queue} from \"../common/queue\";\nimport {services} from \"../common/coreservices\";\n\nimport {PathFactory} from \"../path/pathFactory\";\nimport {Node} from \"../path/node\";\n\nimport {ViewService} from \"../view/view\";\n\nimport {StateParams} from \"../params/stateParams\";\n\nimport {UrlRouter} from \"../url/urlRouter\";\n\nimport {TransitionOptions} from \"../transition/interface\";\nimport {TransitionService, defaultTransOpts} from \"../transition/transitionService\";\nimport {Rejection} from \"../transition/rejectFactory\";\nimport {Transition} from \"../transition/transition\";\n\nimport {StateOrName, StateDeclaration, TransitionPromise} from \"./interface\";\nimport {StateRegistry} from \"./stateRegistry\";\nimport {State} from \"./stateObject\";\nimport {TargetState} from \"./targetState\";\n\nimport {RawParams} from \"../params/interface\";\nimport {ParamsOrArray} from \"../params/interface\";\nimport {TransitionManager} from \"./hooks/transitionManager\";\nimport {Param} from \"../params/param\";\nimport {Glob} from \"../common/glob\";\nimport {equalForKeys} from \"../common/common\";\nimport {HrefOptions} from \"./interface\";\nimport {StateProvider} from \"./state\";\nimport {bindFunctions} from \"../common/common\";\nimport {UIRouterGlobals} from \"../globals\";\n\nexport class StateService {\n  get transition()  { return this.globals.transition; }\n  get params()      { return this.globals.params; }\n  get current()     { return this.globals.current; }\n  get $current()    { return this.globals.$current; }\n\n  constructor(private $view: ViewService,\n              private $urlRouter: UrlRouter,\n              private $transitions: TransitionService,\n              private stateRegistry: StateRegistry,\n              private stateProvider: StateProvider,\n              private globals: UIRouterGlobals) {\n    let getters = ['current', '$current', 'params', 'transition'];\n    let boundFns = Object.keys(StateService.prototype).filter(key => getters.indexOf(key) === -1);\n    bindFunctions(StateService.prototype, this, this, boundFns);\n  }\n\n  /**\n   * Invokes the onInvalid callbacks, in natural order.  Each callback's return value is checked in sequence\n   * until one of them returns an instance of TargetState.   The results of the callbacks are wrapped\n   * in $q.when(), so the callbacks may return promises.\n   *\n   * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and\n   * the result returned.\n   */\n  private _handleInvalidTargetState(fromPath: Node[], $to$: TargetState) {\n    const latestThing = () => this.globals.transitionHistory.peekTail();\n    let latest = latestThing();\n    let $from$ = PathFactory.makeTargetState(fromPath);\n    let callbackQueue = new Queue<Function>([].concat(this.stateProvider.invalidCallbacks));\n    let {$q, $injector} = services;\n\n    const invokeCallback = (callback: Function) => $q.when($injector.invoke(callback, null, { $to$, $from$ }));\n\n    const checkForRedirect = (result) => {\n      if (!(result instanceof TargetState)) {\n        return;\n      }\n      let target = <TargetState> result;\n      // Recreate the TargetState, in case the state is now defined.\n      target = this.target(target.identifier(), target.params(), target.options());\n\n      if (!target.valid()) return Rejection.invalid(target.error()).toPromise();\n      if (latestThing() !== latest) return Rejection.superseded().toPromise();\n\n      return this.transitionTo(target.identifier(), target.params(), target.options());\n    };\n\n    function invokeNextCallback() {\n      let nextCallback = callbackQueue.dequeue();\n      if (nextCallback === undefined) return Rejection.invalid($to$.error()).toPromise();\n      return invokeCallback(nextCallback).then(checkForRedirect).then(result => result || invokeNextCallback());\n    }\n\n    return invokeNextCallback();\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#reload\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * A method that force reloads the current state, or a partial state hierarchy. All resolves are re-resolved,\n   * controllers reinstantiated, and events re-fired.\n   *\n   * @example\n   * <pre>\n   * let app angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.reload = function(){\n   *     $state.reload();\n   *   }\n   * });\n   * </pre>\n   *\n   * `reload()` is just an alias for:\n   * <pre>\n   * $state.transitionTo($state.current, $stateParams, {\n   *   reload: true, inherit: false, notify: true\n   * });\n   * </pre>\n   *\n   * @param {string=|object=} reloadState - A state name or a state object, which is the root of the resolves to be re-resolved.\n   * @example\n   * <pre>\n   * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n   * //and current state is 'contacts.detail.item'\n   * let app angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.reload = function(){\n   *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n   *     $state.reload('contact.detail');\n   *   }\n   * });\n   * </pre>\n   *\n   * @returns {promise} A promise representing the state of the new transition. See\n   * {@link ui.router.state.$state#methods_go $state.go}.\n   */\n  reload(reloadState: StateOrName): Promise<State> {\n    return this.transitionTo(this.current, this.params, {\n      reload: isDefined(reloadState) ? reloadState : true,\n      inherit: false,\n      notify: false\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#go\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * Convenience method for transitioning to a new state. `$state.go` calls\n   * `$state.transitionTo` internally but automatically sets options to\n   * `{ location: true, inherit: true, relative: $state.$current, notify: true }`.\n   * This allows you to easily use an absolute or relative to path and specify\n   * only the parameters you'd like to update (while letting unspecified parameters\n   * inherit from the currently active ancestor states).\n   *\n   * @example\n   * <pre>\n   * let app = angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.changeState = function () {\n   *     $state.go('contact.detail');\n   *   };\n   * });\n   * </pre>\n   * <img src='../ngdoc_assets/StateGoExamples.png'/>\n   *\n   * @param {string} to Absolute state name or relative state path. Some examples:\n   *\n   * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n   * - `$state.go('^')` - will go to a parent state\n   * - `$state.go('^.sibling')` - will go to a sibling state\n   * - `$state.go('.child.grandchild')` - will go to grandchild state\n   *\n   * @param {object=} params A map of the parameters that will be sent to the state,\n   * will populate $stateParams. Any parameters that are not specified will be inherited from currently\n   * defined parameters. This allows, for example, going to a sibling state that shares parameters\n   * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n   * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n   * will get you all current parameters, etc.\n   * @param {object=} options Options object. The options are:\n   *\n   * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n   *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n   * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n   * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'),\n   *    defines which state to be relative from.\n   * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n   * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params\n   *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n   *    use this when you want to force a reload when *everything* is the same, including search params.\n   *\n   * @returns {promise} A promise representing the state of the new transition.\n   *\n   * Possible success values:\n   *\n   * - $state.current\n   *\n   * <br/>Possible rejection values:\n   *\n   * - 'transition superseded' - when a newer transition has been started after this one\n   * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n   * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n   *   when a `$stateNotFound` `event.retry` promise errors.\n   * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n   * - *resolve error* - when an error has occurred with a `resolve`\n   *\n   */\n  go(to: StateOrName, params?: RawParams, options?: TransitionOptions): TransitionPromise {\n    let defautGoOpts = { relative: this.$current, inherit: true };\n    let transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n    return this.transitionTo(to, params, transOpts);\n  };\n\n  /** Factory method for creating a TargetState */\n  target(identifier: StateOrName, params?: ParamsOrArray, options: TransitionOptions = {}): TargetState {\n    // If we're reloading, find the state object to reload from\n    if (isObject(options.reload) && !(<any>options.reload).name)\n      throw new Error('Invalid reload state object');\n    options.reloadState = options.reload === true ? this.stateRegistry.root() : this.stateRegistry.matcher.find(<any> options.reload, options.relative);\n\n    if (options.reload && !options.reloadState)\n      throw new Error(`No such reload state '${(isString(options.reload) ? options.reload : (<any>options.reload).name)}'`);\n\n    let stateDefinition = this.stateRegistry.matcher.find(identifier, options.relative);\n    return new TargetState(identifier, stateDefinition, params, options);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#transitionTo\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n   * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n   *\n   * @example\n   * <pre>\n   * let app = angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.changeState = function () {\n   *     $state.transitionTo('contact.detail');\n   *   };\n   * });\n   * </pre>\n   *\n   * @param {string} to State name.\n   * @param {object=} toParams A map of the parameters that will be sent to the state,\n   * will populate $stateParams.\n   * @param {object=} options Options object. The options are:\n   *\n   * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n   *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n   * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n   * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'),\n   *    defines which state to be relative from.\n   * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n   * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params\n   *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n   *    use this when you want to force a reload when *everything* is the same, including search params.\n   *\n   * @returns {promise} A promise representing the state of the new transition. See\n   * {@link ui.router.state.$state#methods_go $state.go}.\n   */\n  transitionTo(to: StateOrName, toParams: RawParams = {}, options: TransitionOptions = {}): TransitionPromise {\n    let transHistory = this.globals.transitionHistory;\n    options = defaults(options, defaultTransOpts);\n    options = extend(options, { current: transHistory.peekTail.bind(transHistory)});\n\n    let ref: TargetState = this.target(to, toParams, options);\n    let latestSuccess: Transition = this.globals.successfulTransitions.peekTail();\n    const rootPath = () => PathFactory.bindTransNodesToPath([new Node(this.stateRegistry.root())]);\n    let currentPath: Node[] = latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n\n    if (!ref.exists())\n      return this._handleInvalidTargetState(currentPath, ref);\n    if (!ref.valid())\n      return services.$q.reject(ref.error());\n\n    let transition = this.$transitions.create(currentPath, ref);\n    let tMgr = new TransitionManager(transition, this.$transitions, this.$urlRouter, this.$view, <StateService> this, this.globals);\n    let transitionPromise = tMgr.runTransition();\n    // Return a promise for the transition, which also has the transition object on it.\n    return extend(transitionPromise, { transition });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#is\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n   * but only checks for the full state name. If params is supplied then it will be\n   * tested for strict equality against the current active params object, so all params\n   * must match with none missing and no extras.\n   *\n   * @example\n   * <pre>\n   * $state.$current.name = 'contacts.details.item';\n   *\n   * // absolute name\n   * $state.is('contact.details.item'); // returns true\n   * $state.is(contactDetailItemStateObject); // returns true\n   *\n   * // relative name (. and ^), typically from a template\n   * // E.g. from the 'contacts.details' template\n   * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n   * </pre>\n   *\n   * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n   * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n   * to test against the current active state.\n   * @param {object=} options An options object.  The options are:\n   *\n   * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n   * test relative to `options.relative` state (or name).\n   *\n   * @returns {boolean} Returns true if it is the state.\n   */\n  is(stateOrName: StateOrName, params?: RawParams, options?: TransitionOptions): boolean {\n    options = defaults(options, { relative: this.$current });\n    let state = this.stateRegistry.matcher.find(stateOrName, options.relative);\n    if (!isDefined(state)) return undefined;\n    if (this.$current !== state) return false;\n    return isDefined(params) && params !== null ? Param.equals(state.parameters(), this.params, params) : true;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#includes\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * A method to determine if the current active state is equal to or is the child of the\n   * state stateName. If any params are passed then they will be tested for a match as well.\n   * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n   *\n   * @example\n   * Partial and relative names\n   * <pre>\n   * $state.$current.name = 'contacts.details.item';\n   *\n   * // Using partial names\n   * $state.includes(\"contacts\"); // returns true\n   * $state.includes(\"contacts.details\"); // returns true\n   * $state.includes(\"contacts.details.item\"); // returns true\n   * $state.includes(\"contacts.list\"); // returns false\n   * $state.includes(\"about\"); // returns false\n   *\n   * // Using relative names (. and ^), typically from a template\n   * // E.g. from the 'contacts.details' template\n   * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n   * </pre>\n   *\n   * Basic globbing patterns\n   * <pre>\n   * $state.$current.name = 'contacts.details.item.url';\n   *\n   * $state.includes(\"*.details.*.*\"); // returns true\n   * $state.includes(\"*.details.**\"); // returns true\n   * $state.includes(\"**.item.**\"); // returns true\n   * $state.includes(\"*.details.item.url\"); // returns true\n   * $state.includes(\"*.details.*.url\"); // returns true\n   * $state.includes(\"*.details.*\"); // returns false\n   * $state.includes(\"item.**\"); // returns false\n   * </pre>\n   *\n   * @param {string} stateOrName A partial name, relative name, or glob pattern\n   * to be searched for within the current state name.\n   * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n   * that you'd like to test against the current active state.\n   * @param {object=} options An options object.  The options are:\n   *\n   * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n   * .includes will test relative to `options.relative` state (or name).\n   *\n   * @returns {boolean} Returns true if it does include the state\n   */\n  includes(stateOrName: StateOrName, params?: RawParams, options?: TransitionOptions): boolean {\n    options = defaults(options, { relative: this.$current });\n    let glob = isString(stateOrName) && Glob.fromString(<string> stateOrName);\n\n    if (glob) {\n      if (!glob.matches(this.$current.name)) return false;\n      stateOrName = this.$current.name;\n    }\n    let state = this.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n\n    if (!isDefined(state)) return undefined;\n    if (!isDefined(include[state.name])) return false;\n    // @TODO Replace with Param.equals() ?\n    return params ? equalForKeys(Param.values(state.parameters(), params), this.params, Object.keys(params)) : true;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#href\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * A url generation method that returns the compiled url for the given state populated with the given params.\n   *\n   * @example\n   * <pre>\n   * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n   * </pre>\n   *\n   * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n   * @param {object=} params An object of parameter values to fill the state's required parameters.\n   * @param {object=} options Options object. The options are:\n   *\n   * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n   *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n   *    ancestor with a valid url).\n   * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n   * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'),\n   *    defines which state to be relative from.\n   * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n   *\n   * @returns {string} compiled state url\n   */\n  href(stateOrName: StateOrName, params?: RawParams, options?: HrefOptions): string {\n    let defaultHrefOpts = {\n      lossy:    true,\n      inherit:  true,\n      absolute: false,\n      relative: this.$current\n    };\n    options = defaults(options, defaultHrefOpts);\n\n    let state = this.stateRegistry.matcher.find(stateOrName, options.relative);\n\n    if (!isDefined(state)) return null;\n    if (options.inherit) params = <any> this.params.$inherit(params || {}, this.$current, state);\n\n    let nav = (state && options.lossy) ? state.navigable : state;\n\n    if (!nav || nav.url === undefined || nav.url === null) {\n      return null;\n    }\n    return this.$urlRouter.href(nav.url, Param.values(state.parameters(), params), {\n      absolute: options.absolute\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#get\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * Returns the state configuration object for any specific state or all states.\n   *\n   * @param {string|Object=} stateOrName (absolute or relative) If provided, will only get the config for\n   * the requested state. If not provided, returns an array of ALL state configs.\n   * @param {string|object=} base When stateOrName is a relative state reference, the state will be retrieved relative to context.\n   * @returns {Object|Array} State configuration object or array of all objects.\n   */\n  get(): StateDeclaration[];\n  get(stateOrName: StateOrName): StateDeclaration;\n  get(stateOrName: StateOrName, base: StateOrName): StateDeclaration;\n  get(stateOrName?: StateOrName, base?: StateOrName): any {\n    if (arguments.length === 0) return this.stateRegistry.get();\n    return this.stateRegistry.get(stateOrName, base || this.$current);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateService.ts\n **/","/** @module path */ /** for typedoc */\n\nimport {extend, find, pick, omit, tail, mergeR, values, unnestR} from \"../common/common\";\nimport {prop, propEq, not, curry} from \"../common/hof\";\n\nimport {RawParams} from \"../params/interface\";\nimport {TreeChanges} from \"../transition/interface\";\n\nimport {State, TargetState} from \"../state/module\";\nimport {Node} from \"../path/node\";\nimport {ResolveContext, Resolvable, ResolveInjector} from \"../resolve/module\";\nimport {Transition} from \"../transition/module\";\nimport {ViewService} from \"../view/view\";\n\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nexport class PathFactory {\n\n  constructor() { }\n\n  /** Given a Node[], create an TargetState */\n  static makeTargetState(path: Node[]): TargetState {\n    let state = tail(path).state;\n    return new TargetState(state, state, path.map(prop(\"paramValues\")).reduce(mergeR, {}));\n  }\n\n  static buildPath(targetState: TargetState) {\n    let toParams = targetState.params();\n    return targetState.$state().path.map(state => new Node(state).applyRawParams(toParams));\n  }\n\n  /** Given a fromPath: Node[] and a TargetState, builds a toPath: Node[] */\n  static buildToPath(fromPath: Node[], targetState: TargetState): Node[] {\n    let toPath: Node[] = PathFactory.buildPath(targetState);\n    if (targetState.options().inherit) {\n      return PathFactory.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n    }\n    return toPath;\n  }\n  \n  static applyViewConfigs($view: ViewService, path: Node[]) {\n    return path.map(node => {\n      let viewDecls = values(node.state.views || {});\n      let viewConfigs = viewDecls.map(view => $view.createViewConfig(node, view)).reduce(unnestR, []);\n      return extend(node, {views: viewConfigs})\n    });\n  }\n\n  /**\n   * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n   *\n   * For a parameter in a node to be inherited from the from path:\n   * - The toPath's node must have a matching node in the fromPath (by state).\n   * - The parameter name must not be found in the toKeys parameter array.\n   *\n   * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n   * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n   * it is not inherited from the fromPath.\n   */\n  static inheritParams(fromPath: Node[], toPath: Node[], toKeys: string[] = []): Node[] {\n    function nodeParamVals(path: Node[], state: State): RawParams {\n      let node: Node = find(path, propEq('state', state));\n      return extend({}, node && node.paramValues);\n    }\n\n    /**\n     * Given an Node \"toNode\", return a new Node with param values inherited from the\n     * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n     */\n    let makeInheritedParamsNode = curry(function(_fromPath: Node[], _toKeys: string[], toNode: Node): Node {\n      // All param values for the node (may include default key/vals, when key was not found in toParams)\n      let toParamVals = extend({}, toNode && toNode.paramValues);\n      // limited to only those keys found in toParams\n      let incomingParamVals = pick(toParamVals, _toKeys);\n      toParamVals = omit(toParamVals, _toKeys);\n      let fromParamVals = nodeParamVals(_fromPath, toNode.state) || {};\n      // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n      let ownParamVals: RawParams = extend(toParamVals, fromParamVals, incomingParamVals);\n      return new Node(toNode.state).applyRawParams(ownParamVals);\n    });\n\n    // The param keys specified by the incoming toParams\n    return <Node[]> toPath.map(makeInheritedParamsNode(fromPath, toKeys));\n  }\n\n  /**\n   * Given a path, upgrades the path to a Node[].  Each node is assigned a ResolveContext\n   * and ParamValues object which is bound to the whole path, but closes over the subpath from root to the node.\n   * The views are also added to the node.\n   */\n  static bindTransNodesToPath(resolvePath: Node[]): Node[] {\n    let resolveContext = new ResolveContext(resolvePath);\n    // let paramValues = new ParamValues(resolvePath);\n\n    // Attach bound resolveContext and paramValues to each node\n    // Attach views to each node\n    resolvePath.forEach((node: Node) => {\n      node.resolveContext = resolveContext.isolateRootTo(node.state);\n      node.resolveInjector = new ResolveInjector(node.resolveContext, node.state);\n      node.resolves['$stateParams'] = new Resolvable(\"$stateParams\", () => node.paramValues, node.paramValues);\n    });\n\n    return resolvePath;\n  }\n\n  /**\n   * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n   */\n  static treeChanges(fromPath: Node[], toPath: Node[], reloadState: State): TreeChanges {\n    let keep = 0, max = Math.min(fromPath.length, toPath.length);\n    const staticParams = (state) => state.parameters({ inherit: false }).filter(not(prop('dynamic'))).map(prop('id'));\n    const nodesMatch = (node1: Node, node2: Node) => node1.equals(node2, staticParams(node1.state));\n\n    while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n      keep++;\n    }\n\n    /** Given a retained node, return a new node which uses the to node's param values */\n    function applyToParams(retainedNode: Node, idx: number): Node {\n      let cloned = Node.clone(retainedNode);\n      cloned.paramValues = toPath[idx].paramValues;\n      return cloned;\n    }\n\n    let from: Node[], retained: Node[], exiting: Node[], entering: Node[], to: Node[];\n    // intermediate vars\n    let retainedWithToParams: Node[], enteringResolvePath: Node[], toResolvePath: Node[];\n\n    from                  = fromPath;\n    retained              = from.slice(0, keep);\n    exiting               = from.slice(keep);\n\n    // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n    retainedWithToParams  = retained.map(applyToParams);\n    enteringResolvePath   = toPath.slice(keep);\n    // \"toResolvePath\" is \"retainedWithToParams\" concat \"enteringResolvePath\".\n    toResolvePath         = (retainedWithToParams).concat(enteringResolvePath);\n\n    // \"to: is \"toResolvePath\" with ParamValues/ResolveContext added to each node and bound to the path context\n    to                    = PathFactory.bindTransNodesToPath(toResolvePath);\n\n    // \"entering\" is the tail of \"to\"\n    entering              = to.slice(keep);\n\n    return { from, to, retained, exiting, entering };\n  }\n\n  static bindTransitionResolve(treeChanges: TreeChanges, transition: Transition) {\n    let rootNode = treeChanges.to[0];\n    rootNode.resolves['$transition$'] = new Resolvable('$transition$', () => transition, transition);\n  }\n\n  /**\n   * Find a subpath of a path that stops at the node for a given state\n   *\n   * Given an array of nodes, returns a subset of the array starting from the first node, up to the\n   * node whose state matches `stateName`\n   *\n   * @param path a path of [[Node]]s\n   * @param state the [[State]] to stop at\n   */\n  static subPath(path: Node[], state): Node[] {\n    let node = find(path, _node => _node.state === state);\n    let elementIdx = path.indexOf(node);\n    if (elementIdx === -1) throw new Error(\"The path does not contain the state: \" + state);\n    return path.slice(0, elementIdx + 1);\n  }\n\n  /** Gets the raw parameter values from a path */\n  static paramValues = (path: Node[]) => path.reduce((acc, node) => extend(acc, node.paramValues), {});\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./path/pathFactory.ts\n **/","/** @module path */ /** for typedoc */\nimport {extend, applyPairs, map, find, allTrueR, values, mapObj} from \"../common/common\";\nimport {prop, propEq} from \"../common/hof\";\nimport {State} from \"../state/module\";\nimport {RawParams} from \"../params/interface\";\nimport {Param} from \"../params/module\";\nimport {Resolvable, ResolveContext, ResolveInjector} from \"../resolve/module\";\nimport {ViewConfig} from \"../view/interface\";\nimport {Resolvables} from \"../resolve/interface\";\n\nexport class Node {\n  public state: State;\n  public paramSchema: Param[];\n  public paramValues: { [key: string]: any };\n  public resolves: Resolvables;\n  public views: ViewConfig[];\n  public resolveContext: ResolveContext;\n  public resolveInjector: ResolveInjector;\n\n  constructor(state: Node);\n  constructor(state: State);\n  constructor(state) {\n    if (state instanceof Node) {\n      let node: Node = state;\n      this.state = node.state;\n      this.paramSchema = node.paramSchema.slice();\n      this.paramValues = extend({}, node.paramValues);\n      this.resolves = extend({}, node.resolves);\n      this.views = node.views && node.views.slice();\n      this.resolveContext = node.resolveContext;\n      this.resolveInjector = node.resolveInjector;\n    } else {\n      this.state = state;\n      this.paramSchema = state.parameters({ inherit: false });\n      this.paramValues = {};\n      this.resolves = mapObj(state.resolve, (fn: Function, name: string) => new Resolvable(name, fn));\n    }\n  }\n\n  applyRawParams(params: RawParams): Node {\n    const getParamVal = (paramDef: Param) => [ paramDef.id, paramDef.value(params[paramDef.id]) ];\n    this.paramValues = this.paramSchema.reduce((memo, pDef) => applyPairs(memo, getParamVal(pDef)), {});\n    return this;\n  }\n\n  parameter(name: string): Param {\n    return find(this.paramSchema, propEq(\"id\", name));\n  }\n\n  equals(node: Node, keys = this.paramSchema.map(prop('id'))): boolean {\n    const paramValsEq = key => this.parameter(key).type.equals(this.paramValues[key], node.paramValues[key]);\n    return this.state === node.state && keys.map(paramValsEq).reduce(allTrueR, true);\n  }\n\n  static clone(node: Node) {\n    return new Node(node);\n  }\n\n  /**\n   * Returns a new path which is a subpath of the first path. The new path starts from root and contains any nodes\n   * that match the nodes in the second path. Nodes are compared using their state property.\n   * @param first {Node[]}\n   * @param second {Node[]}\n   * @returns {Node[]}\n   */\n  static matching(first: Node[], second: Node[]): Node[] {\n    let matchedCount = first.reduce((prev, node, i) =>\n      prev === i && i < second.length && node.state === second[i].state ? i + 1 : prev, 0);\n    return first.slice(0, matchedCount);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./path/node.ts\n **/","/** @module resolve */ /** for typedoc */\nexport * from \"./interface\";\nexport * from \"./resolvable\";\nexport * from \"./resolveContext\";\nexport * from \"./resolveInjector\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./resolve/module.ts\n **/","/** @module resolve */ /** for typedoc */\nimport {IInjectable, find, filter, map, tail, defaults, extend, pick, omit} from \"../common/common\";\nimport {prop, propEq} from \"../common/hof\";\nimport {isString, isObject} from \"../common/predicates\";\nimport {trace} from \"../common/trace\";\nimport {services} from \"../common/coreservices\";\nimport {Resolvables, ResolvePolicy, IOptions1} from \"./interface\";\n\nimport {Node} from \"../path/module\";\nimport {Resolvable} from \"./resolvable\";\nimport {State} from \"../state/module\";\nimport {mergeR} from \"../common/common\";\nimport {PathFactory} from \"../path/pathFactory\";\n\n// TODO: make this configurable\nlet defaultResolvePolicy = ResolvePolicy[ResolvePolicy.LAZY];\n\ninterface IPolicies { [key: string]: string; }\ninterface Promises { [key: string]: Promise<any>; }\n\nexport class ResolveContext {\n\n  private _nodeFor: Function;\n  private _pathTo: Function;\n\n  constructor(private _path: Node[]) {\n    extend(this, {\n      _nodeFor(state: State): Node {\n        return <Node> find(this._path, propEq('state', state));\n      },\n      _pathTo(state: State): Node[] {\n        return PathFactory.subPath(this._path, state);\n      }\n    });\n  }\n\n  /**\n   * Gets the available Resolvables for the last element of this path.\n   *\n   * @param state the State (within the ResolveContext's Path) for which to get resolvables\n   * @param options\n   *\n   * options.omitOwnLocals: array of property names\n   *   Omits those Resolvables which are found on the last element of the path.\n   *\n   *   This will hide a deepest-level resolvable (by name), potentially exposing a parent resolvable of\n   *   the same name further up the state tree.\n   *\n   *   This is used by Resolvable.resolve() in order to provide the Resolvable access to all the other\n   *   Resolvables at its own PathElement level, yet disallow that Resolvable access to its own injectable Resolvable.\n   *\n   *   This is also used to allow a state to override a parent state's resolve while also injecting\n   *   that parent state's resolve:\n   *\n   *   state({ name: 'G', resolve: { _G: function() { return \"G\"; } } });\n   *   state({ name: 'G.G2', resolve: { _G: function(_G) { return _G + \"G2\"; } } });\n   *   where injecting _G into a controller will yield \"GG2\"\n   */\n  getResolvables(state?: State, options?: any): Resolvables {\n    options = defaults(options, { omitOwnLocals: [] });\n\n    const path = (state ?  this._pathTo(state) : this._path);\n    const last = tail(path);\n\n    return path.reduce((memo, node) => {\n      let omitProps = (node === last) ? options.omitOwnLocals : [];\n      let filteredResolvables = omit(node.resolves, omitProps);\n      return extend(memo, filteredResolvables);\n    }, <Resolvables> {});\n  }\n\n  /** Inspects a function `fn` for its dependencies.  Returns an object containing any matching Resolvables */\n  getResolvablesForFn(fn: IInjectable): { [key: string]: Resolvable } {\n    let deps = services.$injector.annotate(<Function> fn, services.$injector.strictDi);\n    return <any> pick(this.getResolvables(), deps);\n  }\n\n  isolateRootTo(state: State): ResolveContext {\n    return new ResolveContext(this._pathTo(state));\n  }\n  \n  addResolvables(resolvables: Resolvables, state: State) {\n    extend(this._nodeFor(state).resolves, resolvables);\n  }\n  \n  /** Gets the resolvables declared on a particular state */\n  getOwnResolvables(state: State): Resolvables {\n    return extend({}, this._nodeFor(state).resolves);\n  }\n   \n  // Returns a promise for an array of resolved path Element promises\n  resolvePath(options: IOptions1 = {}): Promise<any> {\n    trace.traceResolvePath(this._path, options);\n    const promiseForNode = (node: Node) => this.resolvePathElement(node.state, options);\n    return services.$q.all(<any> map(this._path, promiseForNode)).then(all => all.reduce(mergeR, {}));\n  }\n\n  // returns a promise for all the resolvables on this PathElement\n  // options.resolvePolicy: only return promises for those Resolvables which are at \n  // the specified policy, or above.  i.e., options.resolvePolicy === 'lazy' will\n  // resolve both 'lazy' and 'eager' resolves.\n  resolvePathElement(state: State, options: IOptions1 = {}): Promise<any> {\n    // The caller can request the path be resolved for a given policy and \"below\" \n    let policy: string = options && options.resolvePolicy;\n    let policyOrdinal: number = ResolvePolicy[policy || defaultResolvePolicy];\n    // Get path Resolvables available to this element\n    let resolvables = this.getOwnResolvables(state);\n\n    const matchesRequestedPolicy = resolvable => getPolicy(state.resolvePolicy, resolvable) >= policyOrdinal;\n    let matchingResolves = filter(resolvables, matchesRequestedPolicy);\n\n    const getResolvePromise = (resolvable: Resolvable) => resolvable.get(this.isolateRootTo(state), options);\n    let resolvablePromises: Promises = <any> map(matchingResolves, getResolvePromise);\n\n    trace.traceResolvePathElement(this, matchingResolves, options);\n\n    return services.$q.all(resolvablePromises);\n  } \n  \n  \n  /**\n   * Injects a function given the Resolvables available in the path, from the first node\n   * up to the node for the given state.\n   *\n   * First it resolves all the resolvable depencies.  When they are done resolving, it invokes\n   * the function.\n   *\n   * @return a promise for the return value of the function.\n   *\n   * @param fn: the function to inject (i.e., onEnter, onExit, controller)\n   * @param locals: are the angular $injector-style locals to inject\n   * @param options: options (TODO: document)\n   */\n  invokeLater(fn: IInjectable, locals: any = {}, options: IOptions1 = {}): Promise<any> {\n    let resolvables = this.getResolvablesForFn(fn);\n    trace.tracePathElementInvoke(tail(this._path), fn, Object.keys(resolvables), extend({when: \"Later\"}, options));\n    const getPromise = (resolvable: Resolvable) => resolvable.get(this, options);\n    let promises: Promises = <any> map(resolvables, getPromise);\n    \n    return services.$q.all(promises).then(() => {\n      try {\n        return this.invokeNow(fn, locals, options);\n      } catch (error) {\n        return services.$q.reject(error);\n      }\n    });\n  }\n\n  /**\n   * Immediately injects a function with the dependent Resolvables available in the path, from\n   * the first node up to the node for the given state.\n   *\n   * If a Resolvable is not yet resolved, then null is injected in place of the resolvable.\n   *\n   * @return the return value of the function.\n   *\n   * @param fn: the function to inject (i.e., onEnter, onExit, controller)\n   * @param locals: are the angular $injector-style locals to inject\n   * @param options: options (TODO: document)\n   */\n  // Injects a function at this PathElement level with available Resolvables\n  // Does not wait until all Resolvables have been resolved; you must call PathElement.resolve() (or manually resolve each dep) first\n  invokeNow(fn: IInjectable, locals: any, options: any = {}) {\n    let resolvables = this.getResolvablesForFn(fn);\n    trace.tracePathElementInvoke(tail(this._path), fn, Object.keys(resolvables), extend({when: \"Now  \"}, options));\n    let resolvedLocals = map(resolvables, prop(\"data\"));\n    return services.$injector.invoke(<Function> fn, options.bind || null, extend({}, locals, resolvedLocals));\n  }\n}\n\n/**\n * Given a state's resolvePolicy attribute and a resolvable from that state, returns the policy ordinal for the Resolvable\n * Use the policy declared for the Resolve. If undefined, use the policy declared for the State.  If\n * undefined, use the system defaultResolvePolicy.\n * \n * @param stateResolvePolicyConf The raw resolvePolicy declaration on the state object; may be a String or Object\n * @param resolvable The resolvable to compute the policy for\n */\nfunction getPolicy(stateResolvePolicyConf, resolvable: Resolvable): number {\n  // Normalize the configuration on the state to either state-level (a string) or resolve-level (a Map of string:string)\n  let stateLevelPolicy: string = <string> (isString(stateResolvePolicyConf) ? stateResolvePolicyConf : null);\n  let resolveLevelPolicies: IPolicies = <any> (isObject(stateResolvePolicyConf) ? stateResolvePolicyConf : {});\n  let policyName = resolveLevelPolicies[resolvable.name] || stateLevelPolicy || defaultResolvePolicy;\n  return ResolvePolicy[policyName];  \n}\n\n\n/** WEBPACK FOOTER **\n ** ./resolve/resolveContext.ts\n **/","/** @module resolve */ /** for typedoc */\nimport {map} from \"../common/common\";\n\nimport {Resolvable} from \"./resolvable\";\nimport {ResolveContext} from \"./resolveContext\";\nimport {State} from \"../state/module\";\nimport {TypedMap} from \"../common/common\";\n\nexport class ResolveInjector {\n  constructor(private _resolveContext: ResolveContext, private _state: State) { }\n\n  /** Returns a promise to invoke an annotated function in the resolve context */\n  invokeLater(injectedFn, locals) {\n    return this._resolveContext.invokeLater(injectedFn, locals);\n  }\n\n  /** Invokes an annotated function in the resolve context */\n  invokeNow(injectedFn, locals) {\n    return this._resolveContext.invokeNow(null, injectedFn, locals);\n  }\n\n  /** Returns the a promise for locals (realized Resolvables) that a function wants */\n  getLocals(injectedFn) {\n    const resolve = (r: Resolvable) => r.get(this._resolveContext);\n    return map(this._resolveContext.getResolvablesForFn(injectedFn), resolve);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./resolve/resolveInjector.ts\n **/","/** @module transition */ /** for typedoc */\nimport {IHookRegistry, ITransitionService, TransitionOptions, IHookRegistration} from \"./interface\";\n\nimport {Transition} from \"./transition\";\nimport {HookRegistry} from \"./hookRegistry\";\nimport {TargetState} from \"../state/module\";\nimport {Node} from \"../path/module\";\nimport {IEventHook} from \"./interface\";\nimport {ViewService} from \"../view/view\";\n\n/**\n * The default transition options.\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexport let defaultTransOpts: TransitionOptions = {\n  location    : true,\n  relative    : null,\n  inherit     : false,\n  notify      : true,\n  reload      : false,\n  custom      : {},\n  current     : () => null\n};\n\n/**\n * This class provides services related to Transitions.\n *\n * Most importantly, it allows global Transition Hooks to be registered, and has a factory function\n * for creating new Transitions.\n */\nexport class TransitionService implements ITransitionService, IHookRegistry {\n  constructor(public $view: ViewService) {\n    HookRegistry.mixin(new HookRegistry(), this);\n  }\n\n  /**\n   * Registers a callback function as an `onBefore` Transition Hook\n   *\n   * See [[IHookRegistry.onBefore]]\n   */\n  onBefore  : IHookRegistration;\n  /**\n   * Registers a callback function as an `onStart` Transition Hook\n   *\n   * See [[IHookRegistry.onStart]]\n   */\n  onStart   : IHookRegistration;\n  /**\n   * Registers a callback function as an `onEnter` Transition Hook\n   *\n   * See [[IHookRegistry.onEnter]]\n   */\n  onEnter   : IHookRegistration;\n  /**\n   * Registers a callback function as an `onRetain` Transition Hook\n   *\n   * See [[IHookRegistry.onRetain]]\n   */\n  onRetain  : IHookRegistration;\n  /**\n   * Registers a callback function as an `onExit` Transition Hook\n   *\n   * See [[IHookRegistry.onExit]]\n   */\n  onExit    : IHookRegistration;\n  /**\n   * Registers a callback function as an `onFinish` Transition Hook\n   *\n   * See [[IHookRegistry.onFinish]]\n   */\n  onFinish  : IHookRegistration;\n  /**\n   * Registers a callback function as an `onSuccess` Transition Hook\n   *\n   * See [[IHookRegistry.onSuccess]]\n   */\n  onSuccess : IHookRegistration;\n  /**\n   * Registers a callback function as an `onError` Transition Hook\n   *\n   * See [[IHookRegistry.onError]]\n   */\n  onError   : IHookRegistration;\n\n  /** @hidden */\n  getHooks  : (hookName: string) => IEventHook[];\n\n  private _defaultErrorHandler: ((_error) => void) = function $defaultErrorHandler($error$) {\n    if ($error$ instanceof Error) {\n      console.error($error$);\n    }\n  };\n\n  defaultErrorHandler(handler: (error) => void) {\n    return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n  }\n\n  /**\n   * Creates a new [[Transition]] object\n   *\n   * This is a factory function for creating new Transition objects.\n   *\n   * @param fromPath\n   * @param targetState\n   * @returns {Transition}\n   */\n  create(fromPath: Node[], targetState: TargetState) {\n    return new Transition(fromPath, targetState, this);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./transition/transitionService.ts\n **/","/** @module path */ /** for typedoc */\nexport * from \"./node\";\nexport * from \"./pathFactory\";\n\n\n/** WEBPACK FOOTER **\n ** ./path/module.ts\n **/","/** @module url */ /** for typedoc */\nexport * from \"./urlMatcher\";\nexport * from \"./urlMatcherConfig\";\nexport * from \"./urlMatcherFactory\";\nexport * from \"./urlRouter\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/module.ts\n **/","/** @module url */ /** for typedoc */\nimport {\n  map, defaults, extend, inherit, identity,\n  unnest, tail, forEach, find, omit, pairs, allTrueR\n} from \"../common/common\";\nimport {prop, propEq } from \"../common/hof\";\nimport {isArray, isString} from \"../common/predicates\";\nimport {Param, paramTypes} from \"../params/module\";\nimport {isDefined} from \"../common/predicates\";\nimport {DefType} from \"../params/param\";\nimport {unnestR} from \"../common/common\";\nimport {arrayTuples} from \"../common/common\";\n\ninterface params {\n  $$validates: (params: string) => Array<string>;\n}\n\nfunction quoteRegExp(string: any, param?: any) {\n  let surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n  if (!param) return result;\n\n  switch (param.squash) {\n    case false:\n      surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')]; break;\n    case true:\n      result = result.replace(/\\/$/, '');\n      surroundPattern = ['(?:\\/(', ')|\\/)?'];\n      break;\n    default:\n      surroundPattern = [`(${param.squash}|`, ')?']; break;\n  }\n  return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n\nconst memoizeTo = (obj, prop, fn) => obj[prop] = obj[prop] || fn();\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:UrlMatcher\n *\n * @description\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n *\n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n * syntax, which optionally allows a regular expression for the parameter to be specified:\n *\n * * `':'` name - colon placeholder\n * * `'*'` name - catch-all placeholder\n * * `'{' name '}'` - curly placeholder\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters). For colon\n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\n * any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n * @param {string} pattern  The pattern to compile into a matcher.\n * @param {Object} config  A configuration object hash\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n *\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n *   non-null) will start with this prefix.\n *\n * @property {string} pattern  The pattern that was passed into the constructor\n *\n * @returns {Object}  New `UrlMatcher` object\n */\nexport class UrlMatcher {\n\n  static nameValidator: RegExp = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n\n  private _cache: { path: UrlMatcher[], pattern?: RegExp } = { path: [], pattern: null };\n  private _children: UrlMatcher[] = [];\n  private _params:   Param[]      = [];\n  private _segments: string[]     = [];\n  private _compiled: string[]     = [];\n\n  public prefix: string;\n\n  constructor(public pattern: string, public config: any) {\n    this.config = defaults(this.config, {\n      params: {},\n      strict: true,\n      caseInsensitive: false,\n      paramMap: identity\n    });\n\n    // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n    //   '*' name\n    //   ':' name\n    //   '{' name '}'\n    //   '{' name ':' regexp '}'\n    // The regular expression is somewhat complicated due to the need to allow curly braces\n    // inside the regular expression. The placeholder regexp breaks down as follows:\n    //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n    //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n    //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n    //    [^{}\\\\]+                       - anything other than curly braces or backslash\n    //    \\\\.                            - a backslash escape\n    //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n    let placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n        searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n        last = 0, m, patterns = [];\n\n    const checkParamErrors = (id) => {\n      if (!UrlMatcher.nameValidator.test(id)) throw new Error(`Invalid parameter name '${id}' in pattern '${pattern}'`);\n      if (find(this._params, propEq('id', id))) throw new Error(`Duplicate parameter name '${id}' in pattern '${pattern}'`);\n    };\n\n    // Split into static segments separated by path parameter placeholders.\n    // The number of segments is always 1 more than the number of parameters.\n    const matchDetails = (m, isSearch) => {\n      // IE[78] returns '' for unmatched groups instead of null\n      let id = m[2] || m[3], regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '.*' : null);\n\n      return {\n        id,\n        regexp,\n        cfg:     this.config.params[id],\n        segment: pattern.substring(last, m.index),\n        type:    !regexp ? null : paramTypes.type(regexp || \"string\") || inherit(paramTypes.type(\"string\"), {\n          pattern: new RegExp(regexp, this.config.caseInsensitive ? 'i' : undefined)\n        })\n      };\n    }\n\n    let p, segment;\n\n    while ((m = placeholder.exec(pattern))) {\n      p = matchDetails(m, false);\n      if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n      checkParamErrors(p.id);\n      this._params.push(Param.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false)));\n      this._segments.push(p.segment);\n      patterns.push([p.segment, tail(this._params)]);\n      last = placeholder.lastIndex;\n    }\n    segment = pattern.substring(last);\n\n    // Find any search parameter names and remove them from the last segment\n    let i = segment.indexOf('?');\n\n    if (i >= 0) {\n      let search = segment.substring(i);\n      segment = segment.substring(0, i);\n\n      if (search.length > 0) {\n        last = 0;\n\n        while ((m = searchPlaceholder.exec(search))) {\n          p = matchDetails(m, true);\n          checkParamErrors(p.id);\n          this._params.push(Param.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true)));\n          last = placeholder.lastIndex;\n          // check if ?&\n        }\n      }\n    }\n\n    this._segments.push(segment);\n\n    extend(this, {\n      _compiled: patterns.map(pattern => quoteRegExp.apply(null, pattern)).concat(quoteRegExp(segment)),\n      prefix: this._segments[0]\n    });\n\n    Object.freeze(this);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.type:UrlMatcher#append\n   * @methodOf ui.router.util.type:UrlMatcher\n   *\n   * @description\n   * @TODO\n   *\n   * @example\n   * @TODO\n   *\n   * @param {UrlMatcher} url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n   */\n  append(url: UrlMatcher): UrlMatcher {\n    this._children.push(url);\n    forEach(url._cache, (val, key) => url._cache[key] = isArray(val) ? [] : null);\n    url._cache.path = this._cache.path.concat(this);\n    return url;\n  }\n\n  isRoot(): boolean {\n    return this._cache.path.length === 0;\n  }\n\n  toString(): string {\n    return this.pattern;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.type:UrlMatcher#exec\n   * @methodOf ui.router.util.type:UrlMatcher\n   *\n   * @description\n   * Tests the specified path against this matcher, and returns an object containing the captured\n   * parameter values, or null if the path does not match. The returned object contains the values\n   * of any search parameters that are mentioned in the pattern, but their value may be null if\n   * they are not present in `search`. This means that search parameters are always treated\n   * as optional.\n   *\n   * @example\n   * <pre>\n   * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n   *   x: '1', q: 'hello'\n   * });\n   * // returns { id: 'bob', q: 'hello', r: null }\n   * </pre>\n   *\n   * @param {string} path  The URL path to match, e.g. `$location.path()`.\n   * @param {Object} search  URL search parameters, e.g. `$location.search()`.\n   * @param {string} hash  URL hash e.g. `$location.hash()`.\n   * @param {Object} options\n   * @returns {Object}  The captured parameter values.\n   */\n  exec(path: string, search: any = {}, hash?: string, options: any = {}) {\n    let match = memoizeTo(this._cache, 'pattern', () => {\n      return new RegExp([\n        '^',\n        unnest(this._cache.path.concat(this).map(prop('_compiled'))).join(''),\n        this.config.strict === false ? '\\/?' : '',\n        '$'\n      ].join(''), this.config.caseInsensitive ? 'i' : undefined);\n    }).exec(path);\n\n    if (!match) return null;\n\n    //options = defaults(options, { isolate: false });\n\n    let allParams:    Param[] = this.parameters(),\n        pathParams:   Param[] = allParams.filter(param => !param.isSearch()),\n        searchParams: Param[] = allParams.filter(param => param.isSearch()),\n        nPathSegments  = this._cache.path.concat(this).map(urlm => urlm._segments.length - 1).reduce((a, x) => a + x),\n        values = {};\n\n    if (nPathSegments !== match.length - 1)\n      throw new Error(`Unbalanced capture group in route '${this.pattern}'`);\n\n    function decodePathArray(string: string) {\n      const reverseString = (str: string) => str.split(\"\").reverse().join(\"\");\n      const unquoteDashes = (str: string) => str.replace(/\\\\-/g, \"-\");\n\n      let split = reverseString(string).split(/-(?!\\\\)/);\n      let allReversed = map(split, reverseString);\n      return map(allReversed, unquoteDashes).reverse();\n    }\n\n    for (let i = 0; i < nPathSegments; i++) {\n      let param: Param = pathParams[i];\n      let value: (any|any[]) = match[i + 1];\n\n      // if the param value matches a pre-replace pair, replace the value before decoding.\n      for (let j = 0; j < param.replace.length; j++) {\n        if (param.replace[j].from === value) value = param.replace[j].to;\n      }\n      if (value && param.array === true) value = decodePathArray(value);\n      if (isDefined(value)) value = param.type.decode(value);\n      values[param.id] = param.value(value);\n    }\n    forEach(searchParams, param => {\n      let value = search[param.id];\n      for (let j = 0; j < param.replace.length; j++) {\n        if (param.replace[j].from === value) value = param.replace[j].to;\n      }\n      if (isDefined(value)) value = param.type.decode(value);\n      values[param.id] = param.value(value);\n    });\n\n    if (hash) values[\"#\"] = hash;\n\n    return values;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.type:UrlMatcher#parameters\n   * @methodOf ui.router.util.type:UrlMatcher\n   *\n   * @description\n   * Returns the names of all path and search parameters of this pattern in order of appearance.\n   *\n   * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n   *    pattern has no parameters, an empty array is returned.\n   */\n  parameters(opts: any = {}): Param[] {\n    if (opts.inherit === false) return this._params;\n    return unnest(this._cache.path.concat(this).map(prop('_params')));\n  }\n\n  parameter(id: string, opts: any = {}): Param {\n    const parent = tail(this._cache.path);\n\n    return (\n      find(this._params, propEq('id', id)) ||\n      (opts.inherit !== false && parent && parent.parameter(id)) ||\n      null\n    );\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.type:UrlMatcher#validates\n   * @methodOf ui.router.util.type:UrlMatcher\n   *\n   * @description\n   * Checks an object hash of parameters to validate their correctness according to the parameter\n   * types of this `UrlMatcher`.\n   *\n   * @param {Object} params The object hash of parameters to validate.\n   * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n   */\n  validates(params): boolean {\n    const validParamVal = (param: Param, val) => !param || param.validates(val);\n    return pairs(params || {}).map(([key, val]) => validParamVal(this.parameter(key), val)).reduce(allTrueR, true);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.type:UrlMatcher#format\n   * @methodOf ui.router.util.type:UrlMatcher\n   *\n   * @description\n   * Creates a URL that matches this pattern by substituting the specified values\n   * for the path and search parameters. Null values for path parameters are\n   * treated as empty strings.\n   *\n   * @example\n   * <pre>\n   * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n   * // returns '/user/bob?q=yes'\n   * </pre>\n   *\n   * @param {Object} values  the values to substitute for the parameters in this pattern.\n   * @returns {string}  the formatted URL (path and optionally search part).\n   */\n  format(values = {}) {\n    if (!this.validates(values)) return null;\n\n    // Build the full path of UrlMatchers (including all parent UrlMatchers)\n    let urlMatchers = this._cache.path.slice().concat(this);\n\n    // Extract all the static segments and Params into an ordered array\n    let pathSegmentsAndParams: Array<string|Param> =\n        urlMatchers.map(UrlMatcher.pathSegmentsAndParams).reduce(unnestR, []);\n\n    // Extract the query params into a separate array\n    let queryParams: Array<Param> =\n        urlMatchers.map(UrlMatcher.queryParams).reduce(unnestR, []);\n\n    /**\n     * Given a Param,\n     * Applies the parameter value, then returns details about it\n     */\n    function getDetails(param: Param): ParamDetails {\n      // Normalize to typed value\n      let value = param.value(values[param.id]);\n      let isDefaultValue = param.isDefaultValue(value);\n      // Check if we're in squash mode for the parameter\n      let squash = isDefaultValue ? param.squash : false;\n      // Allow the Parameter's Type to encode the value\n      let encoded = param.type.encode(value);\n\n      return { param, value, isDefaultValue, squash, encoded };\n    }\n\n    // Build up the path-portion from the list of static segments and parameters\n    let pathString = pathSegmentsAndParams.reduce((acc: string, x: string|Param) => {\n      // The element is a static segment (a raw string); just append it\n      if (isString(x)) return acc + x;\n\n      // Otherwise, it's a Param.  Fetch details about the parameter value\n      let {squash, encoded, param} = getDetails(<Param> x);\n\n      // If squash is === true, try to remove a slash from the path\n      if (squash === true) return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n      // If squash is a string, use the string for the param value\n      if (isString(squash)) return acc + squash;\n      if (squash !== false) return acc; // ?\n      if (encoded == null) return acc;\n      // If this parameter value is an array, encode the value using encodeDashes\n      if (isArray(encoded)) return acc + map(<string[]> encoded, UrlMatcher.encodeDashes).join(\"-\");\n      // If the parameter type is \"raw\", then do not encodeURIComponent\n      if (param.type.raw) return acc + encoded;\n      // Encode the value\n      return acc + encodeURIComponent(<string> encoded);\n    }, \"\");\n\n    // Build the query string by applying parameter values (array or regular)\n    // then mapping to key=value, then flattening and joining using \"&\"\n    let queryString = queryParams.map((param: Param) => {\n      let {squash, encoded, isDefaultValue} = getDetails(param);\n      if (encoded == null || (isDefaultValue && squash !== false)) return;\n      if (!isArray(encoded)) encoded = [<string> encoded];\n      if (encoded.length === 0) return;\n      if (!param.type.raw) encoded = map(<string[]> encoded, encodeURIComponent);\n\n      return (<string[]> encoded).map(val => `${param.id}=${val}`);\n    }).filter(identity).reduce(unnestR, []).join(\"&\");\n\n    // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n    return pathString + (queryString ? `?${queryString}` : \"\") + (values[\"#\"] ? \"#\" + values[\"#\"] : \"\");\n  }\n\n  static encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, c => `%5C%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n  }\n\n  /** Given a matcher, return an array with the matcher's path segments and path params, in order */\n  static pathSegmentsAndParams(matcher: UrlMatcher) {\n    let staticSegments = matcher._segments;\n    let pathParams = matcher._params.filter(p => p.location === DefType.PATH);\n    return arrayTuples(staticSegments, pathParams.concat(undefined)).reduce(unnestR, []).filter(x => x !== \"\" && isDefined(x));\n  }\n\n  /** Given a matcher, return an array with the matcher's query params */\n  static queryParams(matcher: UrlMatcher): Param[] {\n    return matcher._params.filter(p => p.location === DefType.SEARCH);\n  }\n}\n\ninterface ParamDetails {\n  param: Param;\n  value: any;\n  isDefaultValue: boolean;\n  squash: (boolean|string);\n  encoded: (string|string[]);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/urlMatcher.ts\n **/","/** @module url */ /** for typedoc */\nimport {forEach, extend} from \"../common/common\";\nimport {isObject, isDefined, isFunction} from \"../common/predicates\";\n\nimport {UrlMatcher, matcherConfig} from \"./module\";\nimport {Param, paramTypes, Type} from \"../params/module\";\n\nfunction getDefaultConfig() {\n  return {\n    strict: matcherConfig.strictMode(),\n    caseInsensitive: matcherConfig.caseInsensitive()\n  };\n}\n\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nexport class UrlMatcherFactory {\n  constructor() {\n    extend(this, { UrlMatcher, Param });\n  }\n\n  /**\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns the current value of caseInsensitive\n   */\n  caseInsensitive(value: boolean) {\n    return matcherConfig.caseInsensitive(value);\n  }\n\n  /**\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns the current value of strictMode\n   */\n  strictMode(value: boolean) {\n    return matcherConfig.strictMode(value);\n  }\n\n  /**\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param value A string that defines the default parameter URL squashing behavior.\n   *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   * @returns the current value of defaultSquashPolicy\n   */\n  defaultSquashPolicy(value: string) {\n    return matcherConfig.defaultSquashPolicy(value);\n  }\n\n  /**\n   * Creates a [[UrlMatcher]] for the specified pattern.\n   *\n   * @param pattern  The URL pattern.\n   * @param config  The config object hash.\n   * @returns The UrlMatcher.\n   */\n  compile(pattern: string, config?: { [key: string]: any }) {\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n  }\n\n  /**\n   * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n   *\n   * @param object  The object to perform the type check against.\n   * @returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  isMatcher(object: any) {\n    // TODO: typeof?\n    if (!isObject(object)) return false;\n    let result = true;\n\n    forEach(UrlMatcher.prototype, (val, name) => {\n      if (isFunction(val)) result = result && (isDefined(object[name]) && isFunction(object[name]));\n    });\n    return result;\n  };\n\n  /**\n   * Registers a custom [[Type]] object that can be used to generate URLs with typed parameters.\n   *\n   * @param name  The type name.\n   * @param definition The type definition. See [[Type]] for information on the values accepted.\n   * @param definitionFn A function that is injected before the app\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\n   *        See [[Type]] for information on the values accepted.\n   *\n   * @returns - if a type was registered: the [[UrlMatcherFactory]]\n   *   - if only the `name` parameter was specified: the currently registered [[Type]] object, or undefined\n   *\n   * ---\n   *\n   * This is a simple example of a custom type that encodes and decodes items from an\n   * array, using the array index as the URL-encoded value:\n   *\n   * @example\n   * ```\n   *\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\n   *\n   * $urlMatcherFactoryProvider.type('listItem', {\n   *   encode: function(item) {\n   *     // Represent the list item in the URL using its corresponding index\n   *     return list.indexOf(item);\n   *   },\n   *   decode: function(item) {\n   *     // Look up the list item by index\n   *     return list[parseInt(item, 10)];\n   *   },\n   *   is: function(item) {\n   *     // Ensure the item is valid by checking to see that it appears\n   *     // in the list\n   *     return list.indexOf(item) > -1;\n   *   }\n   * });\n   *\n   * $stateProvider.state('list', {\n   *   url: \"/list/{item:listItem}\",\n   *   controller: function($scope, $stateParams) {\n   *     console.log($stateParams.item);\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n   * $state.go('list', { item: \"Ringo\" });\n   * ```\n   */\n  type(name: string, definition?: (Function|Type), definitionFn?: Function) {\n    let type = paramTypes.type(name, definition, definitionFn);\n    return !isDefined(definition) ? type : this;\n  };\n\n  /** @hidden */\n  $get() {\n    paramTypes.enqueue = false;\n    paramTypes._flushTypeQueue();\n    return this;\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/urlMatcherFactory.ts\n **/","/** @module url */ /** for typedoc */\nimport {extend, bindFunctions} from \"../common/common\";\nimport {isFunction, isString, isDefined, isArray} from \"../common/predicates\";\nimport {UrlMatcher} from \"./module\";\nimport {services} from \"../common/coreservices\";\nimport {UrlMatcherFactory} from \"./urlMatcherFactory\";\nimport {StateParams} from \"../params/stateParams\";\n\nlet $location = services.location;\n\n// Returns a string that is a prefix of all strings matching the RegExp\nfunction regExpPrefix(re) {\n  let prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n  return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n}\n\n// Interpolates matched values into a String.replace()-style pattern\nfunction interpolate(pattern, match) {\n  return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n    return match[what === '$' ? 0 : Number(what)];\n  });\n}\n\nfunction handleIfMatch($injector, $stateParams, handler, match) {\n  if (!match) return false;\n  let result = $injector.invoke(handler, handler, { $match: match, $stateParams: $stateParams });\n  return isDefined(result) ? result : true;\n}\n\nfunction appendBasePath(url, isHtml5, absolute) {\n  let baseHref = services.locationConfig.baseHref();\n  if (baseHref === '/') return url;\n  if (isHtml5) return baseHref.slice(0, -1) + url;\n  if (absolute) return baseHref.slice(1) + url;\n  return url;\n}\n\n// TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\nfunction update(rules: Function[], otherwiseFn: Function, evt?: any) {\n  if (evt && evt.defaultPrevented) return;\n\n  function check(rule) {\n    let handled = rule(services.$injector, $location);\n\n    if (!handled) return false;\n    if (isString(handled)) {\n      $location.replace();\n      $location.url(handled);\n    }\n    return true;\n  }\n  let n = rules.length, i;\n\n  for (i = 0; i < n; i++) {\n    if (check(rules[i])) return;\n  }\n  // always check otherwise last to allow dynamic updates to the set of rules\n  if (otherwiseFn) check(otherwiseFn);\n}\n\n\n/**\n * @ngdoc object\n * @name ui.router.router.$urlRouterProvider\n *\n * @requires ui.router.util.$urlMatcherFactoryProvider\n * @requires $locationProvider\n *\n * @description\n * `$urlRouterProvider` has the responsibility of watching `$location`.\n * When `$location` changes it runs through a list of rules one by one until a\n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify\n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n *\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\n * in your module config.\n */\nexport class UrlRouterProvider {\n  /** @hidden */\n  rules = [];\n  /** @hidden */\n  otherwiseFn: Function = null;\n  /** @hidden */\n  interceptDeferred = false;\n\n  constructor(private $urlMatcherFactory: UrlMatcherFactory, private $stateParams: StateParams) {\n\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#rule\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\n   * specific URLs.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {function} rule Handler function that takes `$injector` and `$location`\n   * services as arguments. You can use them to return a valid path as a string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  rule(rule) {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    this.rules.push(rule);\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouterProvider#otherwise\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines a path that is used when an invalid route is requested.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|function} rule The url path you want to redirect to or a function\n   * rule that returns the url path. The function version is passed two params:\n   * `$injector` and `$location` services, and must return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  otherwise(rule) {\n    if (!isFunction(rule) && !isString(rule)) throw new Error(\"'rule' must be a string or function\");\n    this.otherwiseFn = isString(rule) ? () => rule : rule;\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#when\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Registers a handler for a given url matching. \n   * \n   * If the handler is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\n   * matches. You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} what The incoming path that you want to redirect.\n   * @param {string|function} handler The path you want to redirect your user to.\n   */\n  when(what, handler) {\n    let {$urlMatcherFactory, $stateParams} = this;\n    let redirect, handlerIsString = isString(handler);\n\n    // @todo Queue this\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    let strategies = {\n      matcher: function (_what, _handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(_handler);\n          _handler = ['$match', redirect.format.bind(redirect)];\n        }\n        return extend(function () {\n          return handleIfMatch(services.$injector, $stateParams, _handler, _what.exec($location.path(), $location.search(), $location.hash()));\n        }, {\n          prefix: isString(_what.prefix) ? _what.prefix : ''\n        });\n      },\n      regex: function (_what, _handler) {\n        if (_what.global || _what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = _handler;\n          _handler = ['$match', ($match) => interpolate(redirect, $match)];\n        }\n        return extend(function () {\n          return handleIfMatch(services.$injector, $stateParams, _handler, _what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(_what)\n        });\n      }\n    };\n\n    let check = {\n      matcher: $urlMatcherFactory.isMatcher(what),\n      regex: what instanceof RegExp\n    };\n\n    for (var n in check) {\n      if (check[n]) return this.rule(strategies[n](what, handler));\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Disables (or enables) deferring location change interception.\n   *\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n   * defer a transition but maintain the current URL), call this method at configuration time.\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n   * `$locationChangeSuccess` event handler.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   // this allows you to configure custom behavior in between\n   *   // location changes and route synchronization:\n   *   $urlRouterProvider.deferIntercept();\n   *\n   * }).run(function ($rootScope, $urlRouter, UserService) {\n   *\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n   *     // UserService is an example service for managing user state\n   *     if (UserService.isLoggedIn()) return;\n   *\n   *     // Prevent $urlRouter's default handler from firing\n   *     e.preventDefault();\n   *\n   *     UserService.handleLogin().then(function() {\n   *       // Once the user has logged in, sync the current URL\n   *       // to the router:\n   *       $urlRouter.sync();\n   *     });\n   *   });\n   *\n   *   // Configures $urlRouter's listener *after* your custom listener\n   *   $urlRouter.listen();\n   * });\n   * </pre>\n   *\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n   *        no parameter is equivalent to `true`.\n   */\n  deferIntercept(defer) {\n    if (defer === undefined) defer = true;\n    this.interceptDeferred = defer;\n  };\n}\n\nexport class UrlRouter {\n  private location: string;\n  private listener: Function;\n\n  constructor(private urlRouterProvider: UrlRouterProvider) {\n    bindFunctions(UrlRouter.prototype, this, this);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouter#sync\n   * @methodOf ui.router.router.$urlRouter\n   *\n   * @description\n   * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n   * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n   * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n   * with the transition by calling `$urlRouter.sync()`.\n   *\n   * @example\n   * <pre>\n   * angular.module('app', ['ui.router'])\n   *   .run(function($rootScope, $urlRouter) {\n   *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n   *       // Halt state change from even starting\n   *       evt.preventDefault();\n   *       // Perform custom logic\n   *       var meetsRequirement = ...\n   *       // Continue with the update and state transition if logic allows\n   *       if (meetsRequirement) $urlRouter.sync();\n   *     });\n   * });\n   * </pre>\n   */\n  sync() {\n    update(this.urlRouterProvider.rules, this.urlRouterProvider.otherwiseFn);\n  }\n\n  listen() {\n    return this.listener = this.listener || $location.onChange(evt => update(this.urlRouterProvider.rules, this.urlRouterProvider.otherwiseFn, evt));\n  }\n\n  update(read?) {\n    if (read) {\n      this.location = $location.url();\n      return;\n    }\n    if ($location.url() === this.location) return;\n\n    $location.url(this.location);\n    $location.replace();\n  }\n\n  push(urlMatcher, params, options) {\n    $location.url(urlMatcher.format(params || {}));\n    if (options && options.replace) $location.replace();\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouter#href\n   * @methodOf ui.router.router.$urlRouter\n   *\n   * @description\n   * A URL generation method that returns the compiled URL for a given\n   * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n   *\n   * @example\n   * <pre>\n   * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n   *   person: \"bob\"\n   * });\n   * // $bob == \"/about/bob\";\n   * </pre>\n   *\n   * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n   * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n   * @param {object=} options Options object. The options are:\n   *\n   * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n   *\n   * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n   */\n  href(urlMatcher: UrlMatcher, params: any, options: any): string {\n    if (!urlMatcher.validates(params)) return null;\n\n    let url = urlMatcher.format(params);\n    options = options || {};\n\n    let cfg = services.locationConfig;\n    let isHtml5 = cfg.html5Mode();\n    if (!isHtml5 && url !== null) {\n      url = \"#\" + cfg.hashPrefix() + url;\n    }\n    url = appendBasePath(url, isHtml5, options.absolute);\n\n    if (!options.absolute || !url) {\n      return url;\n    }\n\n    let slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n    port = <any> (port === 80 || port === 443 ? '' : ':' + port);\n\n    return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/urlRouter.ts\n **/","/** @module view */ /** for typedoc */\nexport * from \"./interface\";\nexport * from \"./view\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./view/module.ts\n **/","/** @module view */ /** for typedoc */\nimport {equals, applyPairs, removeFrom, TypedMap} from \"../common/common\";\nimport {curry, prop} from \"../common/hof\";\nimport {isString, isArray} from \"../common/predicates\";\nimport {trace} from \"../common/module\";\nimport {Node} from \"../path/node\";\n\nimport {ActiveUIView, ViewContext, ViewConfig} from \"./interface\";\nimport {_ViewDeclaration} from \"../state/interface\";\n\nconst match = (obj1, ...keys) =>\n    (obj2) => keys.reduce((memo, key) => memo && obj1[key] === obj2[key], true);\n\nexport type ViewConfigFactory = (node: Node, decl: _ViewDeclaration) => ViewConfig|ViewConfig[];\n\n/**\n * The View service\n */\nexport class ViewService {\n  private uiViews: ActiveUIView[] = [];\n  private viewConfigs: ViewConfig[] = [];\n  private _rootContext;\n  private _viewConfigFactories: { [key: string]: ViewConfigFactory } = {};\n\n  constructor() { }\n\n  rootContext(context) {\n    return this._rootContext = context || this._rootContext;\n  };\n\n  viewConfigFactory(viewType: string, factory: ViewConfigFactory) {\n    this._viewConfigFactories[viewType] = factory;\n  }\n\n  createViewConfig(node: Node, decl: _ViewDeclaration): ViewConfig[] {\n    let cfgFactory = this._viewConfigFactories[decl.$type];\n    if (!cfgFactory) throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n    let cfgs = cfgFactory(node, decl);\n    return isArray(cfgs) ? cfgs : [cfgs];\n  }\n  \n  /**\n   * De-registers a ViewConfig.\n   *\n   * @param viewConfig The ViewConfig view to deregister.\n   */\n  deactivateViewConfig(viewConfig: ViewConfig) {\n    trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n    removeFrom(this.viewConfigs, viewConfig);\n  };\n\n  activateViewConfig(viewConfig: ViewConfig) {\n    trace.traceViewServiceEvent(\"-> Registering\", <any> viewConfig);\n    this.viewConfigs.push(viewConfig);\n  };\n\n  sync = () => {\n    let uiViewsByFqn: TypedMap<ActiveUIView> =\n        this.uiViews.map(uiv => [uiv.fqn, uiv]).reduce(applyPairs, <any> {});\n\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <div ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <div ui-view=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <div ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <div ui-view=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </div>\n     *     </div>\n     *   </div>\n     * </div>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     */\n    const matches = (uiView: ActiveUIView) => (viewConfig: ViewConfig) => {\n      // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n      if (uiView.$type !== viewConfig.viewDecl.$type) return false;\n\n      // Split names apart from both viewConfig and uiView into segments\n      let vc = viewConfig.viewDecl;\n      let vcSegments = vc.$uiViewName.split(\".\");\n      let uivSegments = uiView.fqn.split(\".\");\n\n      // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n      // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n      if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n        return false;\n\n      // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n      // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n      let negOffset = (1 - vcSegments.length) || undefined;\n      let fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n      let uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n      return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    };\n\n    // Return the number of dots in the fully qualified name\n    function uiViewDepth(uiView: ActiveUIView) {\n      return uiView.fqn.split(\".\").length;\n    }\n\n    // Return the ViewConfig's context's depth in the context tree.\n    function viewConfigDepth(config: ViewConfig) {\n      let context: ViewContext = config.viewDecl.$context, count = 0;\n      while (++count && context.parent) context = context.parent;\n      return count;\n    }\n\n    // Given a depth function, returns a compare function which can return either ascending or descending order\n    const depthCompare = curry((depthFn, posNeg, left, right) => posNeg * (depthFn(left) - depthFn(right)));\n\n    const matchingConfigPair = uiView => {\n      let matchingConfigs = this.viewConfigs.filter(matches(uiView));\n      if (matchingConfigs.length > 1)\n        matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n      return [uiView, matchingConfigs[0]];\n    };\n\n    const configureUiView = ([uiView, viewConfig]) => {\n      // If a parent ui-view is reconfigured, it could destroy child ui-views.\n      // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n      if (this.uiViews.indexOf(uiView) !== -1)\n        uiView.configUpdated(viewConfig);\n    };\n\n    this.uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair).forEach(configureUiView);\n  };\n\n  /**\n   * Allows a `ui-view` element to register its canonical name with a callback that allows it to\n   * be updated with a template, controller, and local variables.\n   *\n   * @param {String} name The fully-qualified name of the `ui-view` object being registered.\n   * @param {Function} configUpdatedCallback A callback that receives updates to the content & configuration\n   *                   of the view.\n   * @return {Function} Returns a de-registration function used when the view is destroyed.\n   */\n  registerUiView(uiView: ActiveUIView) {\n    trace.traceViewServiceUiViewEvent(\"-> Registering\", uiView);\n    let uiViews = this.uiViews;\n    const fqnMatches = uiv => uiv.fqn === uiView.fqn;\n    if (uiViews.filter(fqnMatches).length)\n      trace.traceViewServiceUiViewEvent(\"!!!! duplicate uiView named:\", uiView);\n\n    uiViews.push(uiView);\n    this.sync();\n\n    return () => {\n      let idx = uiViews.indexOf(uiView);\n      if (idx <= 0) {\n        trace.traceViewServiceUiViewEvent(\"Tried removing non-registered uiView\", uiView);\n        return;\n      }\n      trace.traceViewServiceUiViewEvent(\"<- Deregistering\", uiView);\n      removeFrom(uiViews)(uiView);\n    };\n  };\n\n  /**\n   * Returns the list of views currently available on the page, by fully-qualified name.\n   *\n   * @return {Array} Returns an array of fully-qualified view names.\n   */\n  available() {\n    return this.uiViews.map(prop(\"fqn\"));\n  }\n\n  /**\n   * Returns the list of views on the page containing loaded content.\n   *\n   * @return {Array} Returns an array of fully-qualified view names.\n   */\n  active() {\n    return this.uiViews.filter(prop(\"$config\")).map(prop(\"name\"));\n  }\n\n  /**\n   * Normalizes a view's name from a state.views configuration block.\n   *\n   * @param context the context object (state declaration) that the view belongs to\n   * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n   *\n   * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n   */\n  static normalizeUiViewTarget(context: ViewContext, rawViewName = \"\") {\n    // TODO: Validate incoming view name with a regexp to allow:\n    // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n    // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n    let viewAtContext: string[] = rawViewName.split(\"@\");\n    let uiViewName = viewAtContext[0] || \"$default\";  // default to unnamed view\n    let uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : \"^\";    // default to parent context\n\n    // Handle relative view-name sugar syntax.\n    // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n    let relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n    if (relativeViewNameSugar) {\n      // Clobbers existing contextAnchor (rawViewName validation will fix this)\n      uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n      uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n    }\n\n    if (uiViewName.charAt(0) === '!') {\n      uiViewName = uiViewName.substr(1);\n      uiViewContextAnchor = \"\"; // target absolutely from root\n    }\n\n    // handle parent relative targeting \"^.^.^\"\n    let relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n    if (relativeMatch.exec(uiViewContextAnchor)) {\n      let anchor = uiViewContextAnchor.split(\".\").reduce(((anchor, x) => anchor.parent), context);\n      uiViewContextAnchor = anchor.name;\n    }\n\n    return {uiViewName, uiViewContextAnchor};\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./view/view.ts\n **/","/** @module core */ /** */\nimport {StateParams} from \"./params/stateParams\";\nimport {StateDeclaration} from \"./state/interface\";\nimport {State} from \"./state/stateObject\";\nimport {Transition} from \"./transition/transition\";\nimport {Queue} from \"./common/queue\";\nimport {TransitionService} from \"./transition/transitionService\";\nimport {copy} from \"./common/common\";\n\n/**\n * Global mutable state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, last successful transition, last attempted transition, etc.\n */\nexport class UIRouterGlobals {\n  /**\n   * Current parameter values\n   *\n   * The parameter values from the latest successful transition\n   */\n  params: StateParams = new StateParams();\n  /**\n   * Current state\n   *\n   * The to-state from the latest successful transition\n   */\n  current: StateDeclaration;\n  /**\n   * Current state\n   *\n   * The to-state from the latest successful transition\n   */\n  $current: State;\n  /**\n   * The current transition (in progress)\n   */\n  transition: Transition;\n  /**\n   * The transition history\n   *\n   * This queue's size is limited to a maximum number (default: 1)\n   */\n  transitionHistory = new Queue<Transition>([], 1);\n  /**\n   * The history of successful transitions\n   *\n   * This queue's size is limited to a maximum number (default: 1)\n   */\n  successfulTransitions = new Queue<Transition>([], 1);\n\n  constructor(transitionService: TransitionService) {\n    const beforeNewTransition = ($transition$) => {\n\n      this.transition = $transition$;\n      this.transitionHistory.enqueue($transition$);\n\n      const updateGlobalState = () => {\n        this.successfulTransitions.enqueue($transition$);\n        this.$current = $transition$.$to();\n        this.current = this.$current.self;\n        copy($transition$.params(), this.params);\n      };\n\n      $transition$.onSuccess({}, updateGlobalState, {priority: 10000});\n\n      const clearCurrentTransition = () => { if (this.transition === $transition$) this.transition = null; };\n\n      $transition$.promise.then(clearCurrentTransition, clearCurrentTransition);\n\n    };\n\n    transitionService.onBefore({}, ['$transition$', beforeNewTransition]);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./globals.ts\n **/","/** @module core */ /** */\nimport {UrlMatcherFactory} from \"./url/urlMatcherFactory\";\nimport {UrlRouterProvider} from \"./url/urlRouter\";\nimport {StateProvider} from \"./state/state\";\nimport {UrlRouter} from \"./url/urlRouter\";\nimport {TransitionService} from \"./transition/transitionService\";\nimport {ViewService} from \"./view/view\";\nimport {StateRegistry} from \"./state/stateRegistry\";\nimport {StateService} from \"./state/stateService\";\nimport {UIRouterGlobals} from \"./globals\";\n\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * This class instantiates and wires the global UI-Router services.\n *\n * After instantiating a new instance of the Router class, configure it for your app.  For instance, register\n * your app states with the [[stateRegistry]] (and set url options using ...).  Then, tell UI-Router to monitor\n * the URL by calling `urlRouter.listen()` ([[URLRouter.listen]])\n */\nexport class UIRouter {\n  viewService = new ViewService();\n\n  transitionService: TransitionService = new TransitionService(this.viewService);\n\n  globals: UIRouterGlobals = new UIRouterGlobals(this.transitionService);\n\n  urlMatcherFactory: UrlMatcherFactory = new UrlMatcherFactory();\n\n  urlRouterProvider: UrlRouterProvider = new UrlRouterProvider(this.urlMatcherFactory, this.globals.params);\n\n  urlRouter: UrlRouter = new UrlRouter(this.urlRouterProvider);\n\n  stateRegistry: StateRegistry = new StateRegistry(this.urlMatcherFactory, this.urlRouterProvider);\n\n  /** @hidden TODO: move this to ng1.ts */\n  stateProvider = new StateProvider(this.stateRegistry);\n\n  stateService = new StateService(this.viewService, this.urlRouter, this.transitionService, this.stateRegistry, this.stateProvider, this.globals);\n\n  constructor() {\n    this.viewService.rootContext(this.stateRegistry.root());\n    this.globals.$current = this.stateRegistry.root();\n    this.globals.current = this.globals.$current.self;\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./router.ts\n **/","/**\n * Naive, pure JS implementation of core ui-router services\n *\n * @module justjs\n */ /** */\nexport * from \"./core\";\nimport {services} from \"./common/coreservices\";\nimport {isDefined, isFunction, isArray, isObject, isInjectable} from \"./common/predicates\";\nimport {extend, assertPredicate, forEach, applyPairs} from \"./common/common\";\n\n/** $q-like promise api */\nservices.$q = (executor: (resolve, reject) => void) => new Promise(executor);\nservices.$q.when = (val) => Promise.resolve(val);\nservices.$q.reject = (val) => Promise.reject(val);\nservices.$q.defer = function() {\n  let deferred: any = {};\n  deferred.promise = new Promise((resolve, reject) => {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n\n  return deferred;\n};\n\nservices.$q.all = function (promises: { [key: string]: Promise<any> } | Promise<any>[]) {\n  if (isArray(promises)) {\n    return Promise.all(promises);\n  }\n\n  if (isObject(promises)) {\n    // console.log(\"$q.all({}) Input:\", promises);\n\n    // Convert promises map to promises array.\n    // When each promise resolves, map it to a tuple { key: key, val: val }\n    let chain = Object.keys(promises)\n        .map(key => promises[key].then(val => ({key, val})));\n\n    // Then wait for all promises to resolve, and convert them back to an object\n    return services.$q.all(chain).then(values => {\n      let value = values.reduce((acc, tuple) => { acc[tuple.key] = tuple.val; return acc; }, {});\n\n      // console.log(\"$q.all({}) Output:\", value);\n      return value;\n    });\n  }\n};\n\n\n\n\n\n// angular1-like injector api\n\n// globally available injectables\nlet globals = { };\nservices.$injector = { };\n\nservices.$injector.get = name => globals[name];\nservices.$injector.has = (name) => services.$injector.get(name) != null;\nservices.$injector.invoke = function(fn, context?, locals?) {\n  let all = extend({}, globals, locals || {});\n  let params = services.$injector.annotate(fn);\n  let ensureExist = assertPredicate(key => all.hasOwnProperty(key), key => `DI can't find injectable: '${key}'`);\n  let args = params.filter(ensureExist).map(x => all[x]);\n  if (isFunction(fn)) return fn.apply(context, args);\n  return fn.slice(-1)[0].apply(context, args);\n};\n\nlet STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nlet ARGUMENT_NAMES = /([^\\s,]+)/g;\n// http://stackoverflow.com/questions/1007981\nservices.$injector.annotate = function(fn) {\n  if (!isInjectable(fn)) throw new Error(`Not an injectable function: ${fn}`);\n  if (fn && fn.$inject) return fn.$inject;\n  if (isArray(fn)) return fn.slice(0, -1);\n  let fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n  let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n  return result || [];\n};\n\nlet loc = <any> services.location;\n\nloc.hash = () => \"\";\nloc.path = () => location.hash.replace(/^#/, \"\");\nloc.search = () => location.search;\nloc.url = (url) => { if (url) location.hash = url; return loc.path(); };\nloc.replace = () => { console.log(new Error(\"not impl\")); };\nloc.onChange = (cb) => {\n  window.addEventListener(\"hashchange\", cb, false);\n};\n\nlet locCfg = <any> services.locationConfig;\n\nlocCfg.port = () => location.port;\nlocCfg.protocol = () => location.protocol;\nlocCfg.host = () => location.host;\nlocCfg.baseHref = () => \"\";\nlocCfg.html5Mode = () => false;\nlocCfg.hashPrefix = () => \"\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./justjs.ts\n **/","/**\n * # UI-Router for Angular 2\n *\n * For the quick start repository, please see http://github.com/ui-router/quickstart-ng2\n * \n * Getting started:\n * \n * - Use npm. Add a dependency on latest `ui-router-ng2`\n * - Import UI-Router classes directly from `\"ui-router-ng2\"`\n *\n * ```js\n * import {StateRegistry} from \"ui-router-ng2\";\n * ```\n *\n * - When defining a component, add the [[UIROUTER_DIRECTIVES]] to `directives:` array.\n * - Either bootstrap a [[UiView]] component, or add a `<ui-view></ui-view>` viewport to your root component.\n * - Create application states (as defined by [[Ng2StateDeclaration]]) which will fill in the viewports.\n * - Create a [[UIRouterConfig]], and register your states in the [[UIRouterConfig.configure]] function.\n *\n * ```js\n * import {UIRouter} from \"ui-router-ng2\";\n * import {INITIAL_STATES} from \"./app.states\";\n * @ Injectable()\n * export class MyUIRouterConfig {\n *   configure(uiRouter: UIRouter) {\n *     INITIAL_STATES.forEach(function(state) {\n *       uiRouter.stateRegistry.register(state));\n *     });\n *   }\n * }\n * ```\n *\n * - When bootstrapping: include the [[UIROUTER_PROVIDERS]] and define a provider for your [[UIRouterConfig]]\n *\n * ```js\n * import {provide} from \"@angular/core\";\n * import {bootstrap} from 'angular2/platform/browser';\n * import {UIRouterConfig, UiView, UIROUTER_PROVIDERS} from \"ui-router-ng2\";\n * import {MyUIRouterConfig} from \"./router.config\";\n *\n * bootstrap(UiView, [\n *     ...UIROUTER_PROVIDERS,\n *     provide(UIRouterConfig, { useClass: MyUIRouterConfig })\n * ]);\n * ```\n *\n * @preferred @module ng2\n */ /** */\nimport {Provider, provide} from \"@angular/core\";\nimport {UIRouter} from \"../router\";\nimport {Node} from \"../path/node\";\nimport {StateRegistry} from \"../state/stateRegistry\";\nimport {StateService} from \"../state/stateService\";\nimport {TransitionService} from \"../transition/transitionService\";\nimport {UrlMatcherFactory} from \"../url/urlMatcherFactory\";\nimport {UrlRouter} from \"../url/urlRouter\";\nimport {ViewService} from \"../view/view\";\nimport {UiView} from \"./uiView\";\nimport {ng2ViewsBuilder, Ng2ViewConfig} from \"./viewsBuilder\";\nimport {Ng2ViewDeclaration} from \"./interface\";\nimport {UIRouterConfig} from \"./uiRouterConfig\";\nimport {UIRouterGlobals} from \"../globals\";\nimport {UIRouterLocation} from \"./location\";\n\nlet uiRouterFactory = (routerConfig: UIRouterConfig, location: UIRouterLocation) => {\n  let router = new UIRouter();\n\n  location.init();\n\n  router.viewService.viewConfigFactory(\"ng2\", (node: Node, config: Ng2ViewDeclaration) => new Ng2ViewConfig(node, config));\n  router.stateRegistry.decorator('views', ng2ViewsBuilder);\n\n  router.stateRegistry.stateQueue.autoFlush(router.stateService);\n\n  routerConfig.configure(router);\n\n  if (!router.urlRouterProvider.interceptDeferred) {\n    router.urlRouter.listen();\n    router.urlRouter.sync();\n  }\n\n  return router;\n};\n\n/**\n * The UI-Router providers, for use in your application bootstrap\n *\n * @example\n * ```js\n *\n * bootstrap(UiView, [\n *     ...UIROUTER_PROVIDERS,\n *     ...HTTP_PROVIDERS,\n *     provide(UIRouterConfig, { useClass: MyUIRouterConfig })\n * ]);\n * ```\n */\nexport const UIROUTER_PROVIDERS: Provider[] = [\n  provide(UIRouter, { useFactory: uiRouterFactory, deps: [UIRouterConfig, UIRouterLocation] }),\n\n  provide(UIRouterLocation, { useClass: UIRouterLocation }),\n\n  provide(StateService, { useFactory: (r: UIRouter) => { return r.stateService; }, deps: [UIRouter]}),\n\n  provide(TransitionService, { useFactory: (r: UIRouter) => { return r.transitionService; }, deps: [UIRouter]}),\n\n  provide(UrlMatcherFactory, { useFactory: (r: UIRouter) => { return r.urlMatcherFactory; }, deps: [UIRouter]}),\n\n  provide(UrlRouter, { useFactory: (r: UIRouter) => { return r.urlRouter; }, deps: [UIRouter]}),\n\n  provide(ViewService, { useFactory: (r: UIRouter) => { return r.viewService; }, deps: [UIRouter]}),\n\n  provide(StateRegistry, { useFactory: (r: UIRouter) => { return r.stateRegistry; }, deps: [UIRouter]}),\n\n  provide(UIRouterGlobals, { useFactory: (r: UIRouter) => { return r.globals; }, deps: [UIRouter]}),\n\n  provide(UiView.PARENT_INJECT, { useFactory: (r: StateRegistry) => { return { fqn: null, context: r.root() } }, deps: [StateRegistry]} )\n];\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/providers.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_55__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"@angular/core\",\"amd\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"commonjs\":\"@angular/core\"}\n ** module id = 55\n ** module chunks = 0 1\n **/","/** @module ng2_directives */ /** */\nimport {\n    Component, ComponentResolver, ComponentFactory,\n    ViewContainerRef, ReflectiveInjector\n} from '@angular/core';\nimport {provide} from \"@angular/core\";\nimport {Input} from \"@angular/core\";\nimport {ComponentRef} from \"@angular/core\";\nimport {Type} from \"@angular/core\";\n\nimport {UIRouter} from \"../router\";\nimport {trace} from \"../common/trace\";\nimport {Inject} from \"@angular/core\";\nimport {ViewContext, ViewConfig} from \"../view/interface\";\nimport {Ng2ViewDeclaration} from \"./interface\";\nimport {ng2ComponentInputs} from \"./componentUtil\";\nimport {Ng2ViewConfig} from \"./viewsBuilder\";\n\n/** @hidden */\nlet id = 0;\n\n// These are provide()d as the string UiView.PARENT_INJECT\nexport interface ParentUiViewInject {\n  context: ViewContext;\n  fqn: string;\n}\n\n/**\n * A UI-Router viewport directive, which is filled in by a view (component) on a state.\n *\n * ### Selector\n *\n * A `ui-view` directive can be created as an element: `<ui-view></ui-view>` or as an attribute: `<div ui-view></div>`.\n *\n * ### Purpose\n *\n * This directive is used in a Component template (or as the root component) to create a viewport.  The viewport\n * is filled in by a view (as defined by a [[Ng2ViewDeclaration]] inside a [[Ng2StateDeclaration]]) when the view's\n * state has been activated.\n *\n * @example\n * ```js\n *\n * // This app has two states, 'foo' and 'bar'\n * stateRegistry.register({ name: 'foo', url: '/foo', component: FooComponent });\n * stateRegistry.register({ name: 'bar', url: '/bar', component: BarComponent });\n * ```\n * ```html\n * <!-- This ui-view will be filled in by the foo state's component or\n *      the bar state's component when the foo or bar state is activated -->\n * <ui-view></ui-view>\n * ```\n *\n * ### Named ui-views\n *\n * A `ui-view` may optionally be given a name via the attribute value: `<div ui-view='header'></div>`.  *Note:\n * an unnamed `ui-view` is internally named `$default`*.   When a `ui-view` has a name, it will be filled in\n * by a matching named view.\n *\n * @example\n * ```js\n *\n * stateRegistry.register({\n *   name: 'foo',\n *   url: '/foo',\n *   views: { header: HeaderComponent, $default: FooComponent });\n * ```\n * ```html\n * <!-- When 'foo' state is active, filled by HeaderComponent -->\n * <div ui-view=\"header\"></div>\n *\n * <!-- When 'foo' state is active, filled by FooComponent -->\n * <ui-view></ui-view>\n * ```\n */\n@Component({\n  selector: 'ui-view, [ui-view]',\n  template: ''\n  // styles: [`\n  //   .done-true {\n  //     text-decoration: line-through;\n  //     color: grey;\n  //   }`\n  // ],\n  // template: `\n  // <div style=\"padding: 1em; border: 1px solid lightgrey;\">\n  //\n  //   <div #content style=\"color: lightgrey; font-size: smaller;\">\n  //     <div>ui-view #{{uiViewData?.id}} created by '{{ parentContext?.name || \"(root)\" }}' state</div>\n  //     <div>name: (absolute) '{{uiViewData?.fqn}}' (contextual) '{{uiViewData?.name}}@{{parentContext?.name}}' </div>\n  //     <div>currently filled by: '{{(uiViewData?.config && uiViewData?.config?.viewDecl?.$context) || 'empty...'}}'</div>\n  //   </div>\n  //\n  // </div>`\n})\nexport class UiView {\n  @Input('name') name: string;\n  @Input('ui-view') set _name(val) { this.name = val; }\n  componentRef: ComponentRef<any>;\n  deregister: Function;\n  uiViewData: any = {};\n\n  static PARENT_INJECT = \"UiView.PARENT_INJECT\";\n\n  constructor(\n      public router: UIRouter,\n      @Inject(UiView.PARENT_INJECT) public parent: ParentUiViewInject,\n      public compResolver: ComponentResolver,\n      public viewContainerRef: ViewContainerRef\n  ) { }\n\n  ngOnInit() {\n    let parentFqn = this.parent.fqn;\n    let name = this.name || '$default';\n\n    this.uiViewData = {\n      $type: 'ng2',\n      id: id++,\n      name: name,\n      fqn: parentFqn ? parentFqn + \".\" + name : name,\n      creationContext: this.parent.context,\n      configUpdated: this.viewConfigUpdated.bind(this),\n      config: undefined\n    };\n\n    this.deregister = this.router.viewService.registerUiView(this.uiViewData);\n  }\n\n  disposeLast() {\n    if (this.componentRef) this.componentRef.destroy();\n    this.componentRef = null;\n  }\n\n  ngOnDestroy() {\n    if (this.deregister) this.deregister();\n    this.disposeLast();\n  }\n\n  viewConfigUpdated(config: ViewConfig) {\n    if (!config) return this.disposeLast();\n    if (!(config instanceof Ng2ViewConfig)) return;\n\n    let uiViewData = this.uiViewData;\n    let viewDecl = <Ng2ViewDeclaration> config.viewDecl;\n\n    // The \"new\" viewconfig is already applied, so exit early\n    if (uiViewData.config === config) return;\n    // This is a new viewconfig.  Destroy the old component\n    this.disposeLast();\n    trace.traceUiViewConfigUpdated(uiViewData, config && config.viewDecl.$context);\n    uiViewData.config = config;\n    // The config may be undefined if there is nothing state currently targeting this UiView.\n    if (!config) return;\n\n    // Map resolves to \"useValue providers\"\n    let rc = config.node.resolveContext;\n    let resolvables = rc.getResolvables();\n    let rawProviders = Object.keys(resolvables).map(key => provide(key, { useValue: resolvables[key].data }));\n    rawProviders.push(provide(UiView.PARENT_INJECT, { useValue: { context: config.viewDecl.$context, fqn: uiViewData.fqn } }));\n\n    // Get the component class from the view declaration. TODO: allow promises?\n    let componentType = <Type> viewDecl.component;\n\n    let createComponent = (factory: ComponentFactory<any>) => {\n      let parentInjector = this.viewContainerRef.injector;\n      let childInjector = ReflectiveInjector.resolveAndCreate(rawProviders, parentInjector);\n      let ref = this.componentRef = this.viewContainerRef.createComponent(factory, undefined, childInjector);\n\n      // TODO: wire uiCanExit and uiOnParamsChanged callbacks\n\n      // Supply resolve data to matching @Input('prop') or inputs: ['prop']\n      let inputs = ng2ComponentInputs(componentType);\n      let bindings = viewDecl['bindings'] || {};\n\n      inputs.map(tuple => ({ prop: tuple.prop, resolve: bindings[tuple.prop] || tuple.resolve }))\n          .filter(tuple => resolvables[tuple.resolve] !== undefined)\n          .forEach(tuple => { ref.instance[tuple.prop] = resolvables[tuple.resolve].data });\n    };\n\n    this.compResolver.resolveComponent(componentType).then(createComponent);\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/uiView.ts\n **/","import {InputMetadata, ComponentMetadata} from \"@angular/core\";\n\nexport const ng2ComponentInputs = (ng2CompClass) => {\n  /** Get \"@Input('foo') _foo\" inputs */\n  let props = Reflect['getMetadata']('propMetadata', ng2CompClass);\n  let _props = Object.keys(props || {})\n      // -> { string, anno[] } tuples\n      .map(key => ({ key, annoArr: props[key] }))\n      // -> to { string, anno } tuples\n      .reduce((acc, tuple) => acc.concat(tuple.annoArr.map(anno => ({ key: tuple.key, anno }))), [])\n      // Only Inputs\n      .filter(tuple => tuple.anno instanceof InputMetadata)\n      // If they have a bindingPropertyName, i.e. \"@Input('foo') _foo\", then foo, else _foo\n      .map(tuple => ({ resolve: tuple.anno.bindingPropertyName || tuple.key, prop: tuple.key }));\n\n  /** Get \"inputs: ['foo']\" inputs */\n  let inputs = Reflect['getMetadata']('annotations', ng2CompClass)\n      // Find the ComponentMetadata class annotation\n      .filter(x => x instanceof ComponentMetadata && !!x.inputs)\n      // Get the .inputs string array\n      .map(x => x.inputs)\n      // Flatten\n      .reduce((acc, arr) => acc.concat(arr), [])\n      .map(input => ({ resolve: input, prop: input }));\n\n  return _props.concat(inputs);\n};\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/componentUtil.ts\n **/","/** @module ng2 */ /** */\nimport {State} from \"../state/stateObject\";\nimport {Node} from \"../path/node\";\nimport {pick, forEach} from \"../common/common\";\nimport {ViewConfig} from \"../view/interface\";\nimport {Ng2ViewDeclaration} from \"./interface\";\nimport {services} from \"../common/coreservices\";\nimport {ViewService} from \"../view/view\";\n\n/**\n * This is a [[StateBuilder.builder]] function for angular2 `views`.\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to ui-router-ng2.\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object and\n * applies the state-level configuration to a view named `$default`.\n */\nexport function ng2ViewsBuilder(state: State) {\n  let views = {}, viewsObject = state.views || {\"$default\": pick(state, \"component\")};\n\n  forEach(viewsObject, function (config, name) {\n    name = name || \"$default\"; // Account for views: { \"\": { template... } }\n    if (Object.keys(config).length == 0) return;\n\n    config.$type = \"ng2\";\n    config.$context = state;\n    config.$name = name;\n\n    let normalized = ViewService.normalizeUiViewTarget(config.$context, config.$name);\n    config.$uiViewName = normalized.uiViewName;\n    config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n\n    views[name] = config;\n  });\n  return views;\n}\n\nexport class Ng2ViewConfig implements ViewConfig {\n  loaded: boolean = true;\n\n  constructor(public node: Node, public viewDecl: Ng2ViewDeclaration) { }\n\n  load() {\n    return services.$q.when(this);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/viewsBuilder.ts\n **/","/** @module ng2 */ /** */\nimport {UIRouter} from \"../router\";\n/**\n * Provides states configuration to UI-Router during application bootstrap.\n * \n * An instance of this class should be `provide()`d to the application `bootstrap()`.\n *\n * @example\n * ```js\n * import {UIROUTER_PROVIDERS, UiView} from \"ui-router-ng2\";\n * import {MyConfig} from \"./app/myConfig\";\n *\n * bootstrap(UiView, [\n *   ...UIROUTER_PROVIDERS,\n *   provide(UIRouterConfig, { useClass: MyConfig }\n * ]);\n * ```\n *\n * The application's initial states should be registered with the [[UIRouter.stateRegistry]].\n * Any global configuration (transition hooks, parameter types, etc) should be done here.\n *\n * @example\n * ```js\n *\n * // myconfig.ts\n * import {STATES} from \"./states\";\n * import {registerAuthHook} from \"./hooks\";\n * import {registerSlugType} from \"./paramtypes\";\n *\n * export class MyConfig {\n *   configure(uiRouter: UIRouter) {\n *     STATES.forEach(state => uiRouter.stateRegistry.register(state));\n *     registerAuthHook(uiRouter.transitionService);\n *     registerSlugType(uiRouter.urlMatcherFactory);\n *   }\n * }\n *\n * // states.ts\n * import {FooComponent} from \"./foo.component\";\n * import {BarComponent} from \"./bar.component\";\n * import BAZ_MODULE_STATES from \"./baz/states\";\n *\n * export let STATES = [\n *   { name: 'foo', url: '/url', component: FooComponent},\n *   { name: 'bar', url: '/bar', component: BarComponent}\n * ].concat(BAZ_MODULE_STATES);\n *\n * // hooks.ts\n * export function registerAuthHook(transitionService: TransitionService) {\n *   let requireAuthentication = ($state, AuthService) {\n *     if (!AuthService.isAuthenticated()) {\n *       return $state.target('login');\n *     }\n *   }\n *   transitionService.onBefore({ to: (state) => state.requiresAuth }, requireAuthentication);\n * }\n *\n *\n * // paramtypes.ts\n * export function registerSlugType(urlMatcherFactory: UrlMatcherFactory) {\n *   let builtInStringType = urlMatcherFactory.type('string');\n *   let slugType = Object.assign({}, builtInStringType, { encode: (str) => str, decode: (str) => str });\n *   urlMatcherFactory.type('slug', slugType);\n * }\n * ```\n *\n */\nexport class UIRouterConfig {\n  /**\n   * Configures UI-Router before bootstrap\n   *\n   * An app should perform UI-Router configuration here, such as registering the initial set of states,\n   * parameter types, defining global hooks, etc.\n   *\n   * @param uiRouter the uiRouter instance being configured\n   */\n  public configure(uiRouter: UIRouter) {\n\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/uiRouterConfig.ts\n **/","import {HashLocationStrategy, PlatformLocation, LocationStrategy} from \"@angular/common\";\nimport {Injectable} from \"@angular/core\";\n\nimport {services} from \"../common/coreservices\";\nimport {isDefined} from \"../common/predicates\";\nimport {applyPairs} from \"../common/common\";\nimport {beforeAfterSubstr} from \"../common/strings\";\n\nconst splitOnHash = beforeAfterSubstr(\"#\");\nconst splitOnEquals = beforeAfterSubstr(\"=\");\nconst splitOnQuestionMark = beforeAfterSubstr(\"?\");\n\n@Injectable()\nexport class UIRouterLocation {\n  isHashBang: boolean;\n  hashPrefix: string = \"\";\n\n  constructor(\n      public locationStrategy: LocationStrategy,\n      public platformLocation: PlatformLocation\n  ) {\n    this.isHashBang = locationStrategy instanceof HashLocationStrategy;\n  }\n\n  init() {\n    let loc = <any> services.location;\n    let locSt = this.locationStrategy;\n\n    if (this.isHashBang) {\n      loc.hash = () =>\n          splitOnHash(splitOnHash(this.platformLocation.hash)[1])[1];\n    } else {\n      loc.hash = () =>\n          splitOnHash(this.platformLocation.hash)[1];\n    }\n\n    loc.path = () =>\n        splitOnHash(splitOnQuestionMark(locSt.path())[0])[0];\n\n    loc.search = () => {\n      let queryString = splitOnHash(splitOnQuestionMark(locSt.path())[1])[0];\n      return queryString.split(\"&\").map(kv => splitOnEquals(kv)).reduce(applyPairs, {});\n    };\n\n    loc.url = (url) => {\n      if(isDefined(url)) {\n        let split = splitOnQuestionMark(url);\n        locSt.pushState(null, null, split[0], split[1]);\n      }\n      return locSt.path()\n    };\n\n    loc.replace = () => {\n      console.log(new Error('$location.replace() not impl'))\n    };\n\n    loc.onChange = cb => locSt.onPopState(cb);\n\n    let locCfg = <any> services.locationConfig;\n\n    locCfg.port = () => null;\n    locCfg.protocol = () => null;\n    locCfg.host = () => null;\n    locCfg.baseHref = () => locSt.getBaseHref();\n    locCfg.html5Mode = () => !this.isHashBang;\n    locCfg.hashPrefix = (newprefix: string): string => {\n      if(isDefined(newprefix)) {\n        this.hashPrefix = newprefix;\n      }\n      return this.hashPrefix;\n    };\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/location.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_61__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"@angular/common\",\"amd\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"commonjs\":\"@angular/common\"}\n ** module id = 61\n ** module chunks = 0 1\n **/","/**\n * The UI-Router Angular 2 directives:\n *\n * - [[UiView]]: A viewport for routed components\n * - [[UiSref]]: A state ref to a target state; navigates when clicked\n * - [[UiSrefActive]]: (and `UiSrefActiveEq`) Adds a css class when a UiSref's target state (or a child state) is active\n *\n * @preferred @module ng2_directives\n */ /** */\nimport {UiSref, AnchorUiSref} from \"../ng2/uiSref\";\nimport {UiSrefActive} from \"../ng2/uiSrefActive\";\nimport {UiView} from \"../ng2/uiView\";\nimport {UiSrefStatus} from \"./uiSrefStatus\";\n\nexport * from \"./uiView\";\nexport * from \"./uiSref\";\nexport * from \"./uiSrefStatus\";\nexport * from \"./uiSrefActive\";\n\n/**\n * References to the UI-Router directive classes, for use within a @Component's `directives:` property\n *\n * @example\n * ```js\n *\n * Component({\n *   selector: 'my-cmp',\n *   directives: [UIROUTER_DIRECTIVES],\n *   template: '<a uiSref=\"foo\">Foo</a>'\n * })\n * ```\n */\nexport let UIROUTER_DIRECTIVES = [UiSref, AnchorUiSref, UiView, UiSrefActive, UiSrefStatus];\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/directives.ts\n **/","/** @module ng2_directives */ /** */\nimport {UIRouter} from \"../router\";\nimport {Directive, Inject, Input} from \"@angular/core\";\nimport {Optional} from \"@angular/core\";\nimport {ElementRef} from \"@angular/core\";\nimport {Renderer} from \"@angular/core\";\nimport {UiView, ParentUiViewInject} from \"./uiView\";\nimport {extend} from \"../common/common\";\n\n/** @hidden */\n@Directive({ selector: 'a[uiSref]' })\nexport class AnchorUiSref {\n  constructor(public _el: ElementRef, public _renderer: Renderer) { }\n  update(href) {\n    this._renderer.setElementProperty(this._el.nativeElement, 'href', href);\n  }\n}\n\n/**\n * A directive when clicked, initiates a [[Transition]] to a [[TargetState]].\n *\n * ### Purpose\n *\n * This directive is applied to anchor tags (`<a>`) or any other clickable element.  It is a state reference (or sref --\n * similar to an href).  When clicked, the directive will transition to that state by calling [[StateService.go]], \n * and optionally supply state parameter values and transition options.\n *\n * When this directive is on an anchor tag, it will also add an `href` attribute to the anchor.\n *\n * ### Selector\n *\n * - `[uiSref]`: The directive is created as an attribute on an element, e.g., `<a uiSref></a>`\n * \n * ### Inputs\n * \n * - `uiSref`: the target state's name, e.g., `uiSref=\"foostate\"`.  If a component template uses a relative `uiSref`,\n * e.g., `uiSref=\".child\"`, the reference is relative to that component's state.\n *\n * - `uiParams`: any target state parameter values, as an object, e.g., `[uiParams]=\"{ fooId: bar.fooId }\"`\n *\n * - `uiOptions`: [[TransitionOptions]], e.g., `[uiOptions]=\"{ inherit: false }\"`\n *\n * @example\n * ```html\n *\n * <!-- Targets bar state' -->\n * <a uiSref=\"bar\">Bar</a>\n *\n * <!-- Assume this component's state is \"foo\".\n *      Relatively targets \"foo.child\" -->\n * <a uiSref=\".child\">Foo Child</a>\n *\n * <!-- Targets \"bar\" state and supplies parameter value -->\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\">Bar {{foo.barId}}</a>\n *\n * <!-- Targets \"bar\" state and parameter, doesn't inherit existing parameters-->\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\" [uiOptions]=\"{ inherit: false }\">Bar {{foo.barId}}</a>\n * ```\n */\n@Directive({\n  selector: '[uiSref]',\n  host: { '(click)': 'go()' }\n})\nexport class UiSref {\n  @Input('uiSref') state: string;\n  @Input('uiParams') params: any;\n  @Input('uiOptions') options: any;\n\n  constructor(\n      private _router: UIRouter,\n      @Inject(UiView.PARENT_INJECT) public parent: ParentUiViewInject,\n      @Optional() private _anchorUiSref: AnchorUiSref\n  ) { }\n\n  set \"uiSref\"(val) { this.state = val; this.update(); }\n  set \"uiParams\"(val) { this.params = val; this.update(); }\n  set \"uiOptions\"(val) { this.options = val; this.update(); }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  update() {\n    if (this._anchorUiSref) {\n      this._anchorUiSref.update(this._router.stateService.href(this.state, this.params, this.getOptions()));\n    }\n  }\n\n  getOptions() {\n    let defOpts = { relative: this.parent && this.parent.context && this.parent.context.name, inherit: true };\n    return extend(defOpts, this.options || {});\n  }\n\n  go() {\n    this._router.stateService.go(this.state, this.params, this.getOptions());\n    return false;\n  }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/uiSref.ts\n **/","/** @module ng2_directives */ /** */\nimport {Directive, Input, ElementRef, Host, Renderer} from \"@angular/core\";\nimport {UiSrefStatus, SrefStatus} from \"./uiSrefStatus\";\n\n/**\n * A directive that adds a CSS class when a `uiSref` is active.\n *\n * ### Purpose\n *\n * This directive should be paired with a [[UiSref]], and is used to apply a CSS class to the element when\n * the state that the `uiSref` targets is active.\n *\n * ### Selectors\n *\n * - `[uiSrefActive]`: When this selector is used, the class is added when the target state or any\n * child of the target state is active\n * - `[uiSrefActiveEq]`: When this selector is used, the class is added when the target state is directly active\n *\n * ### Inputs\n *\n * - `uiSrefActive`/`uiSrefActiveEq`: one or more CSS classes to add to the element, when active\n *\n * @example\n * ```html\n *\n * <a uiSref=\"foo\" uiSrefActive=\"active\">Foo</a>\n * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: bar.id }\" uiSrefActive=\"active\">Foo Bar #{{bar.id}}</a>\n * ```\n */\n@Directive({\n  selector: '[uiSrefActive],[uiSrefActiveEq]'\n})\nexport class UiSrefActive {\n\n  private _classes: string[] = [];\n  @Input('uiSrefActive') set active(val) { this._classes = val.split(\"\\s+\")};\n\n  private _classesEq: string[] = [];\n  @Input('uiSrefActiveEq') set activeEq(val) { this._classesEq = val.split(\"\\s+\")};\n\n  constructor(uiSrefStatus: UiSrefStatus, rnd: Renderer, @Host() host: ElementRef) {\n    uiSrefStatus.uiSrefStatus.subscribe((next: SrefStatus) => {\n      this._classes.forEach(cls => rnd.setElementClass(host.nativeElement, cls, next.active));\n      this._classesEq.forEach(cls => rnd.setElementClass(host.nativeElement, cls, next.exact));\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/uiSrefActive.ts\n **/","/** @module ng2_directives */ /** */\nimport {Directive, Output, EventEmitter} from \"@angular/core\";\nimport {StateService} from \"../state/stateService\";\nimport {UiSref} from \"./uiSref\";\nimport {Node} from \"../path/node\";\nimport {TransitionService} from \"../transition/transitionService\";\nimport {Transition} from \"../transition/transition\";\nimport {TargetState} from \"../state/targetState\";\nimport {TreeChanges} from \"../transition/interface\";\nimport {State} from \"../state/stateObject\";\nimport {anyTrueR, tail, unnestR} from \"../common/common\";\nimport {UIRouterGlobals} from \"../globals\";\nimport {Param} from \"../params/param\";\nimport {PathFactory} from \"../path/pathFactory\";\n\n/**\n * uiSref status booleans \n */\nexport interface SrefStatus {\n  /** The sref's target state (or one of its children) is currently active */\n  active: boolean;\n  /** The sref's target state is currently active */\n  exact: boolean;\n  /** A transition is entering the sref's target state */\n  entering: boolean;\n  /** A transition is exiting the sref's target state */\n  exiting: boolean;\n}\n\n/**\n * A directive (which pairs with a [[UiSref]]) and emits events when the UiSref status changes.\n *\n * This directive is used by the [[UiSrefActive]] directive.\n * \n * The event emitted is of type [[SrefStatus]], and has boolean values for `active`, `exact`, `entering`, and `exiting`\n * \n * The values from this event can be captured and stored on a component, then applied (perhaps using ngClass).\n *\n * This API is subject to change.\n */\n@Directive({ selector: '[uiSrefStatus],[uiSrefActive],[uiSrefActiveEq]' })\nexport class UiSrefStatus {\n  private _deregisterHook;\n\n  // current statuses of the state/params the uiSref directive is linking to\n  @Output(\"uiSrefStatus\") uiSrefStatus = new EventEmitter<SrefStatus>(false);\n\n  status: SrefStatus = {\n    active: false,\n    exact: false,\n    entering: false,\n    exiting: false\n  };\n\n  constructor(transitionService: TransitionService,\n              private _globals: UIRouterGlobals,\n              private _stateService: StateService,\n              public sref: UiSref) {\n    this._deregisterHook = transitionService.onStart({}, $transition$ => this.processTransition($transition$));\n  }\n\n  ngOnInit() {\n    let lastTrans = this._globals.transitionHistory.peekTail();\n    if (lastTrans != null) {\n      this.processTransition(lastTrans);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._deregisterHook) {\n      this._deregisterHook();\n    }\n    this._deregisterHook = null;\n  }\n\n  private _setStatus(status: SrefStatus) {\n    this.status = status;\n    this.uiSrefStatus.emit(status);\n  }\n\n  private processTransition($transition$: Transition) {\n    let sref = this.sref;\n\n    let status: SrefStatus = <any> {\n      active: false,\n      exact: false,\n      entering: false,\n      exiting: false\n    };\n\n    let srefTarget: TargetState = this._stateService.target(sref.state, sref.params, sref.getOptions());\n    if (!srefTarget.exists()) {\n      return this._setStatus(status);\n    }\n\n\n    /**\n     * Returns a Predicate<Node[]> that returns true when the target state (and any param values)\n     * match the (tail of) the path, and the path's param values\n     */\n    const pathMatches = (target: TargetState) => {\n      let state: State = target.$state();\n      let targetParamVals = target.params();\n      let targetPath: Node[] = PathFactory.buildPath(target);\n      let paramSchema: Param[] = targetPath.map(node => node.paramSchema)\n          .reduce(unnestR, [])\n          .filter((param: Param) => targetParamVals.hasOwnProperty(param.id));\n\n      return (path: Node[]) => {\n        let tailNode = tail(path);\n        if (!tailNode || tailNode.state !== state) return false;\n        var paramValues = PathFactory.paramValues(path);\n        return Param.equals(paramSchema, paramValues, targetParamVals);\n      };\n    };\n\n    const isTarget = pathMatches(srefTarget);\n\n    /**\n     * Given path: [c, d] appendTo: [a, b]),\n     * Expands the path to [c], [c, d]\n     * Then appends each to [a,b,] and returns: [a, b, c], [a, b, c, d]\n     */\n    function spreadToSubPaths (path: Node[], appendTo: Node[] = []): Node[][] {\n      return path.map(node => appendTo.concat(PathFactory.subPath(path, node.state)));\n    }\n\n    let tc: TreeChanges = $transition$.treeChanges();\n    status.active = spreadToSubPaths(tc.from).map(isTarget).reduce(anyTrueR, false);\n    status.exact = isTarget(tc.from);\n    status.entering = spreadToSubPaths(tc.entering, tc.retained).map(isTarget).reduce(anyTrueR, false);\n    status.exiting = spreadToSubPaths(tc.exiting, tc.retained).map(isTarget).reduce(anyTrueR, false);\n\n    if ($transition$.isActive()) {\n      this._setStatus(status);\n    }\n\n    let update = (currentPath: Node[]) => () => {\n      if (this._deregisterHook == null) return; // destroyed\n      if (!$transition$.isActive()) return; // superseded\n      status.active = spreadToSubPaths(currentPath).map(isTarget).reduce(anyTrueR, false);\n      status.exact = isTarget(currentPath);\n      status.entering = status.exiting = false;\n      this._setStatus(status);\n    };\n\n    $transition$.promise.then(update(tc.to), update(tc.from));\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2/uiSrefStatus.ts\n **/"],"sourceRoot":""}